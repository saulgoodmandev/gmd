{
	"id": "8fafdec88c147f76d4e3e0aad4fab566",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.12",
	"solcLongVersion": "0.8.12+commit.f00d7308",
	"input": {
		"language": "Solidity",
		"sources": {
			"GMD_flat.sol": {
				"content": "\n// File: @openzeppelin/contracts/security/ReentrancyGuard.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/SafeMath.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n\n// File: contracts/final/GMD.sol\n\n\n\npragma solidity 0.8.12;\n\n\n\n\n\n\ncontract GMD is ERC20(\"GMD\", \"GMD\"), Ownable , ReentrancyGuard{ \n\n    constructor() {\n        _mint(msg.sender, 50000 * 10 ** decimals());\n    }\n    using SafeERC20 for IERC20;\n    using SafeMath for uint256;\n\n    struct UserInfo  {\n        uint256 totalMinted;\n        uint256 lastInteractionTime;\n        uint256 VestPeriod;\n    }\n\n    mapping(address => UserInfo) public userInfo;\n\n    uint256 public mintPrice = 1000;\n    uint256 public mintCap = 0;\n    uint256 public vestingPeriod = 5 days;\n    bool public mintOpen = false;\n    IERC20 public USDC = IERC20(0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8);\n\n\n    function burn(uint256 _amount) external  {\n        _burn(msg.sender, _amount);\n    }\n\n    function setMintCap(uint256 _mintCap) external onlyOwner {\n        mintCap = _mintCap;\n    }\n\n    \n    function setMintPrice(uint256 _mintPrice) external onlyOwner {\n        require(_mintPrice >= mintPrice, \"can't be lower than last mint\");\n        mintPrice = _mintPrice;\n    }\n\n    function setVestingPeriod(uint256 _period) external onlyOwner {\n        vestingPeriod = _period;\n    }\n\n    function claimableTokens(address _address) external view returns(uint256) {\n        uint256 timePass = block.timestamp.sub(userInfo[_address].lastInteractionTime);\n        uint256 claimable;\n        if (timePass >= userInfo[msg.sender].VestPeriod){\n            claimable = userInfo[_address].totalMinted;\n        }\n        else {\n            claimable = userInfo[_address].totalMinted.mul(timePass).div(userInfo[_address].VestPeriod);\n        }\n        return claimable;\n    }\n\n\n    function setOpenMint(bool _mintOpen) external onlyOwner {\n        mintOpen = _mintOpen;\n    }\n\n    function recoverTreasuryTokens() external onlyOwner {\n        USDC.safeTransfer(owner(), USDC.balanceOf(address(this)));\n    }\n\n\n    function mint(uint256 _amount) external nonReentrant {\n\n        require(_amount <= 2000000000, \"max 2000 usdc per tx\");\n        require(mintOpen, \"mint not opened\");\n        require(USDC.balanceOf(msg.sender) >= _amount, \"USDC balance too low\");\n        uint256 _amountin = _amount.mul(10**12);\n        uint256 amountOut = _amountin.mul(1000).div(mintPrice);\n        \n        require(this.totalSupply().add(amountOut) <= mintCap, \"over mint cap\");\n        userInfo[msg.sender].totalMinted = userInfo[msg.sender].totalMinted.add(amountOut);\n        userInfo[msg.sender].lastInteractionTime = block.timestamp;\n        userInfo[msg.sender].VestPeriod = vestingPeriod;\n\n        _mint(address(this), amountOut);\n        USDC.safeTransferFrom(msg.sender, address(this), _amount);\n    }\n\n    function claim() external nonReentrant {\n\n        require(userInfo[msg.sender].totalMinted > 0, \"no mint\");\n        uint256 timePass = block.timestamp.sub(userInfo[msg.sender].lastInteractionTime);\n        uint256 claimable;\n        if (timePass >= userInfo[msg.sender].VestPeriod){\n            claimable = userInfo[msg.sender].totalMinted;\n            userInfo[msg.sender].VestPeriod = 0;\n        }\n        else {\n            claimable = userInfo[msg.sender].totalMinted.mul(timePass).div(userInfo[msg.sender].VestPeriod);\n            userInfo[msg.sender].VestPeriod = userInfo[msg.sender].VestPeriod.sub(timePass);\n            \n        }\n        userInfo[msg.sender].totalMinted = userInfo[msg.sender].totalMinted.sub(claimable);\n        userInfo[msg.sender].lastInteractionTime = block.timestamp;\n\n        this.transfer(msg.sender, claimable);\n    }\n\n    function remainingMintableTokens() external view returns(uint256){\n        \n        return mintCap.sub(this.totalSupply());\n    }\n\n    function remainingVestedTime() external view returns(uint256){\n        uint256 timePass = block.timestamp.sub(userInfo[msg.sender].lastInteractionTime);\n        if (timePass >= userInfo[msg.sender].VestPeriod){\n            return 0;\n        }\n        else {\n            return userInfo[msg.sender].VestPeriod.sub(timePass);\n        }\n        \n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"GMD_flat.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GMD_flat.sol\":9720:17831  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"GMD_flat.sol\":9720:17831  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220964ebb77ef1f0eb2df0c35cb1c6a56ece7ea90ce5b71820af53a4ab14efcc3e764736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220964ebb77ef1f0eb2df0c35cb1c6a56ece7ea90ce5b71820af53a4ab14efcc3e764736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0x4E 0xBB PUSH24 0xEF1F0EB2DF0C35CB1C6A56ECE7EA90CE5B71820AF53A4AB1 0x4E 0xFC 0xC3 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "9720:8111:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;9720:8111:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220964ebb77ef1f0eb2df0c35cb1c6a56ece7ea90ce5b71820af53a4ab14efcc3e764736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0x4E 0xBB PUSH24 0xEF1F0EB2DF0C35CB1C6A56ECE7EA90CE5B71820AF53A4AB1 0x4E 0xFC 0xC3 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "9720:8111:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9720,
									"end": 17831,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9720,
									"end": 17831,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220964ebb77ef1f0eb2df0c35cb1c6a56ece7ea90ce5b71820af53a4ab14efcc3e764736f6c634300080c0033",
									".code": [
										{
											"begin": 9720,
											"end": 17831,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 17831,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 17831,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 17831,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9720,
											"end": 17831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9720,
											"end": 17831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 17831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9720,
											"end": 17831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 17831,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GMD_flat.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GMD_flat.sol\":{\"keccak256\":\"0x9f58f774b08b0fb154ee27a7c4bd598806cc666bf3c2289ab083f5fd3880ba54\",\"urls\":[\"bzz-raw://a6cc7c50e87d8fba13c9c7701d219795015b4efceedec5071d63128ec7207370\",\"dweb:/ipfs/QmPRHCdRnRbqcqK5RXD3p9eGhi3rnwSDVXkVEVyWa3uFPg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GMD_flat.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GMD_flat.sol\":{\"keccak256\":\"0x9f58f774b08b0fb154ee27a7c4bd598806cc666bf3c2289ab083f5fd3880ba54\",\"urls\":[\"bzz-raw://a6cc7c50e87d8fba13c9c7701d219795015b4efceedec5071d63128ec7207370\",\"dweb:/ipfs/QmPRHCdRnRbqcqK5RXD3p9eGhi3rnwSDVXkVEVyWa3uFPg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GMD_flat.sol\":32832:44046  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"GMD_flat.sol\":33407:33520  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"GMD_flat.sol\":33473:33486  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"GMD_flat.sol\":33473:33478  _name */\n  0x03\n  swap1\n    /* \"GMD_flat.sol\":33473:33486  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"GMD_flat.sol\":33496:33513  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"GMD_flat.sol\":33496:33503  _symbol */\n  0x04\n  swap1\n    /* \"GMD_flat.sol\":33496:33513  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"GMD_flat.sol\":33407:33520  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"GMD_flat.sol\":32832:44046  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_37:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_38:\n    /* \"#utility.yul\":1354:1415   */\n  tag_39\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_41\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_11:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_43:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  eq\n    /* \"#utility.yul\":1816:1977   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"GMD_flat.sol\":32832:44046  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GMD_flat.sol\":32832:44046  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"GMD_flat.sol\":33585:33683  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GMD_flat.sol\":35862:36059  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"GMD_flat.sol\":35862:36059  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"GMD_flat.sol\":34673:34779  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"GMD_flat.sol\":34760:34772  _totalSupply */\n      sload(0x02)\n        /* \"GMD_flat.sol\":34673:34779  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"GMD_flat.sol\":34673:34779  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"GMD_flat.sol\":36621:36907  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"GMD_flat.sol\":34522:34613  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"GMD_flat.sol\":34604:34606  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"GMD_flat.sol\":34522:34613  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"GMD_flat.sol\":37302:37536  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"GMD_flat.sol\":34837:34962  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":34937:34955  _balances[account] */\n      and\n        /* \"GMD_flat.sol\":34911:34918  uint256 */\n      0x00\n        /* \"GMD_flat.sol\":34937:34955  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"GMD_flat.sol\":34837:34962  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"GMD_flat.sol\":33796:33898  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"GMD_flat.sol\":38023:38450  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"GMD_flat.sol\":35158:35347  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"GMD_flat.sol\":35405:35554  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"GMD_flat.sol\":33585:33683  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"GMD_flat.sol\":33639:33652  string memory */\n      0x60\n        /* \"GMD_flat.sol\":33671:33676  _name */\n      0x03\n        /* \"GMD_flat.sol\":33664:33676  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"GMD_flat.sol\":33585:33683  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"GMD_flat.sol\":35862:36059  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"GMD_flat.sol\":35945:35949  bool */\n      0x00\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":35999:36031  _approve(owner, spender, amount) */\n      tag_73\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      dup2\n        /* \"GMD_flat.sol\":36015:36022  spender */\n      dup6\n        /* \"GMD_flat.sol\":36024:36030  amount */\n      dup6\n        /* \"GMD_flat.sol\":35999:36007  _approve */\n      tag_74\n        /* \"GMD_flat.sol\":35999:36031  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"GMD_flat.sol\":36048:36052  true */\n      0x01\n      swap4\n        /* \"GMD_flat.sol\":35862:36059  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GMD_flat.sol\":36621:36907  function transferFrom(... */\n    tag_32:\n        /* \"GMD_flat.sol\":36748:36752  bool */\n      0x00\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":36804:36842  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"GMD_flat.sol\":36820:36824  from */\n      dup6\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      dup3\n        /* \"GMD_flat.sol\":36835:36841  amount */\n      dup6\n        /* \"GMD_flat.sol\":36804:36819  _spendAllowance */\n      tag_79\n        /* \"GMD_flat.sol\":36804:36842  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"GMD_flat.sol\":36852:36879  _transfer(from, to, amount) */\n      tag_80\n        /* \"GMD_flat.sol\":36862:36866  from */\n      dup6\n        /* \"GMD_flat.sol\":36868:36870  to */\n      dup6\n        /* \"GMD_flat.sol\":36872:36878  amount */\n      dup6\n        /* \"GMD_flat.sol\":36852:36861  _transfer */\n      tag_81\n        /* \"GMD_flat.sol\":36852:36879  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"GMD_flat.sol\":36896:36900  true */\n      0x01\n      swap5\n        /* \"GMD_flat.sol\":36621:36907  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GMD_flat.sol\":37302:37536  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"GMD_flat.sol\":37390:37394  bool */\n      0x00\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":37444:37508  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      dup2\n        /* \"GMD_flat.sol\":37460:37467  spender */\n      dup6\n        /* \"GMD_flat.sol\":37497:37507  addedValue */\n      dup6\n        /* \"GMD_flat.sol\":37469:37494  allowance(owner, spender) */\n      tag_86\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      dup4\n        /* \"GMD_flat.sol\":37460:37467  spender */\n      dup4\n        /* \"GMD_flat.sol\":37469:37478  allowance */\n      tag_61\n        /* \"GMD_flat.sol\":37469:37494  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"GMD_flat.sol\":37469:37507  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"GMD_flat.sol\":37444:37452  _approve */\n      tag_74\n        /* \"GMD_flat.sol\":37444:37508  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"GMD_flat.sol\":33796:33898  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"GMD_flat.sol\":33852:33865  string memory */\n      0x60\n        /* \"GMD_flat.sol\":33884:33891  _symbol */\n      0x04\n        /* \"GMD_flat.sol\":33877:33891  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"GMD_flat.sol\":38023:38450  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"GMD_flat.sol\":38116:38120  bool */\n      0x00\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":38116:38120  bool */\n      dup2\n        /* \"GMD_flat.sol\":38197:38222  allowance(owner, spender) */\n      tag_98\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      dup3\n        /* \"GMD_flat.sol\":38214:38221  spender */\n      dup7\n        /* \"GMD_flat.sol\":38197:38206  allowance */\n      tag_61\n        /* \"GMD_flat.sol\":38197:38222  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"GMD_flat.sol\":38170:38222  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"GMD_flat.sol\":38260:38275  subtractedValue */\n      dup4\n        /* \"GMD_flat.sol\":38240:38256  currentAllowance */\n      dup2\n        /* \"GMD_flat.sol\":38240:38275  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"GMD_flat.sol\":38232:38317  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"GMD_flat.sol\":38232:38317  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3204:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x25\n        /* \"#utility.yul\":3241:3259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3234:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3334   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3280:3298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3273:3335   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3351:3369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3344:3379   */\n      mstore\n        /* \"#utility.yul\":3396:3415   */\n      0x84\n      add\n        /* \"GMD_flat.sol\":38232:38317  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"GMD_flat.sol\":38351:38411  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"GMD_flat.sol\":38360:38365  owner */\n      dup3\n        /* \"GMD_flat.sol\":38367:38374  spender */\n      dup7\n        /* \"GMD_flat.sol\":38395:38410  subtractedValue */\n      dup7\n        /* \"GMD_flat.sol\":38376:38392  currentAllowance */\n      dup5\n        /* \"GMD_flat.sol\":38376:38410  currentAllowance - subtractedValue */\n      sub\n        /* \"GMD_flat.sol\":38351:38359  _approve */\n      tag_74\n        /* \"GMD_flat.sol\":38351:38411  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"GMD_flat.sol\":35158:35347  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"GMD_flat.sol\":35237:35241  bool */\n      0x00\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":35291:35319  _transfer(owner, to, amount) */\n      tag_73\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      dup2\n        /* \"GMD_flat.sol\":35308:35310  to */\n      dup6\n        /* \"GMD_flat.sol\":35312:35318  amount */\n      dup6\n        /* \"GMD_flat.sol\":35291:35300  _transfer */\n      tag_81\n        /* \"GMD_flat.sol\":35291:35319  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"GMD_flat.sol\":35405:35554  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":35520:35538  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"GMD_flat.sol\":35494:35501  uint256 */\n      0x00\n        /* \"GMD_flat.sol\":35520:35538  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":35520:35531  _allowances */\n      0x01\n        /* \"GMD_flat.sol\":35520:35538  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"GMD_flat.sol\":35520:35547  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"GMD_flat.sol\":35405:35554  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"GMD_flat.sol\":41539:41909  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":41670:41689  owner != address(0) */\n      dup4\n      and\n        /* \"GMD_flat.sol\":41662:41730  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"GMD_flat.sol\":41662:41730  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3610:3631   */\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x24\n        /* \"#utility.yul\":3647:3665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3640:3670   */\n      mstore\n        /* \"#utility.yul\":3706:3740   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3686:3704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3679:3741   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3757:3775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3750:3784   */\n      mstore\n        /* \"#utility.yul\":3801:3820   */\n      0x84\n      add\n        /* \"GMD_flat.sol\":41662:41730  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3426:3826   */\n      jump\n        /* \"GMD_flat.sol\":41662:41730  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":41748:41769  spender != address(0) */\n      dup3\n      and\n        /* \"GMD_flat.sol\":41740:41808  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"GMD_flat.sol\":41740:41808  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4015:4036   */\n      mstore\n        /* \"#utility.yul\":4072:4074   */\n      0x22\n        /* \"#utility.yul\":4052:4070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4045:4075   */\n      mstore\n        /* \"#utility.yul\":4111:4145   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4091:4109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4084:4146   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4162:4180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4155:4187   */\n      mstore\n        /* \"#utility.yul\":4204:4223   */\n      0x84\n      add\n        /* \"GMD_flat.sol\":41740:41808  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3831:4229   */\n      jump\n        /* \"GMD_flat.sol\":41740:41808  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":41819:41837  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":41819:41830  _allowances */\n      0x01\n        /* \"GMD_flat.sol\":41819:41837  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"GMD_flat.sol\":41819:41846  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"GMD_flat.sol\":41819:41855  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"GMD_flat.sol\":41870:41902  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":41870:41902  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"GMD_flat.sol\":41870:41902  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"GMD_flat.sol\":41539:41909  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GMD_flat.sol\":42190:42631  function _spendAllowance(... */\n    tag_79:\n        /* \"GMD_flat.sol\":42320:42344  uint256 currentAllowance */\n      0x00\n        /* \"GMD_flat.sol\":42347:42372  allowance(owner, spender) */\n      tag_117\n        /* \"GMD_flat.sol\":42357:42362  owner */\n      dup5\n        /* \"GMD_flat.sol\":42364:42371  spender */\n      dup5\n        /* \"GMD_flat.sol\":42347:42356  allowance */\n      tag_61\n        /* \"GMD_flat.sol\":42347:42372  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"GMD_flat.sol\":42320:42372  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"GMD_flat.sol\":42386:42402  currentAllowance */\n      dup2\n        /* \"GMD_flat.sol\":42386:42423  currentAllowance != type(uint256).max */\n      eq\n        /* \"GMD_flat.sol\":42382:42625  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"GMD_flat.sol\":42467:42473  amount */\n      dup2\n        /* \"GMD_flat.sol\":42447:42463  currentAllowance */\n      dup2\n        /* \"GMD_flat.sol\":42447:42473  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"GMD_flat.sol\":42439:42507  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"GMD_flat.sol\":42439:42507  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4418:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x1d\n        /* \"#utility.yul\":4455:4473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4448:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4545   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4494:4512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4487:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"GMD_flat.sol\":42439:42507  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4234:4587   */\n      jump\n        /* \"GMD_flat.sol\":42439:42507  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"GMD_flat.sol\":42549:42600  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"GMD_flat.sol\":42558:42563  owner */\n      dup5\n        /* \"GMD_flat.sol\":42565:42572  spender */\n      dup5\n        /* \"GMD_flat.sol\":42593:42599  amount */\n      dup5\n        /* \"GMD_flat.sol\":42574:42590  currentAllowance */\n      dup5\n        /* \"GMD_flat.sol\":42574:42599  currentAllowance - amount */\n      sub\n        /* \"GMD_flat.sol\":42549:42557  _approve */\n      tag_74\n        /* \"GMD_flat.sol\":42549:42600  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"GMD_flat.sol\":42310:42631  {... */\n      pop\n        /* \"GMD_flat.sol\":42190:42631  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GMD_flat.sol\":38904:39555  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":39030:39048  from != address(0) */\n      dup4\n      and\n        /* \"GMD_flat.sol\":39022:39090  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"GMD_flat.sol\":39022:39090  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4776:4797   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x25\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4806:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4906   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4852:4870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4845:4907   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4923:4941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4916:4951   */\n      mstore\n        /* \"#utility.yul\":4968:4987   */\n      0x84\n      add\n        /* \"GMD_flat.sol\":39022:39090  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4592:4993   */\n      jump\n        /* \"GMD_flat.sol\":39022:39090  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":39108:39124  to != address(0) */\n      dup3\n      and\n        /* \"GMD_flat.sol\":39100:39164  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"GMD_flat.sol\":39100:39164  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5182:5203   */\n      mstore\n        /* \"#utility.yul\":5239:5241   */\n      0x23\n        /* \"#utility.yul\":5219:5237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5212:5242   */\n      mstore\n        /* \"#utility.yul\":5278:5312   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5258:5276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5251:5313   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5329:5347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5322:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"GMD_flat.sol\":39100:39164  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4998:5397   */\n      jump\n        /* \"GMD_flat.sol\":39100:39164  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":39246:39261  _balances[from] */\n      dup4\n      and\n        /* \"GMD_flat.sol\":39224:39243  uint256 fromBalance */\n      0x00\n        /* \"GMD_flat.sol\":39246:39261  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"GMD_flat.sol\":39279:39300  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"GMD_flat.sol\":39271:39343  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"GMD_flat.sol\":39271:39343  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5586:5607   */\n      mstore\n        /* \"#utility.yul\":5643:5645   */\n      0x26\n        /* \"#utility.yul\":5623:5641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5616:5646   */\n      mstore\n        /* \"#utility.yul\":5682:5716   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5717   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5733:5751   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5779:5798   */\n      0x84\n      add\n        /* \"GMD_flat.sol\":39271:39343  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5402:5804   */\n      jump\n        /* \"GMD_flat.sol\":39271:39343  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":39377:39392  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"GMD_flat.sol\":39377:39386  _balances */\n      0x00\n        /* \"GMD_flat.sol\":39377:39392  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"GMD_flat.sol\":39395:39415  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"GMD_flat.sol\":39377:39415  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"GMD_flat.sol\":39435:39448  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"GMD_flat.sol\":39435:39458  _balances[to] += amount */\n      dup1\n      sload\n        /* \"GMD_flat.sol\":39409:39415  amount */\n      dup5\n      swap3\n        /* \"GMD_flat.sol\":39377:39386  _balances */\n      swap1\n        /* \"GMD_flat.sol\":39435:39458  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"GMD_flat.sol\":39409:39415  amount */\n      dup5\n      swap1\n        /* \"GMD_flat.sol\":39435:39458  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GMD_flat.sol\":39489:39491  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":39474:39500  Transfer(from, to, amount) */\n      and\n        /* \"GMD_flat.sol\":39483:39487  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":39474:39500  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"GMD_flat.sol\":39493:39499  amount */\n      dup5\n        /* \"GMD_flat.sol\":39474:39500  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"GMD_flat.sol\":39474:39500  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"GMD_flat.sol\":39511:39548  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"GMD_flat.sol\":43215:43336  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_141:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_149:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_151:\n        /* \"#utility.yul\":962:991   */\n      tag_152\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_141\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_156:\n        /* \"#utility.yul\":1612:1641   */\n      tag_157\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_158\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_161:\n        /* \"#utility.yul\":2100:2129   */\n      tag_162\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_164:\n        /* \"#utility.yul\":2308:2337   */\n      tag_165\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_141\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_166\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_141\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_168:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      eq\n        /* \"#utility.yul\":2618:2779   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_169:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3015   */\n    tag_88:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2863   */\n      not\n        /* \"#utility.yul\":2854:2855   */\n      dup3\n        /* \"#utility.yul\":2851:2864   */\n      gt\n        /* \"#utility.yul\":2848:2984   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2906:2916   */\n      0x4e487b71\n        /* \"#utility.yul\":2901:2904   */\n      0xe0\n        /* \"#utility.yul\":2897:2917   */\n      shl\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2918   */\n      mstore\n        /* \"#utility.yul\":2941:2945   */\n      0x11\n        /* \"#utility.yul\":2938:2939   */\n      0x04\n        /* \"#utility.yul\":2931:2946   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2848:2984   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":3000:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2790:3015   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201892ba18d3cb18ba625b381303c8cdcdc5b946d56d5facccc4df7e0cc788760864736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1229": {
									"entryPoint": null,
									"id": 1229,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:1"
															},
															"nodeType": "YulIf",
															"src": "220:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:1"
															},
															"nodeType": "YulIf",
															"src": "353:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:1"
															},
															"nodeType": "YulIf",
															"src": "536:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:1"
															},
															"nodeType": "YulIf",
															"src": "698:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:1",
																"statements": []
															},
															"src": "779:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:1"
															},
															"nodeType": "YulIf",
															"src": "921:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:885:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:1"
															},
															"nodeType": "YulIf",
															"src": "1164:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:1"
															},
															"nodeType": "YulIf",
															"src": "1301:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:1"
															},
															"nodeType": "YulIf",
															"src": "1474:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:1",
														"type": ""
													}
												],
												"src": "1036:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:1"
															},
															"nodeType": "YulIf",
															"src": "1746:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:1"
															},
															"nodeType": "YulIf",
															"src": "1816:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:1",
														"type": ""
													}
												],
												"src": "1603:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b1938038062000b198339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b61088780620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212201892ba18d3cb18ba625b381303c8cdcdc5b946d56d5facccc4df7e0cc788760864736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB19 CODESIZE SUB DUP1 PUSH3 0xB19 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x887 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x825 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR SWAP3 0xBA XOR 0xD3 0xCB XOR 0xBA PUSH3 0x5B3813 SUB 0xC8 0xCD 0xCD 0xC5 0xB9 CHAINID 0xD5 PUSH14 0x5FACCCC4DF7E0CC788760864736F PUSH13 0x634300080C0033000000000000 ",
							"sourceMap": "32832:11214:0:-:0;;;33407:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33473:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;33496:17:0;;;;:7;;:17;;;;;:::i;:::-;;33407:113;;32832:11214;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32832:11214:0;;;-1:-1:-1;32832:11214:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:1:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:1;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;32832:11214:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1769": {
									"entryPoint": null,
									"id": 1769,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1704": {
									"entryPoint": 856,
									"id": 1704,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1758": {
									"entryPoint": null,
									"id": 1758,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_690": {
									"entryPoint": null,
									"id": 690,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1747": {
									"entryPoint": 1148,
									"id": 1747,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1531": {
									"entryPoint": 1270,
									"id": 1531,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_1326": {
									"entryPoint": 813,
									"id": 1326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1351": {
									"entryPoint": 562,
									"id": 1351,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1283": {
									"entryPoint": null,
									"id": 1283,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_1259": {
									"entryPoint": null,
									"id": 1259,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1454": {
									"entryPoint": 671,
									"id": 1454,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_1413": {
									"entryPoint": 622,
									"id": 1413,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_1239": {
									"entryPoint": 416,
									"id": 1239,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_1249": {
									"entryPoint": 656,
									"id": 1249,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_1269": {
									"entryPoint": null,
									"id": 1269,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1384": {
									"entryPoint": 586,
									"id": 1384,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_1308": {
									"entryPoint": 799,
									"id": 1308,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:1"
															},
															"nodeType": "YulIf",
															"src": "443:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:1"
															},
															"nodeType": "YulIf",
															"src": "713:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:1",
														"type": ""
													}
												],
												"src": "616:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:1"
															},
															"nodeType": "YulIf",
															"src": "891:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:1",
														"type": ""
													}
												],
												"src": "794:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:1",
														"type": ""
													}
												],
												"src": "1053:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:1",
														"type": ""
													}
												],
												"src": "1245:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:1"
															},
															"nodeType": "YulIf",
															"src": "1541:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:1",
														"type": ""
													}
												],
												"src": "1427:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:1",
														"type": ""
													}
												],
												"src": "1760:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:1"
															},
															"nodeType": "YulIf",
															"src": "2029:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:1",
														"type": ""
													}
												],
												"src": "1949:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:1"
															},
															"nodeType": "YulIf",
															"src": "2237:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:1",
														"type": ""
													}
												],
												"src": "2140:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:1"
															},
															"nodeType": "YulIf",
															"src": "2548:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:1"
															},
															"nodeType": "YulIf",
															"src": "2618:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:1",
														"type": ""
													}
												],
												"src": "2405:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2901:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2897:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2966:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2959:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2959:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2861:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2851:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:13:1"
															},
															"nodeType": "YulIf",
															"src": "2848:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3007:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2821:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2824:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2830:3:1",
														"type": ""
													}
												],
												"src": "2790:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3371:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:1",
														"type": ""
													}
												],
												"src": "3020:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3600:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3701:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3706:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3777:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3577:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:1",
														"type": ""
													}
												],
												"src": "3426:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4095:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4106:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4084:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3996:4:1",
														"type": ""
													}
												],
												"src": "3831:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4514:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4385:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:1",
														"type": ""
													}
												],
												"src": "4234:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4757:4:1",
														"type": ""
													}
												],
												"src": "4592:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5239:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5278:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5349:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:1",
														"type": ""
													}
												],
												"src": "4998:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5682:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:1",
														"type": ""
													}
												],
												"src": "5402:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212201892ba18d3cb18ba625b381303c8cdcdc5b946d56d5facccc4df7e0cc788760864736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x825 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR SWAP3 0xBA XOR 0xD3 0xCB XOR 0xBA PUSH3 0x5B3813 SUB 0xC8 0xCD 0xCD 0xC5 0xB9 CHAINID 0xD5 PUSH14 0x5FACCCC4DF7E0CC788760864736F PUSH13 0x634300080C0033000000000000 ",
							"sourceMap": "32832:11214:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33585:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;35862:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;35862:197:0;1053:187:1;34673:106:0;34760:12;;34673:106;;;1391:25:1;;;1379:2;1364:18;34673:106:0;1245:177:1;36621:286:0;;;;;;:::i;:::-;;:::i;34522:91::-;;;34604:2;1902:36:1;;1890:2;1875:18;34522:91:0;1760:184:1;37302:234:0;;;;;;:::i;:::-;;:::i;34837:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;34937:18:0;34911:7;34937:18;;;;;;;;;;;;34837:125;33796:102;;;:::i;38023:427::-;;;;;;:::i;:::-;;:::i;35158:189::-;;;;;;:::i;:::-;;:::i;35405:149::-;;;;;;:::i;:::-;;:::i;33585:98::-;33639:13;33671:5;33664:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33585:98;:::o;35862:197::-;35945:4;20875:10;35999:32;20875:10;36015:7;36024:6;35999:8;:32::i;:::-;-1:-1:-1;36048:4:0;;35862:197;-1:-1:-1;;;35862:197:0:o;36621:286::-;36748:4;20875:10;36804:38;36820:4;20875:10;36835:6;36804:15;:38::i;:::-;36852:27;36862:4;36868:2;36872:6;36852:9;:27::i;:::-;-1:-1:-1;36896:4:0;;36621:286;-1:-1:-1;;;;36621:286:0:o;37302:234::-;37390:4;20875:10;37444:64;20875:10;37460:7;37497:10;37469:25;20875:10;37460:7;37469:9;:25::i;:::-;:38;;;;:::i;:::-;37444:8;:64::i;33796:102::-;33852:13;33884:7;33877:14;;;;;:::i;38023:427::-;38116:4;20875:10;38116:4;38197:25;20875:10;38214:7;38197:9;:25::i;:::-;38170:52;;38260:15;38240:16;:35;;38232:85;;;;-1:-1:-1;;;38232:85:0;;3222:2:1;38232:85:0;;;3204:21:1;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:1;;;3344:35;3396:19;;38232:85:0;;;;;;;;;38351:60;38360:5;38367:7;38395:15;38376:16;:34;38351:8;:60::i;35158:189::-;35237:4;20875:10;35291:28;20875:10;35308:2;35312:6;35291:9;:28::i;35405:149::-;-1:-1:-1;;;;;35520:18:0;;;35494:7;35520:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;35405:149::o;41539:370::-;-1:-1:-1;;;;;41670:19:0;;41662:68;;;;-1:-1:-1;;;41662:68:0;;3628:2:1;41662:68:0;;;3610:21:1;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:1;;;3750:34;3801:19;;41662:68:0;3426:400:1;41662:68:0;-1:-1:-1;;;;;41748:21:0;;41740:68;;;;-1:-1:-1;;;41740:68:0;;4033:2:1;41740:68:0;;;4015:21:1;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:1;;;4155:32;4204:19;;41740:68:0;3831:398:1;41740:68:0;-1:-1:-1;;;;;41819:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;41870:32;;1391:25:1;;;41870:32:0;;1364:18:1;41870:32:0;;;;;;;41539:370;;;:::o;42190:441::-;42320:24;42347:25;42357:5;42364:7;42347:9;:25::i;:::-;42320:52;;-1:-1:-1;;42386:16:0;:37;42382:243;;42467:6;42447:16;:26;;42439:68;;;;-1:-1:-1;;;42439:68:0;;4436:2:1;42439:68:0;;;4418:21:1;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;42439:68:0;4234:353:1;42439:68:0;42549:51;42558:5;42565:7;42593:6;42574:16;:25;42549:8;:51::i;:::-;42310:321;42190:441;;;:::o;38904:651::-;-1:-1:-1;;;;;39030:18:0;;39022:68;;;;-1:-1:-1;;;39022:68:0;;4794:2:1;39022:68:0;;;4776:21:1;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:1;;;4916:35;4968:19;;39022:68:0;4592:401:1;39022:68:0;-1:-1:-1;;;;;39108:16:0;;39100:64;;;;-1:-1:-1;;;39100:64:0;;5200:2:1;39100:64:0;;;5182:21:1;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:1;;;5322:33;5372:19;;39100:64:0;4998:399:1;39100:64:0;-1:-1:-1;;;;;39246:15:0;;39224:19;39246:15;;;;;;;;;;;39279:21;;;;39271:72;;;;-1:-1:-1;;;39271:72:0;;5604:2:1;39271:72:0;;;5586:21:1;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:1;;;5726:36;5779:19;;39271:72:0;5402:402:1;39271:72:0;-1:-1:-1;;;;;39377:15:0;;;:9;:15;;;;;;;;;;;39395:20;;;39377:38;;39435:13;;;;;;;;:23;;39409:6;;39377:9;39435:23;;39409:6;;39435:23;:::i;:::-;;;;;;;;39489:2;-1:-1:-1;;;;;39474:26:0;39483:4;-1:-1:-1;;;;;39474:26:0;;39493:6;39474:26;;;;1391:25:1;;1379:2;1364:18;;1245:177;39474:26:0;;;;;;;;39511:37;43215:121;14:597:1;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:1:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:1;;2790:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "436600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51270",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33478,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 33473,
									"end": 33478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33496,
									"end": 33503,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 33496,
									"end": 33503,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32832,
									"end": 44046,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201892ba18d3cb18ba625b381303c8cdcdc5b946d56d5facccc4df7e0cc788760864736f6c634300080c0033",
									".code": [
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 44046,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34673,
											"end": 34779,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34673,
											"end": 34779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34760,
											"end": 34772,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34760,
											"end": 34772,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34673,
											"end": 34779,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 34673,
											"end": 34779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34673,
											"end": 34779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34673,
											"end": 34779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34673,
											"end": 34779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34522,
											"end": 34613,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34522,
											"end": 34613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34522,
											"end": 34613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34522,
											"end": 34613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34604,
											"end": 34606,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34522,
											"end": 34613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34911,
											"end": 34918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33796,
											"end": 33898,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 33796,
											"end": 33898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33796,
											"end": 33898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 33796,
											"end": 33898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 33796,
											"end": 33898,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33639,
											"end": 33652,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 33671,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35945,
											"end": 35949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35999,
											"end": 36031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36015,
											"end": 36022,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36024,
											"end": 36030,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35999,
											"end": 36007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 35999,
											"end": 36031,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35999,
											"end": 36031,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 35999,
											"end": 36031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36048,
											"end": 36052,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36048,
											"end": 36052,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36804,
											"end": 36842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 36820,
											"end": 36824,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36835,
											"end": 36841,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36804,
											"end": 36819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 36804,
											"end": 36842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36804,
											"end": 36842,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 36804,
											"end": 36842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36852,
											"end": 36879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36862,
											"end": 36866,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36868,
											"end": 36870,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36872,
											"end": 36878,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36852,
											"end": 36861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 36852,
											"end": 36879,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36852,
											"end": 36879,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36852,
											"end": 36879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36896,
											"end": 36900,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36896,
											"end": 36900,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37390,
											"end": 37394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37444,
											"end": 37508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37467,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37497,
											"end": 37507,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37469,
											"end": 37494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37467,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37469,
											"end": 37478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 37469,
											"end": 37494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37469,
											"end": 37494,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 37469,
											"end": 37494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37469,
											"end": 37507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 37469,
											"end": 37507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37469,
											"end": 37507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37469,
											"end": 37507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 37469,
											"end": 37507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37469,
											"end": 37507,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 37469,
											"end": 37507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37444,
											"end": 37452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 37444,
											"end": 37508,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33796,
											"end": 33898,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 33796,
											"end": 33898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33852,
											"end": 33865,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 33884,
											"end": 33891,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33877,
											"end": 33891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33877,
											"end": 33891,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33877,
											"end": 33891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 33877,
											"end": 33891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33877,
											"end": 33891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 33877,
											"end": 33891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38116,
											"end": 38120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 38116,
											"end": 38120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38197,
											"end": 38222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38214,
											"end": 38221,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38197,
											"end": 38206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 38197,
											"end": 38222,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38197,
											"end": 38222,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 38197,
											"end": 38222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38170,
											"end": 38222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38170,
											"end": 38222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38260,
											"end": 38275,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38275,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3334,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38351,
											"end": 38411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38360,
											"end": 38365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38367,
											"end": 38374,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38395,
											"end": 38410,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38376,
											"end": 38392,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38376,
											"end": 38410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38351,
											"end": 38359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 38351,
											"end": 38411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35237,
											"end": 35241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35291,
											"end": 35319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35308,
											"end": 35310,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35312,
											"end": 35318,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35291,
											"end": 35300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 35291,
											"end": 35319,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35494,
											"end": 35501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 41539,
											"end": 41909,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 41539,
											"end": 41909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41670,
											"end": 41689,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41670,
											"end": 41689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3706,
											"end": 3740,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3826,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41748,
											"end": 41769,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41748,
											"end": 41769,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4145,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3831,
											"end": 4229,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41830,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41855,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 41539,
											"end": 41909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41539,
											"end": 41909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41539,
											"end": 41909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41539,
											"end": 41909,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 42190,
											"end": 42631,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 42190,
											"end": 42631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42320,
											"end": 42344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42347,
											"end": 42372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 42357,
											"end": 42362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42364,
											"end": 42371,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42347,
											"end": 42356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 42347,
											"end": 42372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42347,
											"end": 42372,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 42347,
											"end": 42372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42320,
											"end": 42372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42320,
											"end": 42372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 42386,
											"end": 42402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42386,
											"end": 42423,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42382,
											"end": 42625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 42382,
											"end": 42625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42467,
											"end": 42473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42447,
											"end": 42463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42447,
											"end": 42473,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42447,
											"end": 42473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4545,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4234,
											"end": 4587,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42549,
											"end": 42600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 42558,
											"end": 42563,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42565,
											"end": 42572,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42593,
											"end": 42599,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42574,
											"end": 42590,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42574,
											"end": 42599,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42549,
											"end": 42557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 42549,
											"end": 42600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42549,
											"end": 42600,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 42549,
											"end": 42600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42310,
											"end": 42631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42190,
											"end": 42631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42190,
											"end": 42631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42190,
											"end": 42631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42190,
											"end": 42631,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38904,
											"end": 39555,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 38904,
											"end": 39555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39030,
											"end": 39048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39030,
											"end": 39048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4592,
											"end": 4993,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39108,
											"end": 39124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39108,
											"end": 39124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5182,
											"end": 5203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5312,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4998,
											"end": 5397,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39224,
											"end": 39243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39279,
											"end": 39300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39279,
											"end": 39300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39279,
											"end": 39300,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39279,
											"end": 39300,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5402,
											"end": 5804,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39395,
											"end": 39415,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39395,
											"end": 39415,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39395,
											"end": 39415,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39415,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39448,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39448,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39409,
											"end": 39415,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39409,
											"end": 39415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39409,
											"end": 39415,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39409,
											"end": 39415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39489,
											"end": 39491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39483,
											"end": 39487,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 39493,
											"end": 39499,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 39511,
											"end": 39548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 43215,
											"end": 43336,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2897,
											"end": 2917,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GMD_flat.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GMD_flat.sol\":{\"keccak256\":\"0x9f58f774b08b0fb154ee27a7c4bd598806cc666bf3c2289ab083f5fd3880ba54\",\"urls\":[\"bzz-raw://a6cc7c50e87d8fba13c9c7701d219795015b4efceedec5071d63128ec7207370\",\"dweb:/ipfs/QmPRHCdRnRbqcqK5RXD3p9eGhi3rnwSDVXkVEVyWa3uFPg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1200,
								"contract": "GMD_flat.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1206,
								"contract": "GMD_flat.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1208,
								"contract": "GMD_flat.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1210,
								"contract": "GMD_flat.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1212,
								"contract": "GMD_flat.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"GMD": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "USDC",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "claimableTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintCap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "recoverTreasuryTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "remainingMintableTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "remainingVestedTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_mintCap",
									"type": "uint256"
								}
							],
							"name": "setMintCap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_mintPrice",
									"type": "uint256"
								}
							],
							"name": "setMintPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_mintOpen",
									"type": "bool"
								}
							],
							"name": "setOpenMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_period",
									"type": "uint256"
								}
							],
							"name": "setVestingPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalMinted",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastInteractionTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "VestPeriod",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestingPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GMD_flat.sol\":44114:48054  contract GMD is ERC20(\"GMD\", \"GMD\"), Ownable , ReentrancyGuard{ ... */\n  mstore(0x40, 0x80)\n    /* \"GMD_flat.sol\":44530:44534  1000 */\n  0x03e8\n    /* \"GMD_flat.sol\":44503:44534  uint256 public mintPrice = 1000 */\n  0x08\n  sstore\n    /* \"GMD_flat.sol\":44565:44566  0 */\n  0x00\n    /* \"GMD_flat.sol\":44540:44566  uint256 public mintCap = 0 */\n  0x09\n  sstore\n    /* \"GMD_flat.sol\":44603:44609  5 days */\n  0x069780\n    /* \"GMD_flat.sol\":44572:44609  uint256 public vestingPeriod = 5 days */\n  0x0a\n  sstore\n    /* \"GMD_flat.sol\":44615:44643  bool public mintOpen = false */\n  0x0b\n  dup1\n  sload\n  not(sub(shl(0xa8, 0x01), 0x01))\n    /* \"GMD_flat.sol\":44649:44720  IERC20 public USDC = IERC20(0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8) */\n  and\n  0xff970a61a04b1ca14834a43f5de4533ebddb5cc800\n  or\n  swap1\n  sstore\n    /* \"GMD_flat.sol\":44184:44258  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"GMD_flat.sol\":33407:33520  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xea, 0x11d351)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xea, 0x11d351)\n  dup2\n  mstore\n  pop\n    /* \"GMD_flat.sol\":33481:33486  name_ */\n  dup2\n    /* \"GMD_flat.sol\":33473:33478  _name */\n  0x03\n    /* \"GMD_flat.sol\":33473:33486  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"GMD_flat.sol\":33496:33513  _symbol = symbol_ */\n  dup1\n  mload\n  tag_9\n  swap1\n    /* \"GMD_flat.sol\":33496:33503  _symbol */\n  0x04\n  swap1\n    /* \"GMD_flat.sol\":33496:33513  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"GMD_flat.sol\":33407:33520  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"GMD_flat.sol\":21928:21960  _transferOwnership(_msgSender()) */\n  tag_11\n    /* \"GMD_flat.sol\":21947:21959  _msgSender() */\n  tag_12\n    /* \"GMD_flat.sol\":21947:21957  _msgSender */\n  shl(0x20, tag_13)\n    /* \"GMD_flat.sol\":21947:21959  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"GMD_flat.sol\":21928:21946  _transferOwnership */\n  tag_14\n    /* \"GMD_flat.sol\":21928:21960  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_11:\n    /* \"GMD_flat.sol\":1734:1735  1 */\n  0x01\n    /* \"GMD_flat.sol\":1839:1846  _status */\n  0x06\n    /* \"GMD_flat.sol\":1839:1861  _status = _NOT_ENTERED */\n  sstore\n    /* \"GMD_flat.sol\":44208:44251  _mint(msg.sender, 50000 * 10 ** decimals()) */\n  tag_17\n    /* \"GMD_flat.sol\":44214:44224  msg.sender */\n  caller\n    /* \"GMD_flat.sol\":44234:44250  10 ** decimals() */\n  tag_20\n    /* \"GMD_flat.sol\":34604:34606  18 */\n  0x12\n    /* \"GMD_flat.sol\":44234:44236  10 */\n  0x0a\n    /* \"GMD_flat.sol\":44234:44250  10 ** decimals() */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"GMD_flat.sol\":44226:44250  50000 * 10 ** decimals() */\n  tag_22\n  swap1\n    /* \"GMD_flat.sol\":44226:44231  50000 */\n  0xc350\n    /* \"GMD_flat.sol\":44226:44250  50000 * 10 ** decimals() */\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"GMD_flat.sol\":44208:44213  _mint */\n  tag_24\n    /* \"GMD_flat.sol\":44208:44251  _mint(msg.sender, 50000 * 10 ** decimals()) */\n  jump\t// in\ntag_17:\n    /* \"GMD_flat.sol\":44114:48054  contract GMD is ERC20(\"GMD\", \"GMD\"), Ownable , ReentrancyGuard{ ... */\n  jump(tag_58)\n    /* \"GMD_flat.sol\":20796:20892  function _msgSender() internal view virtual returns (address) {... */\ntag_13:\n    /* \"GMD_flat.sol\":20875:20885  msg.sender */\n  caller\n  swap1\n    /* \"GMD_flat.sol\":20796:20892  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"GMD_flat.sol\":23425:23612  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"GMD_flat.sol\":23517:23523  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GMD_flat.sol\":23533:23550  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"GMD_flat.sol\":23565:23605  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"GMD_flat.sol\":23517:23523  _owner */\n  swap2\n  and\n  swap2\n    /* \"GMD_flat.sol\":23533:23550  _owner = newOwner */\n  swap1\n    /* \"GMD_flat.sol\":23517:23523  _owner */\n  dup3\n  swap1\n    /* \"GMD_flat.sol\":23565:23605  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"GMD_flat.sol\":23498:23514  address oldOwner */\n  0x00\n  swap1\n    /* \"GMD_flat.sol\":23565:23605  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"GMD_flat.sol\":23488:23612  {... */\n  pop\n    /* \"GMD_flat.sol\":23425:23612  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"GMD_flat.sol\":39831:40220  function _mint(address account, uint256 amount) internal virtual {... */\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GMD_flat.sol\":39914:39935  account != address(0) */\n  dup3\n  and\n    /* \"GMD_flat.sol\":39906:39971  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_30\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1904:1906   */\n  0x20\n    /* \"GMD_flat.sol\":39906:39971  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1886:1907   */\n  mstore\n    /* \"#utility.yul\":1943:1945   */\n  0x1f\n    /* \"#utility.yul\":1923:1941   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1916:1946   */\n  mstore\n    /* \"#utility.yul\":1982:2015   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":1962:1980   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1955:2016   */\n  mstore\n    /* \"#utility.yul\":2033:2051   */\n  0x64\n  add\n    /* \"GMD_flat.sol\":39906:39971  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_30:\n    /* \"GMD_flat.sol\":40058:40064  amount */\n  dup1\n    /* \"GMD_flat.sol\":40042:40054  _totalSupply */\n  0x02\n  0x00\n    /* \"GMD_flat.sol\":40042:40064  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GMD_flat.sol\":40074:40092  _balances[account] */\n  dup3\n  and\n    /* \"GMD_flat.sol\":40074:40083  _balances */\n  0x00\n    /* \"GMD_flat.sol\":40074:40092  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"GMD_flat.sol\":40074:40102  _balances[account] += amount */\n  dup1\n  sload\n    /* \"GMD_flat.sol\":40096:40102  amount */\n  dup4\n  swap3\n    /* \"GMD_flat.sol\":40074:40083  _balances */\n  swap1\n    /* \"GMD_flat.sol\":40074:40102  _balances[account] += amount */\n  tag_37\n  swap1\n    /* \"GMD_flat.sol\":40096:40102  amount */\n  dup5\n  swap1\n    /* \"GMD_flat.sol\":40074:40102  _balances[account] += amount */\n  tag_36\n  jump\t// in\ntag_37:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"GMD_flat.sol\":40117:40154  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":2341:2366   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GMD_flat.sol\":40117:40154  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"GMD_flat.sol\":40134:40135  0 */\n  0x00\n  swap1\n    /* \"GMD_flat.sol\":40117:40154  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":2329:2331   */\n  0x20\n    /* \"#utility.yul\":2314:2332   */\n  add\n    /* \"GMD_flat.sol\":40117:40154  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"GMD_flat.sol\":39831:40220  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"GMD_flat.sol\":44114:48054  contract GMD is ERC20(\"GMD\", \"GMD\"), Ownable , ReentrancyGuard{ ... */\ntag_8:\n  dup3\n  dup1\n  sload\n  tag_44\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_47\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_50)\ntag_47:\n  dup3\n  0x1f\n  lt\n  tag_48\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_50)\ntag_48:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_50\n  jumpi\n  swap2\n  dup3\n  add\ntag_49:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_50\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_49)\ntag_50:\n  pop\n  tag_51\n  swap3\n  swap2\n  pop\n  tag_52\n  jump\t// in\ntag_51:\n  pop\n  swap1\n  jump\t// out\ntag_52:\ntag_53:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_51\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_53)\n    /* \"#utility.yul\":14:141   */\ntag_55:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x11\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:568   */\ntag_56:\n    /* \"#utility.yul\":235:236   */\n  0x01\n    /* \"#utility.yul\":278:283   */\n  dup2\n    /* \"#utility.yul\":235:236   */\n  dup2\n    /* \"#utility.yul\":292:562   */\ntag_61:\n    /* \"#utility.yul\":313:320   */\n  dup1\n    /* \"#utility.yul\":303:311   */\n  dup6\n    /* \"#utility.yul\":300:321   */\n  gt\n    /* \"#utility.yul\":292:562   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":372:376   */\n  dup2\n    /* \"#utility.yul\":368:369   */\n  0x00\n    /* \"#utility.yul\":364:370   */\n  not\n    /* \"#utility.yul\":360:377   */\n  div\n    /* \"#utility.yul\":354:358   */\n  dup3\n    /* \"#utility.yul\":351:378   */\n  gt\n    /* \"#utility.yul\":348:401   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":381:399   */\n  tag_65\n  tag_55\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":431:438   */\n  dup1\n    /* \"#utility.yul\":421:429   */\n  dup6\n    /* \"#utility.yul\":417:439   */\n  and\n    /* \"#utility.yul\":414:469   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":451:467   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":414:469   */\ntag_66:\n    /* \"#utility.yul\":530:552   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":490:505   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":292:562   */\n  jump(tag_61)\ntag_63:\n    /* \"#utility.yul\":296:299   */\n  pop\n    /* \"#utility.yul\":146:568   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":573:1379   */\ntag_57:\n    /* \"#utility.yul\":622:627   */\n  0x00\n    /* \"#utility.yul\":652:660   */\n  dup3\n    /* \"#utility.yul\":642:722   */\n  tag_68\n  jumpi\n  pop\n    /* \"#utility.yul\":693:694   */\n  0x01\n    /* \"#utility.yul\":707:712   */\n  jump(tag_67)\n    /* \"#utility.yul\":642:722   */\ntag_68:\n    /* \"#utility.yul\":741:745   */\n  dup2\n    /* \"#utility.yul\":731:807   */\n  tag_69\n  jumpi\n  pop\n    /* \"#utility.yul\":778:779   */\n  0x00\n    /* \"#utility.yul\":792:797   */\n  jump(tag_67)\n    /* \"#utility.yul\":731:807   */\ntag_69:\n    /* \"#utility.yul\":823:827   */\n  dup2\n    /* \"#utility.yul\":841:842   */\n  0x01\n    /* \"#utility.yul\":836:895   */\n  dup2\n  eq\n  tag_71\n  jumpi\n    /* \"#utility.yul\":909:910   */\n  0x02\n    /* \"#utility.yul\":904:1034   */\n  dup2\n  eq\n  tag_72\n  jumpi\n    /* \"#utility.yul\":816:1034   */\n  jump(tag_70)\n    /* \"#utility.yul\":836:895   */\ntag_71:\n    /* \"#utility.yul\":866:867   */\n  0x01\n    /* \"#utility.yul\":857:867   */\n  swap2\n  pop\n    /* \"#utility.yul\":880:885   */\n  pop\n  jump(tag_67)\n    /* \"#utility.yul\":904:1034   */\ntag_72:\n    /* \"#utility.yul\":941:944   */\n  0xff\n    /* \"#utility.yul\":931:939   */\n  dup5\n    /* \"#utility.yul\":928:945   */\n  gt\n    /* \"#utility.yul\":925:968   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":948:966   */\n  tag_74\n  tag_55\n  jump\t// in\ntag_74:\n  pop\n  pop\n    /* \"#utility.yul\":1004:1005   */\n  0x01\n    /* \"#utility.yul\":990:1006   */\n  dup3\n  shl\n    /* \"#utility.yul\":1019:1024   */\n  jump(tag_67)\n    /* \"#utility.yul\":816:1034   */\ntag_70:\n  pop\n    /* \"#utility.yul\":1118:1120   */\n  0x20\n    /* \"#utility.yul\":1108:1116   */\n  dup4\n    /* \"#utility.yul\":1105:1121   */\n  lt\n    /* \"#utility.yul\":1099:1102   */\n  0x0133\n    /* \"#utility.yul\":1093:1097   */\n  dup4\n    /* \"#utility.yul\":1090:1103   */\n  lt\n    /* \"#utility.yul\":1086:1122   */\n  and\n    /* \"#utility.yul\":1080:1082   */\n  0x4e\n    /* \"#utility.yul\":1070:1078   */\n  dup5\n    /* \"#utility.yul\":1067:1083   */\n  lt\n    /* \"#utility.yul\":1062:1064   */\n  0x0b\n    /* \"#utility.yul\":1056:1060   */\n  dup5\n    /* \"#utility.yul\":1053:1065   */\n  lt\n    /* \"#utility.yul\":1049:1084   */\n  and\n    /* \"#utility.yul\":1046:1123   */\n  or\n    /* \"#utility.yul\":1043:1202   */\n  iszero\n  tag_75\n  jumpi\n  pop\n    /* \"#utility.yul\":1155:1174   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":1187:1192   */\n  jump(tag_67)\n    /* \"#utility.yul\":1043:1202   */\ntag_75:\n    /* \"#utility.yul\":1234:1268   */\n  tag_76\n    /* \"#utility.yul\":1259:1267   */\n  dup4\n    /* \"#utility.yul\":1253:1257   */\n  dup4\n    /* \"#utility.yul\":1234:1268   */\n  tag_56\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":1304:1310   */\n  dup1\n    /* \"#utility.yul\":1300:1301   */\n  0x00\n    /* \"#utility.yul\":1296:1302   */\n  not\n    /* \"#utility.yul\":1292:1311   */\n  div\n    /* \"#utility.yul\":1283:1290   */\n  dup3\n    /* \"#utility.yul\":1280:1312   */\n  gt\n    /* \"#utility.yul\":1277:1335   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":1315:1333   */\n  tag_78\n  tag_55\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1353:1373   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":573:1379   */\ntag_67:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1384:1524   */\ntag_21:\n    /* \"#utility.yul\":1442:1447   */\n  0x00\n    /* \"#utility.yul\":1471:1518   */\n  tag_80\n    /* \"#utility.yul\":1512:1516   */\n  0xff\n    /* \"#utility.yul\":1502:1510   */\n  dup5\n    /* \"#utility.yul\":1498:1517   */\n  and\n    /* \"#utility.yul\":1492:1496   */\n  dup4\n    /* \"#utility.yul\":1471:1518   */\n  tag_57\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1462:1518   */\n  swap4\n    /* \"#utility.yul\":1384:1524   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1529:1697   */\ntag_23:\n    /* \"#utility.yul\":1569:1576   */\n  0x00\n    /* \"#utility.yul\":1635:1636   */\n  dup2\n    /* \"#utility.yul\":1631:1632   */\n  0x00\n    /* \"#utility.yul\":1627:1633   */\n  not\n    /* \"#utility.yul\":1623:1637   */\n  div\n    /* \"#utility.yul\":1620:1621   */\n  dup4\n    /* \"#utility.yul\":1617:1638   */\n  gt\n    /* \"#utility.yul\":1612:1613   */\n  dup3\n    /* \"#utility.yul\":1605:1614   */\n  iszero\n    /* \"#utility.yul\":1598:1615   */\n  iszero\n    /* \"#utility.yul\":1594:1639   */\n  and\n    /* \"#utility.yul\":1591:1662   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":1642:1660   */\n  tag_83\n  tag_55\n  jump\t// in\ntag_83:\n  pop\n    /* \"#utility.yul\":1682:1691   */\n  mul\n  swap1\n    /* \"#utility.yul\":1529:1697   */\n  jump\t// out\n    /* \"#utility.yul\":2062:2190   */\ntag_36:\n    /* \"#utility.yul\":2102:2105   */\n  0x00\n    /* \"#utility.yul\":2133:2134   */\n  dup3\n    /* \"#utility.yul\":2129:2135   */\n  not\n    /* \"#utility.yul\":2126:2127   */\n  dup3\n    /* \"#utility.yul\":2123:2136   */\n  gt\n    /* \"#utility.yul\":2120:2159   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":2139:2157   */\n  tag_87\n  tag_55\n  jump\t// in\ntag_87:\n  pop\n    /* \"#utility.yul\":2175:2184   */\n  add\n  swap1\n    /* \"#utility.yul\":2062:2190   */\n  jump\t// out\n    /* \"#utility.yul\":2377:2757   */\ntag_45:\n    /* \"#utility.yul\":2456:2457   */\n  0x01\n    /* \"#utility.yul\":2452:2464   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2499:2511   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2520:2581   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2574:2578   */\n  0x7f\n    /* \"#utility.yul\":2566:2572   */\n  dup3\n    /* \"#utility.yul\":2562:2579   */\n  and\n    /* \"#utility.yul\":2552:2579   */\n  swap2\n  pop\n    /* \"#utility.yul\":2520:2581   */\ntag_90:\n    /* \"#utility.yul\":2627:2629   */\n  0x20\n    /* \"#utility.yul\":2619:2625   */\n  dup3\n    /* \"#utility.yul\":2616:2630   */\n  lt\n    /* \"#utility.yul\":2596:2614   */\n  dup2\n    /* \"#utility.yul\":2593:2631   */\n  eq\n    /* \"#utility.yul\":2590:2751   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":2673:2683   */\n  0x4e487b71\n    /* \"#utility.yul\":2668:2671   */\n  0xe0\n    /* \"#utility.yul\":2664:2684   */\n  shl\n    /* \"#utility.yul\":2661:2662   */\n  0x00\n    /* \"#utility.yul\":2654:2685   */\n  mstore\n    /* \"#utility.yul\":2708:2712   */\n  0x22\n    /* \"#utility.yul\":2705:2706   */\n  0x04\n    /* \"#utility.yul\":2698:2713   */\n  mstore\n    /* \"#utility.yul\":2736:2740   */\n  0x24\n    /* \"#utility.yul\":2733:2734   */\n  0x00\n    /* \"#utility.yul\":2726:2741   */\n  revert\n    /* \"#utility.yul\":2590:2751   */\ntag_91:\n  pop\n    /* \"#utility.yul\":2377:2757   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_58:\n    /* \"GMD_flat.sol\":44114:48054  contract GMD is ERC20(\"GMD\", \"GMD\"), Ownable , ReentrancyGuard{ ... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GMD_flat.sol\":44114:48054  contract GMD is ERC20(\"GMD\", \"GMD\"), Ownable , ReentrancyGuard{ ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xa0712d68\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xe2af30f4\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xe2af30f4\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe2e5c15c\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf4a0a528\n      eq\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0xa0712d68\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x84d24226\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x84d24226\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x89a30271\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7313ee5a\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x76c71ca1\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x313ce567\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x42966c68\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4e274514\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x6817c76c\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4070a0c9\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x40bee0ed\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x1959a002\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x1959a002\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x20f203d9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x24bbd049\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"GMD_flat.sol\":33585:33683  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GMD_flat.sol\":35862:36059  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n        /* \"#utility.yul\":1267:1281   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1260:1282   */\n      iszero\n        /* \"#utility.yul\":1242:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1230:1232   */\n      0x20\n        /* \"#utility.yul\":1215:1233   */\n      add\n        /* \"GMD_flat.sol\":35862:36059  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_43\n        /* \"#utility.yul\":1102:1289   */\n      jump\n        /* \"GMD_flat.sol\":34673:34779  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"GMD_flat.sol\":34760:34772  _totalSupply */\n      sload(0x02)\n        /* \"GMD_flat.sol\":34673:34779  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_51:\n      mload(0x40)\n        /* \"#utility.yul\":1440:1465   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1428:1430   */\n      0x20\n        /* \"#utility.yul\":1413:1431   */\n      add\n        /* \"GMD_flat.sol\":34673:34779  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_43\n        /* \"#utility.yul\":1294:1471   */\n      jump\n        /* \"GMD_flat.sol\":44452:44496  mapping(address => UserInfo) public userInfo */\n    tag_6:\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\n    tag_55:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1869:1894   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1910:1928   */\n      dup5\n      add\n        /* \"#utility.yul\":1903:1937   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1953:1971   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1946:1980   */\n      mstore\n        /* \"#utility.yul\":1857:1859   */\n      0x60\n        /* \"#utility.yul\":1842:1860   */\n      add\n        /* \"GMD_flat.sol\":44452:44496  mapping(address => UserInfo) public userInfo */\n      tag_43\n        /* \"#utility.yul\":1667:1986   */\n      jump\n        /* \"GMD_flat.sol\":47703:48051  function remainingVestedTime() external view returns(uint256){... */\n    tag_7:\n      tag_51\n      tag_62\n      jump\t// in\n        /* \"GMD_flat.sol\":36621:36907  function transferFrom(... */\n    tag_8:\n      tag_45\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n        /* \"GMD_flat.sol\":44615:44643  bool public mintOpen = false */\n    tag_9:\n      sload(0x0b)\n      tag_45\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"GMD_flat.sol\":34522:34613  function decimals() public view virtual override returns (uint8) {... */\n    tag_10:\n      mload(0x40)\n        /* \"GMD_flat.sol\":34604:34606  18 */\n      0x12\n        /* \"#utility.yul\":2466:2502   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2454:2456   */\n      0x20\n        /* \"#utility.yul\":2439:2457   */\n      add\n        /* \"GMD_flat.sol\":34522:34613  function decimals() public view virtual override returns (uint8) {... */\n      tag_43\n        /* \"#utility.yul\":2324:2508   */\n      jump\n        /* \"GMD_flat.sol\":37302:37536  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_45\n      tag_77\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"GMD_flat.sol\":44818:44910  function setMintCap(uint256 _mintCap) external onlyOwner {... */\n    tag_12:\n      tag_80\n      tag_81\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"GMD_flat.sol\":45102:45204  function setVestingPeriod(uint256 _period) external onlyOwner {... */\n    tag_13:\n      tag_80\n      tag_85\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"GMD_flat.sol\":44728:44812  function burn(uint256 _amount) external  {... */\n    tag_14:\n      tag_80\n      tag_88\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"GMD_flat.sol\":45792:45918  function recoverTreasuryTokens() external onlyOwner {... */\n    tag_15:\n      tag_80\n      tag_91\n      jump\t// in\n        /* \"GMD_flat.sol\":46710:47562  function claim() external nonReentrant {... */\n    tag_16:\n      tag_80\n      tag_93\n      jump\t// in\n        /* \"GMD_flat.sol\":44503:44534  uint256 public mintPrice = 1000 */\n    tag_17:\n      tag_51\n      sload(0x08)\n      dup2\n      jump\n        /* \"GMD_flat.sol\":34837:34962  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_18:\n      tag_51\n      tag_98\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":34937:34955  _balances[account] */\n      and\n        /* \"GMD_flat.sol\":34911:34918  uint256 */\n      0x00\n        /* \"GMD_flat.sol\":34937:34955  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"GMD_flat.sol\":34837:34962  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"GMD_flat.sol\":22823:22924  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n      tag_80\n      tag_102\n      jump\t// in\n        /* \"GMD_flat.sol\":44572:44609  uint256 public vestingPeriod = 5 days */\n    tag_20:\n      tag_51\n      sload(0x0a)\n      dup2\n      jump\n        /* \"GMD_flat.sol\":44540:44566  uint256 public mintCap = 0 */\n    tag_21:\n      tag_51\n      sload(0x09)\n      dup2\n      jump\n        /* \"GMD_flat.sol\":45210:45686  function claimableTokens(address _address) external view returns(uint256) {... */\n    tag_22:\n      tag_51\n      tag_110\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"GMD_flat.sol\":44649:44720  IERC20 public USDC = IERC20(0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8) */\n    tag_23:\n      sload(0x0b)\n      tag_113\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_113:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2876:2908   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2858:2909   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2846:2848   */\n      0x20\n        /* \"#utility.yul\":2831:2849   */\n      add\n        /* \"GMD_flat.sol\":44649:44720  IERC20 public USDC = IERC20(0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8) */\n      tag_43\n        /* \"#utility.yul\":2698:2915   */\n      jump\n        /* \"GMD_flat.sol\":22193:22278  function owner() public view virtual returns (address) {... */\n    tag_24:\n        /* \"GMD_flat.sol\":22265:22271  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"GMD_flat.sol\":22193:22278  function owner() public view virtual returns (address) {... */\n      jump(tag_113)\n        /* \"GMD_flat.sol\":33796:33898  function symbol() public view virtual override returns (string memory) {... */\n    tag_25:\n      tag_41\n      tag_122\n      jump\t// in\n        /* \"GMD_flat.sol\":45925:46704  function mint(uint256 _amount) external nonReentrant {... */\n    tag_26:\n      tag_80\n      tag_125\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n        /* \"GMD_flat.sol\":38023:38450  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_27:\n      tag_45\n      tag_128\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n        /* \"GMD_flat.sol\":35158:35347  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n      tag_45\n      tag_132\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"GMD_flat.sol\":35405:35554  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_29:\n      tag_51\n      tag_136\n      calldatasize\n      0x04\n      tag_137\n      jump\t// in\n    tag_136:\n      tag_138\n      jump\t// in\n        /* \"GMD_flat.sol\":45693:45786  function setOpenMint(bool _mintOpen) external onlyOwner {... */\n    tag_30:\n      tag_80\n      tag_141\n      calldatasize\n      0x04\n      tag_142\n      jump\t// in\n    tag_141:\n      tag_143\n      jump\t// in\n        /* \"GMD_flat.sol\":47568:47697  function remainingMintableTokens() external view returns(uint256){... */\n    tag_31:\n      tag_51\n      tag_145\n      jump\t// in\n        /* \"GMD_flat.sol\":23073:23271  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n      tag_80\n      tag_148\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_148:\n      tag_149\n      jump\t// in\n        /* \"GMD_flat.sol\":44921:45096  function setMintPrice(uint256 _mintPrice) external onlyOwner {... */\n    tag_33:\n      tag_80\n      tag_151\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_151:\n      tag_152\n      jump\t// in\n        /* \"GMD_flat.sol\":33585:33683  function name() public view virtual override returns (string memory) {... */\n    tag_42:\n        /* \"GMD_flat.sol\":33639:33652  string memory */\n      0x60\n        /* \"GMD_flat.sol\":33671:33676  _name */\n      0x03\n        /* \"GMD_flat.sol\":33664:33676  return _name */\n      dup1\n      sload\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_156\n      swap1\n      tag_155\n      jump\t// in\n    tag_156:\n      dup1\n      iszero\n      tag_157\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_158\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_157)\n    tag_158:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_159:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_159\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"GMD_flat.sol\":33585:33683  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"GMD_flat.sol\":35862:36059  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"GMD_flat.sol\":35945:35949  bool */\n      0x00\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":35999:36031  _approve(owner, spender, amount) */\n      tag_163\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      dup2\n        /* \"GMD_flat.sol\":36015:36022  spender */\n      dup6\n        /* \"GMD_flat.sol\":36024:36030  amount */\n      dup6\n        /* \"GMD_flat.sol\":35999:36007  _approve */\n      tag_164\n        /* \"GMD_flat.sol\":35999:36031  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_163:\n      pop\n        /* \"GMD_flat.sol\":36048:36052  true */\n      0x01\n      swap4\n        /* \"GMD_flat.sol\":35862:36059  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GMD_flat.sol\":47703:48051  function remainingVestedTime() external view returns(uint256){... */\n    tag_62:\n        /* \"GMD_flat.sol\":47822:47832  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":47756:47763  uint256 */\n      0x00\n        /* \"GMD_flat.sol\":47813:47833  userInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":47813:47821  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":47813:47833  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"GMD_flat.sol\":47813:47853  userInfo[msg.sender].lastInteractionTime */\n      0x01\n      add\n      sload\n        /* \"GMD_flat.sol\":47756:47763  uint256 */\n      dup2\n      swap1\n        /* \"GMD_flat.sol\":47793:47854  block.timestamp.sub(userInfo[msg.sender].lastInteractionTime) */\n      tag_167\n      swap1\n        /* \"GMD_flat.sol\":47793:47808  block.timestamp */\n      timestamp\n      swap1\n        /* \"GMD_flat.sol\":47793:47812  block.timestamp.sub */\n      tag_168\n        /* \"GMD_flat.sol\":47793:47854  block.timestamp.sub(userInfo[msg.sender].lastInteractionTime) */\n      jump\t// in\n    tag_167:\n        /* \"GMD_flat.sol\":47889:47899  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":47880:47900  userInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":47880:47888  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":47880:47900  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GMD_flat.sol\":47880:47911  userInfo[msg.sender].VestPeriod */\n      0x02\n      add\n      sload\n        /* \"GMD_flat.sol\":47774:47854  uint256 timePass = block.timestamp.sub(userInfo[msg.sender].lastInteractionTime) */\n      swap1\n      swap2\n      pop\n        /* \"GMD_flat.sol\":47868:47911  timePass >= userInfo[msg.sender].VestPeriod */\n      dup2\n      lt\n        /* \"GMD_flat.sol\":47864:48036  if (timePass >= userInfo[msg.sender].VestPeriod){... */\n      tag_169\n      jumpi\n        /* \"GMD_flat.sol\":47933:47934  0 */\n      0x00\n        /* \"GMD_flat.sol\":47926:47934  return 0 */\n      swap2\n      pop\n      pop\n        /* \"GMD_flat.sol\":47703:48051  function remainingVestedTime() external view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"GMD_flat.sol\":47864:48036  if (timePass >= userInfo[msg.sender].VestPeriod){... */\n    tag_169:\n        /* \"GMD_flat.sol\":47989:47999  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":47980:48000  userInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":47980:47988  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":47980:48000  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GMD_flat.sol\":47980:48011  userInfo[msg.sender].VestPeriod */\n      0x02\n      add\n      sload\n        /* \"GMD_flat.sol\":47980:48025  userInfo[msg.sender].VestPeriod.sub(timePass) */\n      tag_171\n      swap1\n        /* \"GMD_flat.sol\":48016:48024  timePass */\n      dup3\n        /* \"GMD_flat.sol\":47980:48015  userInfo[msg.sender].VestPeriod.sub */\n      tag_168\n        /* \"GMD_flat.sol\":47980:48025  userInfo[msg.sender].VestPeriod.sub(timePass) */\n      jump\t// in\n    tag_171:\n        /* \"GMD_flat.sol\":47973:48025  return userInfo[msg.sender].VestPeriod.sub(timePass) */\n      swap2\n      pop\n      pop\n        /* \"GMD_flat.sol\":47703:48051  function remainingVestedTime() external view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"GMD_flat.sol\":36621:36907  function transferFrom(... */\n    tag_67:\n        /* \"GMD_flat.sol\":36748:36752  bool */\n      0x00\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":36804:36842  _spendAllowance(from, spender, amount) */\n      tag_174\n        /* \"GMD_flat.sol\":36820:36824  from */\n      dup6\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      dup3\n        /* \"GMD_flat.sol\":36835:36841  amount */\n      dup6\n        /* \"GMD_flat.sol\":36804:36819  _spendAllowance */\n      tag_175\n        /* \"GMD_flat.sol\":36804:36842  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_174:\n        /* \"GMD_flat.sol\":36852:36879  _transfer(from, to, amount) */\n      tag_176\n        /* \"GMD_flat.sol\":36862:36866  from */\n      dup6\n        /* \"GMD_flat.sol\":36868:36870  to */\n      dup6\n        /* \"GMD_flat.sol\":36872:36878  amount */\n      dup6\n        /* \"GMD_flat.sol\":36852:36861  _transfer */\n      tag_177\n        /* \"GMD_flat.sol\":36852:36879  _transfer(from, to, amount) */\n      jump\t// in\n    tag_176:\n        /* \"GMD_flat.sol\":36896:36900  true */\n      0x01\n        /* \"GMD_flat.sol\":36889:36900  return true */\n      swap2\n      pop\n      pop\n        /* \"GMD_flat.sol\":36621:36907  function transferFrom(... */\n    tag_172:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GMD_flat.sol\":37302:37536  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_78:\n        /* \"GMD_flat.sol\":37390:37394  bool */\n      0x00\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":37444:37508  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_163\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      dup2\n        /* \"GMD_flat.sol\":37460:37467  spender */\n      dup6\n        /* \"GMD_flat.sol\":37497:37507  addedValue */\n      dup6\n        /* \"GMD_flat.sol\":37469:37494  allowance(owner, spender) */\n      tag_182\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      dup4\n        /* \"GMD_flat.sol\":37460:37467  spender */\n      dup4\n        /* \"GMD_flat.sol\":37469:37478  allowance */\n      tag_138\n        /* \"GMD_flat.sol\":37469:37494  allowance(owner, spender) */\n      jump\t// in\n    tag_182:\n        /* \"GMD_flat.sol\":37469:37507  allowance(owner, spender) + addedValue */\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"GMD_flat.sol\":37444:37452  _approve */\n      tag_164\n        /* \"GMD_flat.sol\":37444:37508  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"GMD_flat.sol\":44818:44910  function setMintCap(uint256 _mintCap) external onlyOwner {... */\n    tag_83:\n        /* \"GMD_flat.sol\":22086:22099  _checkOwner() */\n      tag_186\n        /* \"GMD_flat.sol\":22086:22097  _checkOwner */\n      tag_187\n        /* \"GMD_flat.sol\":22086:22099  _checkOwner() */\n      jump\t// in\n    tag_186:\n        /* \"GMD_flat.sol\":44885:44892  mintCap */\n      0x09\n        /* \"GMD_flat.sol\":44885:44903  mintCap = _mintCap */\n      sstore\n        /* \"GMD_flat.sol\":44818:44910  function setMintCap(uint256 _mintCap) external onlyOwner {... */\n      jump\t// out\n        /* \"GMD_flat.sol\":45102:45204  function setVestingPeriod(uint256 _period) external onlyOwner {... */\n    tag_86:\n        /* \"GMD_flat.sol\":22086:22099  _checkOwner() */\n      tag_190\n        /* \"GMD_flat.sol\":22086:22097  _checkOwner */\n      tag_187\n        /* \"GMD_flat.sol\":22086:22099  _checkOwner() */\n      jump\t// in\n    tag_190:\n        /* \"GMD_flat.sol\":45174:45187  vestingPeriod */\n      0x0a\n        /* \"GMD_flat.sol\":45174:45197  vestingPeriod = _period */\n      sstore\n        /* \"GMD_flat.sol\":45102:45204  function setVestingPeriod(uint256 _period) external onlyOwner {... */\n      jump\t// out\n        /* \"GMD_flat.sol\":44728:44812  function burn(uint256 _amount) external  {... */\n    tag_89:\n        /* \"GMD_flat.sol\":44779:44805  _burn(msg.sender, _amount) */\n      tag_193\n        /* \"GMD_flat.sol\":44785:44795  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":44797:44804  _amount */\n      dup3\n        /* \"GMD_flat.sol\":44779:44784  _burn */\n      tag_194\n        /* \"GMD_flat.sol\":44779:44805  _burn(msg.sender, _amount) */\n      jump\t// in\n    tag_193:\n        /* \"GMD_flat.sol\":44728:44812  function burn(uint256 _amount) external  {... */\n      pop\n      jump\t// out\n        /* \"GMD_flat.sol\":45792:45918  function recoverTreasuryTokens() external onlyOwner {... */\n    tag_91:\n        /* \"GMD_flat.sol\":22086:22099  _checkOwner() */\n      tag_196\n        /* \"GMD_flat.sol\":22086:22097  _checkOwner */\n      tag_187\n        /* \"GMD_flat.sol\":22086:22099  _checkOwner() */\n      jump\t// in\n    tag_196:\n        /* \"GMD_flat.sol\":45854:45911  USDC.safeTransfer(owner(), USDC.balanceOf(address(this))) */\n      tag_198\n        /* \"GMD_flat.sol\":45872:45879  owner() */\n      tag_199\n        /* \"GMD_flat.sol\":22265:22271  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      swap1\n        /* \"GMD_flat.sol\":22193:22278  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"GMD_flat.sol\":45872:45879  owner() */\n    tag_199:\n        /* \"GMD_flat.sol\":45881:45885  USDC */\n      sload(0x0b)\n        /* \"GMD_flat.sol\":45881:45910  USDC.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":45904:45908  this */\n      address\n        /* \"GMD_flat.sol\":45881:45910  USDC.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2858:2909   */\n      mstore\n        /* \"GMD_flat.sol\":45881:45885  USDC */\n      0x0100\n      swap1\n      swap2\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"GMD_flat.sol\":45881:45895  USDC.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2831:2849   */\n      0x24\n      add\n        /* \"GMD_flat.sol\":45881:45910  USDC.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_202\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_202:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"GMD_flat.sol\":45854:45858  USDC */\n      sload(0x0b)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n      swap1\n        /* \"GMD_flat.sol\":45854:45871  USDC.safeTransfer */\n      tag_205\n        /* \"GMD_flat.sol\":45854:45911  USDC.safeTransfer(owner(), USDC.balanceOf(address(this))) */\n      jump\t// in\n    tag_198:\n        /* \"GMD_flat.sol\":45792:45918  function recoverTreasuryTokens() external onlyOwner {... */\n      jump\t// out\n        /* \"GMD_flat.sol\":46710:47562  function claim() external nonReentrant {... */\n    tag_93:\n        /* \"GMD_flat.sol\":1777:1778  2 */\n      0x02\n        /* \"GMD_flat.sol\":2358:2365  _status */\n      sload(0x06)\n        /* \"GMD_flat.sol\":2358:2377  _status != _ENTERED */\n      eq\n      iszero\n        /* \"GMD_flat.sol\":2350:2413  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4803:4805   */\n      0x20\n        /* \"GMD_flat.sol\":2350:2413  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4785:4806   */\n      mstore\n        /* \"#utility.yul\":4842:4844   */\n      0x1f\n        /* \"#utility.yul\":4822:4840   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4815:4845   */\n      mstore\n        /* \"#utility.yul\":4881:4914   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":4861:4879   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4854:4915   */\n      mstore\n        /* \"#utility.yul\":4932:4950   */\n      0x64\n      add\n        /* \"GMD_flat.sol\":2350:2413  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"GMD_flat.sol\":1777:1778  2 */\n      0x02\n        /* \"GMD_flat.sol\":2488:2495  _status */\n      0x06\n        /* \"GMD_flat.sol\":2488:2506  _status = _ENTERED */\n      sstore\n        /* \"GMD_flat.sol\":46777:46787  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":46803:46804  0 */\n      0x00\n        /* \"GMD_flat.sol\":46768:46788  userInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":46768:46776  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":46768:46788  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GMD_flat.sol\":46768:46800  userInfo[msg.sender].totalMinted */\n      sload\n        /* \"GMD_flat.sol\":46760:46816  require(userInfo[msg.sender].totalMinted > 0, \"no mint\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5163:5165   */\n      0x20\n        /* \"GMD_flat.sol\":46760:46816  require(userInfo[msg.sender].totalMinted > 0, \"no mint\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5145:5166   */\n      mstore\n        /* \"#utility.yul\":5202:5203   */\n      0x07\n        /* \"#utility.yul\":5182:5200   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5175:5204   */\n      mstore\n      shl(0xca, 0x1b9bc81b5a5b9d)\n        /* \"#utility.yul\":5220:5238   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5213:5250   */\n      mstore\n        /* \"#utility.yul\":5267:5285   */\n      0x64\n      add\n        /* \"GMD_flat.sol\":46760:46816  require(userInfo[msg.sender].totalMinted > 0, \"no mint\") */\n      tag_208\n        /* \"#utility.yul\":4961:5291   */\n      jump\n        /* \"GMD_flat.sol\":46760:46816  require(userInfo[msg.sender].totalMinted > 0, \"no mint\") */\n    tag_211:\n        /* \"GMD_flat.sol\":46874:46884  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":46826:46842  uint256 timePass */\n      0x00\n        /* \"GMD_flat.sol\":46865:46885  userInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":46865:46873  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":46865:46885  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"GMD_flat.sol\":46865:46905  userInfo[msg.sender].lastInteractionTime */\n      0x01\n      add\n      sload\n        /* \"GMD_flat.sol\":46845:46906  block.timestamp.sub(userInfo[msg.sender].lastInteractionTime) */\n      tag_214\n      swap1\n        /* \"GMD_flat.sol\":46845:46860  block.timestamp */\n      timestamp\n      swap1\n        /* \"GMD_flat.sol\":46845:46864  block.timestamp.sub */\n      tag_168\n        /* \"GMD_flat.sol\":46845:46906  block.timestamp.sub(userInfo[msg.sender].lastInteractionTime) */\n      jump\t// in\n    tag_214:\n        /* \"GMD_flat.sol\":46968:46978  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":46916:46933  uint256 claimable */\n      0x00\n        /* \"GMD_flat.sol\":46959:46979  userInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":46959:46967  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":46959:46979  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"GMD_flat.sol\":46959:46990  userInfo[msg.sender].VestPeriod */\n      0x02\n      add\n      sload\n        /* \"GMD_flat.sol\":46826:46906  uint256 timePass = block.timestamp.sub(userInfo[msg.sender].lastInteractionTime) */\n      swap2\n      swap3\n      pop\n        /* \"GMD_flat.sol\":46916:46933  uint256 claimable */\n      swap1\n        /* \"GMD_flat.sol\":46947:46990  timePass >= userInfo[msg.sender].VestPeriod */\n      dup3\n      lt\n        /* \"GMD_flat.sol\":46943:47349  if (timePass >= userInfo[msg.sender].VestPeriod){... */\n      tag_215\n      jumpi\n      pop\n        /* \"GMD_flat.sol\":47026:47036  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":47017:47037  userInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":47017:47025  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":47017:47037  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"GMD_flat.sol\":47017:47049  userInfo[msg.sender].totalMinted */\n      dup1\n      sload\n        /* \"GMD_flat.sol\":47063:47094  userInfo[msg.sender].VestPeriod */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"GMD_flat.sol\":47063:47098  userInfo[msg.sender].VestPeriod = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"GMD_flat.sol\":46943:47349  if (timePass >= userInfo[msg.sender].VestPeriod){... */\n      jump(tag_216)\n    tag_215:\n        /* \"GMD_flat.sol\":47209:47219  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":47200:47220  userInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":47200:47208  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":47200:47220  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GMD_flat.sol\":47200:47231  userInfo[msg.sender].VestPeriod */\n      0x02\n      dup2\n      add\n      sload\n        /* \"GMD_flat.sol\":47149:47181  userInfo[msg.sender].totalMinted */\n      swap1\n      sload\n        /* \"GMD_flat.sol\":47149:47232  userInfo[msg.sender].totalMinted.mul(timePass).div(userInfo[msg.sender].VestPeriod) */\n      tag_217\n      swap2\n        /* \"GMD_flat.sol\":47200:47231  userInfo[msg.sender].VestPeriod */\n      swap1\n        /* \"GMD_flat.sol\":47149:47195  userInfo[msg.sender].totalMinted.mul(timePass) */\n      tag_218\n      swap1\n        /* \"GMD_flat.sol\":47186:47194  timePass */\n      dup6\n        /* \"GMD_flat.sol\":47149:47185  userInfo[msg.sender].totalMinted.mul */\n      tag_219\n        /* \"GMD_flat.sol\":47149:47195  userInfo[msg.sender].totalMinted.mul(timePass) */\n      jump\t// in\n    tag_218:\n        /* \"GMD_flat.sol\":47149:47199  userInfo[msg.sender].totalMinted.mul(timePass).div */\n      swap1\n      tag_220\n        /* \"GMD_flat.sol\":47149:47232  userInfo[msg.sender].totalMinted.mul(timePass).div(userInfo[msg.sender].VestPeriod) */\n      jump\t// in\n    tag_217:\n        /* \"GMD_flat.sol\":47289:47299  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":47280:47300  userInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":47280:47288  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":47280:47300  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GMD_flat.sol\":47280:47311  userInfo[msg.sender].VestPeriod */\n      0x02\n      add\n      sload\n        /* \"GMD_flat.sol\":47137:47232  claimable = userInfo[msg.sender].totalMinted.mul(timePass).div(userInfo[msg.sender].VestPeriod) */\n      swap1\n      swap2\n      pop\n        /* \"GMD_flat.sol\":47280:47325  userInfo[msg.sender].VestPeriod.sub(timePass) */\n      tag_221\n      swap1\n        /* \"GMD_flat.sol\":47316:47324  timePass */\n      dup4\n        /* \"GMD_flat.sol\":47280:47315  userInfo[msg.sender].VestPeriod.sub */\n      tag_168\n        /* \"GMD_flat.sol\":47280:47325  userInfo[msg.sender].VestPeriod.sub(timePass) */\n      jump\t// in\n    tag_221:\n        /* \"GMD_flat.sol\":47255:47265  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":47246:47266  userInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":47246:47254  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":47246:47266  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GMD_flat.sol\":47246:47277  userInfo[msg.sender].VestPeriod */\n      0x02\n      add\n        /* \"GMD_flat.sol\":47246:47325  userInfo[msg.sender].VestPeriod = userInfo[msg.sender].VestPeriod.sub(timePass) */\n      sstore\n        /* \"GMD_flat.sol\":46943:47349  if (timePass >= userInfo[msg.sender].VestPeriod){... */\n    tag_216:\n        /* \"GMD_flat.sol\":47402:47412  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":47393:47413  userInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":47393:47401  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":47393:47413  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GMD_flat.sol\":47393:47425  userInfo[msg.sender].totalMinted */\n      sload\n        /* \"GMD_flat.sol\":47393:47440  userInfo[msg.sender].totalMinted.sub(claimable) */\n      tag_222\n      swap1\n        /* \"GMD_flat.sol\":47430:47439  claimable */\n      dup3\n        /* \"GMD_flat.sol\":47393:47429  userInfo[msg.sender].totalMinted.sub */\n      tag_168\n        /* \"GMD_flat.sol\":47393:47440  userInfo[msg.sender].totalMinted.sub(claimable) */\n      jump\t// in\n    tag_222:\n        /* \"GMD_flat.sol\":47367:47377  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":47358:47378  userInfo[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":47358:47366  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":47358:47378  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"GMD_flat.sol\":47358:47440  userInfo[msg.sender].totalMinted = userInfo[msg.sender].totalMinted.sub(claimable) */\n      swap3\n      dup4\n      sstore\n        /* \"GMD_flat.sol\":47493:47508  block.timestamp */\n      timestamp\n        /* \"GMD_flat.sol\":47450:47490  userInfo[msg.sender].lastInteractionTime */\n      0x01\n      swap1\n      swap4\n      add\n        /* \"GMD_flat.sol\":47450:47508  userInfo[msg.sender].lastInteractionTime = block.timestamp */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"GMD_flat.sol\":47519:47555  this.transfer(msg.sender, claimable) */\n      swap1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5470:5521   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5537:5555   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5530:5564   */\n      dup3\n      swap1\n      mstore\n        /* \"GMD_flat.sol\":47519:47523  this */\n      address\n      swap1\n        /* \"GMD_flat.sol\":47519:47532  this.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":5443:5461   */\n      0x44\n      add\n        /* \"GMD_flat.sol\":47519:47555  this.transfer(msg.sender, claimable) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      pop\n      pop\n        /* \"GMD_flat.sol\":1734:1735  1 */\n      0x01\n        /* \"GMD_flat.sol\":2661:2668  _status */\n      0x06\n        /* \"GMD_flat.sol\":2661:2683  _status = _NOT_ENTERED */\n      sstore\n      pop\n        /* \"GMD_flat.sol\":46710:47562  function claim() external nonReentrant {... */\n      jump\t// out\n        /* \"GMD_flat.sol\":22823:22924  function renounceOwnership() public virtual onlyOwner {... */\n    tag_102:\n        /* \"GMD_flat.sol\":22086:22099  _checkOwner() */\n      tag_231\n        /* \"GMD_flat.sol\":22086:22097  _checkOwner */\n      tag_187\n        /* \"GMD_flat.sol\":22086:22099  _checkOwner() */\n      jump\t// in\n    tag_231:\n        /* \"GMD_flat.sol\":22887:22917  _transferOwnership(address(0)) */\n      tag_198\n        /* \"GMD_flat.sol\":22914:22915  0 */\n      0x00\n        /* \"GMD_flat.sol\":22887:22905  _transferOwnership */\n      tag_234\n        /* \"GMD_flat.sol\":22887:22917  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"GMD_flat.sol\":45210:45686  function claimableTokens(address _address) external view returns(uint256) {... */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":45333:45351  userInfo[_address] */\n      dup2\n      and\n        /* \"GMD_flat.sol\":45275:45282  uint256 */\n      0x00\n        /* \"GMD_flat.sol\":45333:45351  userInfo[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":45333:45341  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":45333:45351  userInfo[_address] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"GMD_flat.sol\":45333:45371  userInfo[_address].lastInteractionTime */\n      0x01\n      add\n      sload\n        /* \"GMD_flat.sol\":45275:45282  uint256 */\n      dup2\n      swap1\n        /* \"GMD_flat.sol\":45313:45372  block.timestamp.sub(userInfo[_address].lastInteractionTime) */\n      tag_236\n      swap1\n        /* \"GMD_flat.sol\":45313:45328  block.timestamp */\n      timestamp\n      swap1\n        /* \"GMD_flat.sol\":45313:45332  block.timestamp.sub */\n      tag_168\n        /* \"GMD_flat.sol\":45313:45372  block.timestamp.sub(userInfo[_address].lastInteractionTime) */\n      jump\t// in\n    tag_236:\n        /* \"GMD_flat.sol\":45434:45444  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":45382:45399  uint256 claimable */\n      0x00\n        /* \"GMD_flat.sol\":45425:45445  userInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":45425:45433  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":45425:45445  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"GMD_flat.sol\":45425:45456  userInfo[msg.sender].VestPeriod */\n      0x02\n      add\n      sload\n        /* \"GMD_flat.sol\":45294:45372  uint256 timePass = block.timestamp.sub(userInfo[_address].lastInteractionTime) */\n      swap2\n      swap3\n      pop\n        /* \"GMD_flat.sol\":45382:45399  uint256 claimable */\n      swap1\n        /* \"GMD_flat.sol\":45413:45456  timePass >= userInfo[msg.sender].VestPeriod */\n      dup3\n      lt\n        /* \"GMD_flat.sol\":45409:45654  if (timePass >= userInfo[msg.sender].VestPeriod){... */\n      tag_237\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":45483:45501  userInfo[_address] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":45483:45491  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":45483:45501  userInfo[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GMD_flat.sol\":45483:45513  userInfo[_address].totalMinted */\n      sload\n        /* \"GMD_flat.sol\":45409:45654  if (timePass >= userInfo[msg.sender].VestPeriod){... */\n      jump(tag_172)\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":45613:45631  userInfo[_address] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":45613:45621  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":45613:45631  userInfo[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GMD_flat.sol\":45613:45642  userInfo[_address].VestPeriod */\n      0x02\n      dup2\n      add\n      sload\n        /* \"GMD_flat.sol\":45564:45594  userInfo[_address].totalMinted */\n      swap1\n      sload\n        /* \"GMD_flat.sol\":45564:45643  userInfo[_address].totalMinted.mul(timePass).div(userInfo[_address].VestPeriod) */\n      tag_239\n      swap2\n        /* \"GMD_flat.sol\":45613:45642  userInfo[_address].VestPeriod */\n      swap1\n        /* \"GMD_flat.sol\":45564:45608  userInfo[_address].totalMinted.mul(timePass) */\n      tag_218\n      swap1\n        /* \"GMD_flat.sol\":45599:45607  timePass */\n      dup6\n        /* \"GMD_flat.sol\":45564:45598  userInfo[_address].totalMinted.mul */\n      tag_219\n        /* \"GMD_flat.sol\":45564:45608  userInfo[_address].totalMinted.mul(timePass) */\n      jump\t// in\n        /* \"GMD_flat.sol\":45564:45643  userInfo[_address].totalMinted.mul(timePass).div(userInfo[_address].VestPeriod) */\n    tag_239:\n        /* \"GMD_flat.sol\":45552:45643  claimable = userInfo[_address].totalMinted.mul(timePass).div(userInfo[_address].VestPeriod) */\n      swap5\n        /* \"GMD_flat.sol\":45670:45679  claimable */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"GMD_flat.sol\":45210:45686  function claimableTokens(address _address) external view returns(uint256) {... */\n      jump\t// out\n        /* \"GMD_flat.sol\":33796:33898  function symbol() public view virtual override returns (string memory) {... */\n    tag_122:\n        /* \"GMD_flat.sol\":33852:33865  string memory */\n      0x60\n        /* \"GMD_flat.sol\":33884:33891  _symbol */\n      0x04\n        /* \"GMD_flat.sol\":33877:33891  return _symbol */\n      dup1\n      sload\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n        /* \"GMD_flat.sol\":45925:46704  function mint(uint256 _amount) external nonReentrant {... */\n    tag_126:\n        /* \"GMD_flat.sol\":1777:1778  2 */\n      0x02\n        /* \"GMD_flat.sol\":2358:2365  _status */\n      sload(0x06)\n        /* \"GMD_flat.sol\":2358:2377  _status != _ENTERED */\n      eq\n      iszero\n        /* \"GMD_flat.sol\":2350:2413  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4803:4805   */\n      0x20\n        /* \"GMD_flat.sol\":2350:2413  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4785:4806   */\n      mstore\n        /* \"#utility.yul\":4842:4844   */\n      0x1f\n        /* \"#utility.yul\":4822:4840   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4815:4845   */\n      mstore\n        /* \"#utility.yul\":4881:4914   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":4861:4879   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4854:4915   */\n      mstore\n        /* \"#utility.yul\":4932:4950   */\n      0x64\n      add\n        /* \"GMD_flat.sol\":2350:2413  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_208\n        /* \"#utility.yul\":4601:4956   */\n      jump\n        /* \"GMD_flat.sol\":2350:2413  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_249:\n        /* \"GMD_flat.sol\":1777:1778  2 */\n      0x02\n        /* \"GMD_flat.sol\":2488:2495  _status */\n      0x06\n        /* \"GMD_flat.sol\":2488:2506  _status = _ENTERED */\n      sstore\n        /* \"GMD_flat.sol\":46008:46018  2000000000 */\n      0x77359400\n        /* \"GMD_flat.sol\":45997:46018  _amount <= 2000000000 */\n      dup2\n      gt\n      iszero\n        /* \"GMD_flat.sol\":45989:46043  require(_amount <= 2000000000, \"max 2000 usdc per tx\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6027:6029   */\n      0x20\n        /* \"GMD_flat.sol\":45989:46043  require(_amount <= 2000000000, \"max 2000 usdc per tx\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6009:6030   */\n      mstore\n        /* \"#utility.yul\":6066:6068   */\n      0x14\n        /* \"#utility.yul\":6046:6064   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6039:6069   */\n      mstore\n      shl(0x63, 0x0dac2f0406460606040eae6c8c640e0cae440e8f)\n        /* \"#utility.yul\":6085:6103   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6078:6128   */\n      mstore\n        /* \"#utility.yul\":6145:6163   */\n      0x64\n      add\n        /* \"GMD_flat.sol\":45989:46043  require(_amount <= 2000000000, \"max 2000 usdc per tx\") */\n      tag_208\n        /* \"#utility.yul\":5825:6169   */\n      jump\n        /* \"GMD_flat.sol\":45989:46043  require(_amount <= 2000000000, \"max 2000 usdc per tx\") */\n    tag_252:\n        /* \"GMD_flat.sol\":46061:46069  mintOpen */\n      and(0xff, sload(0x0b))\n        /* \"GMD_flat.sol\":46053:46089  require(mintOpen, \"mint not opened\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6376:6378   */\n      0x20\n        /* \"GMD_flat.sol\":46053:46089  require(mintOpen, \"mint not opened\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6358:6379   */\n      mstore\n        /* \"#utility.yul\":6415:6417   */\n      0x0f\n        /* \"#utility.yul\":6395:6413   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6388:6418   */\n      mstore\n      shl(0x8a, 0x1b5a5b9d081b9bdd081bdc195b9959)\n        /* \"#utility.yul\":6434:6452   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6427:6472   */\n      mstore\n        /* \"#utility.yul\":6489:6507   */\n      0x64\n      add\n        /* \"GMD_flat.sol\":46053:46089  require(mintOpen, \"mint not opened\") */\n      tag_208\n        /* \"#utility.yul\":6174:6513   */\n      jump\n        /* \"GMD_flat.sol\":46053:46089  require(mintOpen, \"mint not opened\") */\n    tag_255:\n        /* \"GMD_flat.sol\":46107:46111  USDC */\n      sload(0x0b)\n        /* \"GMD_flat.sol\":46107:46133  USDC.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":46122:46132  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":46107:46133  USDC.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2858:2909   */\n      mstore\n        /* \"GMD_flat.sol\":46137:46144  _amount */\n      dup3\n      swap2\n        /* \"GMD_flat.sol\":46107:46111  USDC */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"GMD_flat.sol\":46107:46121  USDC.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2831:2849   */\n      0x24\n      add\n        /* \"GMD_flat.sol\":46107:46133  USDC.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_260\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_260:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_261\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_261:\n        /* \"GMD_flat.sol\":46107:46144  USDC.balanceOf(msg.sender) >= _amount */\n      lt\n      iszero\n        /* \"GMD_flat.sol\":46099:46169  require(USDC.balanceOf(msg.sender) >= _amount, \"USDC balance too low\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6720:6722   */\n      0x20\n        /* \"GMD_flat.sol\":46099:46169  require(USDC.balanceOf(msg.sender) >= _amount, \"USDC balance too low\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6702:6723   */\n      mstore\n        /* \"#utility.yul\":6759:6761   */\n      0x14\n        /* \"#utility.yul\":6739:6757   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6732:6762   */\n      mstore\n      shl(0x60, 0x555344432062616c616e636520746f6f206c6f77)\n        /* \"#utility.yul\":6778:6796   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6771:6821   */\n      mstore\n        /* \"#utility.yul\":6838:6856   */\n      0x64\n      add\n        /* \"GMD_flat.sol\":46099:46169  require(USDC.balanceOf(msg.sender) >= _amount, \"USDC balance too low\") */\n      tag_208\n        /* \"#utility.yul\":6518:6862   */\n      jump\n        /* \"GMD_flat.sol\":46099:46169  require(USDC.balanceOf(msg.sender) >= _amount, \"USDC balance too low\") */\n    tag_262:\n        /* \"GMD_flat.sol\":46179:46196  uint256 _amountin */\n      0x00\n        /* \"GMD_flat.sol\":46199:46218  _amount.mul(10**12) */\n      tag_265\n        /* \"GMD_flat.sol\":46199:46206  _amount */\n      dup3\n        /* \"GMD_flat.sol\":46211:46217  10**12 */\n      0xe8d4a51000\n        /* \"GMD_flat.sol\":46199:46210  _amount.mul */\n      tag_219\n        /* \"GMD_flat.sol\":46199:46218  _amount.mul(10**12) */\n      jump\t// in\n    tag_265:\n        /* \"GMD_flat.sol\":46179:46218  uint256 _amountin = _amount.mul(10**12) */\n      swap1\n      pop\n        /* \"GMD_flat.sol\":46228:46245  uint256 amountOut */\n      0x00\n        /* \"GMD_flat.sol\":46248:46282  _amountin.mul(1000).div(mintPrice) */\n      tag_266\n        /* \"GMD_flat.sol\":46272:46281  mintPrice */\n      sload(0x08)\n        /* \"GMD_flat.sol\":46248:46267  _amountin.mul(1000) */\n      tag_218\n        /* \"GMD_flat.sol\":46262:46266  1000 */\n      0x03e8\n        /* \"GMD_flat.sol\":46248:46257  _amountin */\n      dup6\n        /* \"GMD_flat.sol\":46248:46261  _amountin.mul */\n      tag_219\n      swap1\n        /* \"GMD_flat.sol\":46248:46267  _amountin.mul(1000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"GMD_flat.sol\":46248:46282  _amountin.mul(1000).div(mintPrice) */\n    tag_266:\n        /* \"GMD_flat.sol\":46228:46282  uint256 amountOut = _amountin.mul(1000).div(mintPrice) */\n      swap1\n      pop\n        /* \"GMD_flat.sol\":46346:46353  mintCap */\n      sload(0x09)\n        /* \"GMD_flat.sol\":46309:46342  this.totalSupply().add(amountOut) */\n      tag_268\n        /* \"GMD_flat.sol\":46332:46341  amountOut */\n      dup3\n        /* \"GMD_flat.sol\":46309:46313  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":46309:46325  this.totalSupply */\n      and\n      0x18160ddd\n        /* \"GMD_flat.sol\":46309:46327  this.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_270\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_270:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_271\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_271:\n        /* \"GMD_flat.sol\":46309:46331  this.totalSupply().add */\n      swap1\n      tag_272\n        /* \"GMD_flat.sol\":46309:46342  this.totalSupply().add(amountOut) */\n      jump\t// in\n    tag_268:\n        /* \"GMD_flat.sol\":46309:46353  this.totalSupply().add(amountOut) <= mintCap */\n      gt\n      iszero\n        /* \"GMD_flat.sol\":46301:46371  require(this.totalSupply().add(amountOut) <= mintCap, \"over mint cap\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7069:7071   */\n      0x20\n        /* \"GMD_flat.sol\":46301:46371  require(this.totalSupply().add(amountOut) <= mintCap, \"over mint cap\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7051:7072   */\n      mstore\n        /* \"#utility.yul\":7108:7110   */\n      0x0d\n        /* \"#utility.yul\":7088:7106   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7081:7111   */\n      mstore\n      shl(0x9c, 0x06f766572206d696e742063617)\n        /* \"#utility.yul\":7127:7145   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7120:7163   */\n      mstore\n        /* \"#utility.yul\":7180:7198   */\n      0x64\n      add\n        /* \"GMD_flat.sol\":46301:46371  require(this.totalSupply().add(amountOut) <= mintCap, \"over mint cap\") */\n      tag_208\n        /* \"#utility.yul\":6867:7204   */\n      jump\n        /* \"GMD_flat.sol\":46301:46371  require(this.totalSupply().add(amountOut) <= mintCap, \"over mint cap\") */\n    tag_273:\n        /* \"GMD_flat.sol\":46425:46435  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":46416:46436  userInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":46416:46424  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":46416:46436  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GMD_flat.sol\":46416:46448  userInfo[msg.sender].totalMinted */\n      sload\n        /* \"GMD_flat.sol\":46416:46463  userInfo[msg.sender].totalMinted.add(amountOut) */\n      tag_276\n      swap1\n        /* \"GMD_flat.sol\":46453:46462  amountOut */\n      dup3\n        /* \"GMD_flat.sol\":46416:46452  userInfo[msg.sender].totalMinted.add */\n      tag_272\n        /* \"GMD_flat.sol\":46416:46463  userInfo[msg.sender].totalMinted.add(amountOut) */\n      jump\t// in\n    tag_276:\n        /* \"GMD_flat.sol\":46390:46400  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":46381:46401  userInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":46381:46389  userInfo */\n      0x07\n        /* \"GMD_flat.sol\":46381:46401  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GMD_flat.sol\":46381:46463  userInfo[msg.sender].totalMinted = userInfo[msg.sender].totalMinted.add(amountOut) */\n      swap1\n      dup2\n      sstore\n        /* \"GMD_flat.sol\":46516:46531  block.timestamp */\n      timestamp\n        /* \"GMD_flat.sol\":46473:46513  userInfo[msg.sender].lastInteractionTime */\n      0x01\n      dup3\n      add\n        /* \"GMD_flat.sol\":46473:46531  userInfo[msg.sender].lastInteractionTime = block.timestamp */\n      sstore\n        /* \"GMD_flat.sol\":46575:46588  vestingPeriod */\n      sload(0x0a)\n        /* \"GMD_flat.sol\":46541:46572  userInfo[msg.sender].VestPeriod */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"GMD_flat.sol\":46541:46588  userInfo[msg.sender].VestPeriod = vestingPeriod */\n      sstore\n        /* \"GMD_flat.sol\":46599:46630  _mint(address(this), amountOut) */\n      tag_277\n        /* \"GMD_flat.sol\":46613:46617  this */\n      address\n        /* \"GMD_flat.sol\":46620:46629  amountOut */\n      dup3\n        /* \"GMD_flat.sol\":46599:46604  _mint */\n      tag_278\n        /* \"GMD_flat.sol\":46599:46630  _mint(address(this), amountOut) */\n      jump\t// in\n    tag_277:\n        /* \"GMD_flat.sol\":46640:46644  USDC */\n      sload(0x0b)\n        /* \"GMD_flat.sol\":46640:46697  USDC.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_227\n      swap1\n        /* \"GMD_flat.sol\":46640:46644  USDC */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"GMD_flat.sol\":46662:46672  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":46682:46686  this */\n      address\n        /* \"GMD_flat.sol\":46689:46696  _amount */\n      dup7\n        /* \"GMD_flat.sol\":46640:46661  USDC.safeTransferFrom */\n      tag_280\n        /* \"GMD_flat.sol\":46640:46697  USDC.safeTransferFrom(msg.sender, address(this), _amount) */\n      jump\t// in\n        /* \"GMD_flat.sol\":38023:38450  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_129:\n        /* \"GMD_flat.sol\":38116:38120  bool */\n      0x00\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":38116:38120  bool */\n      dup2\n        /* \"GMD_flat.sol\":38197:38222  allowance(owner, spender) */\n      tag_283\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      dup3\n        /* \"GMD_flat.sol\":38214:38221  spender */\n      dup7\n        /* \"GMD_flat.sol\":38197:38206  allowance */\n      tag_138\n        /* \"GMD_flat.sol\":38197:38222  allowance(owner, spender) */\n      jump\t// in\n    tag_283:\n        /* \"GMD_flat.sol\":38170:38222  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"GMD_flat.sol\":38260:38275  subtractedValue */\n      dup4\n        /* \"GMD_flat.sol\":38240:38256  currentAllowance */\n      dup2\n        /* \"GMD_flat.sol\":38240:38275  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"GMD_flat.sol\":38232:38317  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7411:7413   */\n      0x20\n        /* \"GMD_flat.sol\":38232:38317  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7393:7414   */\n      mstore\n        /* \"#utility.yul\":7450:7452   */\n      0x25\n        /* \"#utility.yul\":7430:7448   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7423:7453   */\n      mstore\n        /* \"#utility.yul\":7489:7523   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":7469:7487   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7462:7524   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":7540:7558   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7533:7568   */\n      mstore\n        /* \"#utility.yul\":7585:7604   */\n      0x84\n      add\n        /* \"GMD_flat.sol\":38232:38317  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_208\n        /* \"#utility.yul\":7209:7610   */\n      jump\n        /* \"GMD_flat.sol\":38232:38317  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_284:\n        /* \"GMD_flat.sol\":38351:38411  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_287\n        /* \"GMD_flat.sol\":38360:38365  owner */\n      dup3\n        /* \"GMD_flat.sol\":38367:38374  spender */\n      dup7\n        /* \"GMD_flat.sol\":38395:38410  subtractedValue */\n      dup7\n        /* \"GMD_flat.sol\":38376:38392  currentAllowance */\n      dup5\n        /* \"GMD_flat.sol\":38376:38410  currentAllowance - subtractedValue */\n      sub\n        /* \"GMD_flat.sol\":38351:38359  _approve */\n      tag_164\n        /* \"GMD_flat.sol\":38351:38411  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_287:\n      pop\n        /* \"GMD_flat.sol\":38439:38443  true */\n      0x01\n      swap5\n        /* \"GMD_flat.sol\":38023:38450  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GMD_flat.sol\":35158:35347  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_133:\n        /* \"GMD_flat.sol\":35237:35241  bool */\n      0x00\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":35291:35319  _transfer(owner, to, amount) */\n      tag_163\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      dup2\n        /* \"GMD_flat.sol\":35308:35310  to */\n      dup6\n        /* \"GMD_flat.sol\":35312:35318  amount */\n      dup6\n        /* \"GMD_flat.sol\":35291:35300  _transfer */\n      tag_177\n        /* \"GMD_flat.sol\":35291:35319  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"GMD_flat.sol\":35405:35554  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":35520:35538  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"GMD_flat.sol\":35494:35501  uint256 */\n      0x00\n        /* \"GMD_flat.sol\":35520:35538  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":35520:35531  _allowances */\n      0x01\n        /* \"GMD_flat.sol\":35520:35538  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"GMD_flat.sol\":35520:35547  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"GMD_flat.sol\":35405:35554  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"GMD_flat.sol\":45693:45786  function setOpenMint(bool _mintOpen) external onlyOwner {... */\n    tag_143:\n        /* \"GMD_flat.sol\":22086:22099  _checkOwner() */\n      tag_293\n        /* \"GMD_flat.sol\":22086:22097  _checkOwner */\n      tag_187\n        /* \"GMD_flat.sol\":22086:22099  _checkOwner() */\n      jump\t// in\n    tag_293:\n        /* \"GMD_flat.sol\":45759:45767  mintOpen */\n      0x0b\n        /* \"GMD_flat.sol\":45759:45779  mintOpen = _mintOpen */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"GMD_flat.sol\":45693:45786  function setOpenMint(bool _mintOpen) external onlyOwner {... */\n      jump\t// out\n        /* \"GMD_flat.sol\":47568:47697  function remainingMintableTokens() external view returns(uint256){... */\n    tag_145:\n        /* \"GMD_flat.sol\":47625:47632  uint256 */\n      0x00\n        /* \"GMD_flat.sol\":47659:47690  mintCap.sub(this.totalSupply()) */\n      tag_296\n        /* \"GMD_flat.sol\":47671:47675  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":47671:47687  this.totalSupply */\n      and\n      0x18160ddd\n        /* \"GMD_flat.sol\":47671:47689  this.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_298\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_298:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_299\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_299:\n        /* \"GMD_flat.sol\":47659:47666  mintCap */\n      sload(0x09)\n      swap1\n        /* \"GMD_flat.sol\":47659:47670  mintCap.sub */\n      tag_168\n        /* \"GMD_flat.sol\":47659:47690  mintCap.sub(this.totalSupply()) */\n      jump\t// in\n    tag_296:\n        /* \"GMD_flat.sol\":47652:47690  return mintCap.sub(this.totalSupply()) */\n      swap1\n      pop\n        /* \"GMD_flat.sol\":47568:47697  function remainingMintableTokens() external view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"GMD_flat.sol\":23073:23271  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_149:\n        /* \"GMD_flat.sol\":22086:22099  _checkOwner() */\n      tag_301\n        /* \"GMD_flat.sol\":22086:22097  _checkOwner */\n      tag_187\n        /* \"GMD_flat.sol\":22086:22099  _checkOwner() */\n      jump\t// in\n    tag_301:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":23161:23183  newOwner != address(0) */\n      dup2\n      and\n        /* \"GMD_flat.sol\":23153:23226  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7817:7819   */\n      0x20\n        /* \"GMD_flat.sol\":23153:23226  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7799:7820   */\n      mstore\n        /* \"#utility.yul\":7856:7858   */\n      0x26\n        /* \"#utility.yul\":7836:7854   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7829:7859   */\n      mstore\n        /* \"#utility.yul\":7895:7929   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7875:7893   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7868:7930   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":7946:7964   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7939:7975   */\n      mstore\n        /* \"#utility.yul\":7992:8011   */\n      0x84\n      add\n        /* \"GMD_flat.sol\":23153:23226  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_208\n        /* \"#utility.yul\":7615:8017   */\n      jump\n        /* \"GMD_flat.sol\":23153:23226  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_303:\n        /* \"GMD_flat.sol\":23236:23264  _transferOwnership(newOwner) */\n      tag_193\n        /* \"GMD_flat.sol\":23255:23263  newOwner */\n      dup2\n        /* \"GMD_flat.sol\":23236:23254  _transferOwnership */\n      tag_234\n        /* \"GMD_flat.sol\":23236:23264  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"GMD_flat.sol\":44921:45096  function setMintPrice(uint256 _mintPrice) external onlyOwner {... */\n    tag_152:\n        /* \"GMD_flat.sol\":22086:22099  _checkOwner() */\n      tag_308\n        /* \"GMD_flat.sol\":22086:22097  _checkOwner */\n      tag_187\n        /* \"GMD_flat.sol\":22086:22099  _checkOwner() */\n      jump\t// in\n    tag_308:\n        /* \"GMD_flat.sol\":45014:45023  mintPrice */\n      sload(0x08)\n        /* \"GMD_flat.sol\":45000:45010  _mintPrice */\n      dup2\n        /* \"GMD_flat.sol\":45000:45023  _mintPrice >= mintPrice */\n      lt\n      iszero\n        /* \"GMD_flat.sol\":44992:45057  require(_mintPrice >= mintPrice, \"can't be lower than last mint\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8224:8226   */\n      0x20\n        /* \"GMD_flat.sol\":44992:45057  require(_mintPrice >= mintPrice, \"can't be lower than last mint\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8206:8227   */\n      mstore\n        /* \"#utility.yul\":8263:8265   */\n      0x1d\n        /* \"#utility.yul\":8243:8261   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8236:8266   */\n      mstore\n        /* \"#utility.yul\":8302:8333   */\n      0x63616e2774206265206c6f776572207468616e206c617374206d696e74000000\n        /* \"#utility.yul\":8282:8300   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8275:8334   */\n      mstore\n        /* \"#utility.yul\":8351:8369   */\n      0x64\n      add\n        /* \"GMD_flat.sol\":44992:45057  require(_mintPrice >= mintPrice, \"can't be lower than last mint\") */\n      tag_208\n        /* \"#utility.yul\":8022:8375   */\n      jump\n        /* \"GMD_flat.sol\":44992:45057  require(_mintPrice >= mintPrice, \"can't be lower than last mint\") */\n    tag_310:\n        /* \"GMD_flat.sol\":45067:45076  mintPrice */\n      0x08\n        /* \"GMD_flat.sol\":45067:45089  mintPrice = _mintPrice */\n      sstore\n        /* \"GMD_flat.sol\":44921:45096  function setMintPrice(uint256 _mintPrice) external onlyOwner {... */\n      jump\t// out\n        /* \"GMD_flat.sol\":41539:41909  function _approve(... */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":41670:41689  owner != address(0) */\n      dup4\n      and\n        /* \"GMD_flat.sol\":41662:41730  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8582:8584   */\n      0x20\n        /* \"GMD_flat.sol\":41662:41730  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8564:8585   */\n      mstore\n        /* \"#utility.yul\":8621:8623   */\n      0x24\n        /* \"#utility.yul\":8601:8619   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8594:8624   */\n      mstore\n        /* \"#utility.yul\":8660:8694   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":8640:8658   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8633:8695   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8711:8729   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8704:8738   */\n      mstore\n        /* \"#utility.yul\":8755:8774   */\n      0x84\n      add\n        /* \"GMD_flat.sol\":41662:41730  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_208\n        /* \"#utility.yul\":8380:8780   */\n      jump\n        /* \"GMD_flat.sol\":41662:41730  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_315:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":41748:41769  spender != address(0) */\n      dup3\n      and\n        /* \"GMD_flat.sol\":41740:41808  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8987:8989   */\n      0x20\n        /* \"GMD_flat.sol\":41740:41808  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8969:8990   */\n      mstore\n        /* \"#utility.yul\":9026:9028   */\n      0x22\n        /* \"#utility.yul\":9006:9024   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8999:9029   */\n      mstore\n        /* \"#utility.yul\":9065:9099   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":9045:9063   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9038:9100   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":9116:9134   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9109:9141   */\n      mstore\n        /* \"#utility.yul\":9158:9177   */\n      0x84\n      add\n        /* \"GMD_flat.sol\":41740:41808  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_208\n        /* \"#utility.yul\":8785:9183   */\n      jump\n        /* \"GMD_flat.sol\":41740:41808  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_318:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":41819:41837  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":41819:41830  _allowances */\n      0x01\n        /* \"GMD_flat.sol\":41819:41837  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"GMD_flat.sol\":41819:41846  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"GMD_flat.sol\":41819:41855  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"GMD_flat.sol\":41870:41902  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1440:1465   */\n      dup5\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":41870:41902  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1413:1431   */\n      add\n        /* \"GMD_flat.sol\":41870:41902  Approval(owner, spender, amount) */\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"GMD_flat.sol\":41539:41909  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GMD_flat.sol\":5843:5939  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_168:\n        /* \"GMD_flat.sol\":5901:5908  uint256 */\n      0x00\n        /* \"GMD_flat.sol\":5927:5932  a - b */\n      tag_172\n        /* \"GMD_flat.sol\":5931:5932  b */\n      dup3\n        /* \"GMD_flat.sol\":5927:5928  a */\n      dup5\n        /* \"GMD_flat.sol\":5927:5932  a - b */\n      tag_324\n      jump\t// in\n        /* \"GMD_flat.sol\":42190:42631  function _spendAllowance(... */\n    tag_175:\n        /* \"GMD_flat.sol\":42320:42344  uint256 currentAllowance */\n      0x00\n        /* \"GMD_flat.sol\":42347:42372  allowance(owner, spender) */\n      tag_326\n        /* \"GMD_flat.sol\":42357:42362  owner */\n      dup5\n        /* \"GMD_flat.sol\":42364:42371  spender */\n      dup5\n        /* \"GMD_flat.sol\":42347:42356  allowance */\n      tag_138\n        /* \"GMD_flat.sol\":42347:42372  allowance(owner, spender) */\n      jump\t// in\n    tag_326:\n        /* \"GMD_flat.sol\":42320:42372  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"GMD_flat.sol\":42386:42402  currentAllowance */\n      dup2\n        /* \"GMD_flat.sol\":42386:42423  currentAllowance != type(uint256).max */\n      eq\n        /* \"GMD_flat.sol\":42382:42625  if (currentAllowance != type(uint256).max) {... */\n      tag_331\n      jumpi\n        /* \"GMD_flat.sol\":42467:42473  amount */\n      dup2\n        /* \"GMD_flat.sol\":42447:42463  currentAllowance */\n      dup2\n        /* \"GMD_flat.sol\":42447:42473  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"GMD_flat.sol\":42439:42507  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9520:9522   */\n      0x20\n        /* \"GMD_flat.sol\":42439:42507  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9502:9523   */\n      mstore\n        /* \"#utility.yul\":9559:9561   */\n      0x1d\n        /* \"#utility.yul\":9539:9557   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9532:9562   */\n      mstore\n        /* \"#utility.yul\":9598:9629   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":9578:9596   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9571:9630   */\n      mstore\n        /* \"#utility.yul\":9647:9665   */\n      0x64\n      add\n        /* \"GMD_flat.sol\":42439:42507  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_208\n        /* \"#utility.yul\":9318:9671   */\n      jump\n        /* \"GMD_flat.sol\":42439:42507  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_328:\n        /* \"GMD_flat.sol\":42549:42600  _approve(owner, spender, currentAllowance - amount) */\n      tag_331\n        /* \"GMD_flat.sol\":42558:42563  owner */\n      dup5\n        /* \"GMD_flat.sol\":42565:42572  spender */\n      dup5\n        /* \"GMD_flat.sol\":42593:42599  amount */\n      dup5\n        /* \"GMD_flat.sol\":42574:42590  currentAllowance */\n      dup5\n        /* \"GMD_flat.sol\":42574:42599  currentAllowance - amount */\n      sub\n        /* \"GMD_flat.sol\":42549:42557  _approve */\n      tag_164\n        /* \"GMD_flat.sol\":42549:42600  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_331:\n        /* \"GMD_flat.sol\":42310:42631  {... */\n      pop\n        /* \"GMD_flat.sol\":42190:42631  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GMD_flat.sol\":38904:39555  function _transfer(... */\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":39030:39048  from != address(0) */\n      dup4\n      and\n        /* \"GMD_flat.sol\":39022:39090  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9878:9880   */\n      0x20\n        /* \"GMD_flat.sol\":39022:39090  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9860:9881   */\n      mstore\n        /* \"#utility.yul\":9917:9919   */\n      0x25\n        /* \"#utility.yul\":9897:9915   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9890:9920   */\n      mstore\n        /* \"#utility.yul\":9956:9990   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":9936:9954   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9929:9991   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":10007:10025   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10000:10035   */\n      mstore\n        /* \"#utility.yul\":10052:10071   */\n      0x84\n      add\n        /* \"GMD_flat.sol\":39022:39090  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_208\n        /* \"#utility.yul\":9676:10077   */\n      jump\n        /* \"GMD_flat.sol\":39022:39090  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_333:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":39108:39124  to != address(0) */\n      dup3\n      and\n        /* \"GMD_flat.sol\":39100:39164  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10284:10286   */\n      0x20\n        /* \"GMD_flat.sol\":39100:39164  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10266:10287   */\n      mstore\n        /* \"#utility.yul\":10323:10325   */\n      0x23\n        /* \"#utility.yul\":10303:10321   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10296:10326   */\n      mstore\n        /* \"#utility.yul\":10362:10396   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":10342:10360   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10335:10397   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":10413:10431   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10406:10439   */\n      mstore\n        /* \"#utility.yul\":10456:10475   */\n      0x84\n      add\n        /* \"GMD_flat.sol\":39100:39164  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_208\n        /* \"#utility.yul\":10082:10481   */\n      jump\n        /* \"GMD_flat.sol\":39100:39164  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_336:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":39246:39261  _balances[from] */\n      dup4\n      and\n        /* \"GMD_flat.sol\":39224:39243  uint256 fromBalance */\n      0x00\n        /* \"GMD_flat.sol\":39246:39261  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"GMD_flat.sol\":39279:39300  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"GMD_flat.sol\":39271:39343  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10688:10690   */\n      0x20\n        /* \"GMD_flat.sol\":39271:39343  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10670:10691   */\n      mstore\n        /* \"#utility.yul\":10727:10729   */\n      0x26\n        /* \"#utility.yul\":10707:10725   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10700:10730   */\n      mstore\n        /* \"#utility.yul\":10766:10800   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":10746:10764   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10739:10801   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":10817:10835   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10810:10846   */\n      mstore\n        /* \"#utility.yul\":10863:10882   */\n      0x84\n      add\n        /* \"GMD_flat.sol\":39271:39343  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_208\n        /* \"#utility.yul\":10486:10888   */\n      jump\n        /* \"GMD_flat.sol\":39271:39343  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_341:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":39377:39392  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"GMD_flat.sol\":39377:39386  _balances */\n      0x00\n        /* \"GMD_flat.sol\":39377:39392  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"GMD_flat.sol\":39395:39415  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"GMD_flat.sol\":39377:39415  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"GMD_flat.sol\":39435:39448  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"GMD_flat.sol\":39435:39458  _balances[to] += amount */\n      dup1\n      sload\n        /* \"GMD_flat.sol\":39409:39415  amount */\n      dup5\n      swap3\n        /* \"GMD_flat.sol\":39377:39386  _balances */\n      swap1\n        /* \"GMD_flat.sol\":39435:39458  _balances[to] += amount */\n      tag_344\n      swap1\n        /* \"GMD_flat.sol\":39409:39415  amount */\n      dup5\n      swap1\n        /* \"GMD_flat.sol\":39435:39458  _balances[to] += amount */\n      tag_184\n      jump\t// in\n    tag_344:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GMD_flat.sol\":39489:39491  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":39474:39500  Transfer(from, to, amount) */\n      and\n        /* \"GMD_flat.sol\":39483:39487  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":39474:39500  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"GMD_flat.sol\":39493:39499  amount */\n      dup5\n        /* \"GMD_flat.sol\":39474:39500  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_345\n      swap2\n        /* \"#utility.yul\":1440:1465   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1428:1430   */\n      0x20\n        /* \"#utility.yul\":1413:1431   */\n      add\n      swap1\n        /* \"#utility.yul\":1294:1471   */\n      jump\n        /* \"GMD_flat.sol\":39474:39500  Transfer(from, to, amount) */\n    tag_345:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"GMD_flat.sol\":39511:39548  _afterTokenTransfer(from, to, amount) */\n      tag_331\n        /* \"GMD_flat.sol\":40540:41116  function _burn(address account, uint256 amount) internal virtual {... */\n      jump\n        /* \"GMD_flat.sol\":22351:22481  function _checkOwner() internal view virtual {... */\n    tag_187:\n        /* \"GMD_flat.sol\":22265:22271  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"GMD_flat.sol\":20875:20885  msg.sender */\n      caller\n        /* \"GMD_flat.sol\":22414:22437  owner() == _msgSender() */\n      eq\n        /* \"GMD_flat.sol\":22406:22474  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11095:11097   */\n      0x20\n        /* \"GMD_flat.sol\":22406:22474  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11077:11098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11114:11132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11107:11137   */\n      mstore\n        /* \"#utility.yul\":11173:11207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11153:11171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11146:11208   */\n      mstore\n        /* \"#utility.yul\":11225:11243   */\n      0x64\n      add\n        /* \"GMD_flat.sol\":22406:22474  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_208\n        /* \"#utility.yul\":10893:11249   */\n      jump\n        /* \"GMD_flat.sol\":40540:41116  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":40623:40644  account != address(0) */\n      dup3\n      and\n        /* \"GMD_flat.sol\":40615:40682  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_355\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11456:11458   */\n      0x20\n        /* \"GMD_flat.sol\":40615:40682  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11438:11459   */\n      mstore\n        /* \"#utility.yul\":11495:11497   */\n      0x21\n        /* \"#utility.yul\":11475:11493   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11468:11498   */\n      mstore\n        /* \"#utility.yul\":11534:11568   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":11514:11532   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11507:11569   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":11585:11603   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11578:11609   */\n      mstore\n        /* \"#utility.yul\":11626:11645   */\n      0x84\n      add\n        /* \"GMD_flat.sol\":40615:40682  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_208\n        /* \"#utility.yul\":11254:11651   */\n      jump\n        /* \"GMD_flat.sol\":40615:40682  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_355:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":40778:40796  _balances[account] */\n      dup3\n      and\n        /* \"GMD_flat.sol\":40753:40775  uint256 accountBalance */\n      0x00\n        /* \"GMD_flat.sol\":40778:40796  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"GMD_flat.sol\":40814:40838  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"GMD_flat.sol\":40806:40877  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_359\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11858:11860   */\n      0x20\n        /* \"GMD_flat.sol\":40806:40877  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11840:11861   */\n      mstore\n        /* \"#utility.yul\":11897:11899   */\n      0x22\n        /* \"#utility.yul\":11877:11895   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11870:11900   */\n      mstore\n        /* \"#utility.yul\":11936:11970   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":11916:11934   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11909:11971   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":11987:12005   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11980:12012   */\n      mstore\n        /* \"#utility.yul\":12029:12048   */\n      0x84\n      add\n        /* \"GMD_flat.sol\":40806:40877  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_208\n        /* \"#utility.yul\":11656:12054   */\n      jump\n        /* \"GMD_flat.sol\":40806:40877  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_359:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":40911:40929  _balances[account] */\n      dup4\n      and\n        /* \"GMD_flat.sol\":40911:40920  _balances */\n      0x00\n        /* \"GMD_flat.sol\":40911:40929  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"GMD_flat.sol\":40932:40955  accountBalance - amount */\n      dup4\n      dup4\n      sub\n        /* \"GMD_flat.sol\":40911:40955  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"GMD_flat.sol\":40975:40987  _totalSupply */\n      0x02\n        /* \"GMD_flat.sol\":40975:40997  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"GMD_flat.sol\":40949:40955  amount */\n      dup5\n      swap3\n        /* \"GMD_flat.sol\":40911:40920  _balances */\n      swap1\n        /* \"GMD_flat.sol\":40975:40997  _totalSupply -= amount */\n      tag_362\n      swap1\n        /* \"GMD_flat.sol\":40949:40955  amount */\n      dup5\n      swap1\n        /* \"GMD_flat.sol\":40975:40997  _totalSupply -= amount */\n      tag_324\n      jump\t// in\n    tag_362:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"GMD_flat.sol\":41013:41050  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1440:1465   */\n      dup3\n      dup2\n      mstore\n        /* \"GMD_flat.sol\":41039:41040  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":41013:41050  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1428:1430   */\n      0x20\n        /* \"#utility.yul\":1413:1431   */\n      add\n        /* \"GMD_flat.sol\":41013:41050  Transfer(account, address(0), amount) */\n      tag_321\n        /* \"#utility.yul\":1294:1471   */\n      jump\n        /* \"GMD_flat.sol\":41061:41109  _afterTokenTransfer(account, address(0), amount) */\n    tag_364:\n        /* \"GMD_flat.sol\":40605:41116  {... */\n      pop\n        /* \"GMD_flat.sol\":40540:41116  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"GMD_flat.sol\":27102:27307  function safeTransfer(... */\n    tag_205:\n        /* \"GMD_flat.sol\":27241:27299  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5488:5520   */\n      dup4\n      and\n        /* \"GMD_flat.sol\":27241:27299  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5470:5521   */\n      mstore\n        /* \"#utility.yul\":5537:5555   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":5530:5564   */\n      dup3\n      swap1\n      mstore\n        /* \"GMD_flat.sol\":27214:27300  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_364\n      swap1\n        /* \"GMD_flat.sol\":27234:27239  token */\n      dup5\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"GMD_flat.sol\":27264:27287  token.transfer.selector */\n      swap1\n        /* \"#utility.yul\":5443:5461   */\n      0x64\n      add\n        /* \"GMD_flat.sol\":27241:27299  abi.encodeWithSelector(token.transfer.selector, to, value) */\n    tag_367:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"GMD_flat.sol\":27214:27233  _callOptionalReturn */\n      tag_368\n        /* \"GMD_flat.sol\":27214:27300  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"GMD_flat.sol\":6186:6282  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_219:\n        /* \"GMD_flat.sol\":6244:6251  uint256 */\n      0x00\n        /* \"GMD_flat.sol\":6270:6275  a * b */\n      tag_172\n        /* \"GMD_flat.sol\":6274:6275  b */\n      dup3\n        /* \"GMD_flat.sol\":6270:6271  a */\n      dup5\n        /* \"GMD_flat.sol\":6270:6275  a * b */\n      tag_371\n      jump\t// in\n        /* \"GMD_flat.sol\":6571:6667  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_220:\n        /* \"GMD_flat.sol\":6629:6636  uint256 */\n      0x00\n        /* \"GMD_flat.sol\":6655:6660  a / b */\n      tag_172\n        /* \"GMD_flat.sol\":6659:6660  b */\n      dup3\n        /* \"GMD_flat.sol\":6655:6656  a */\n      dup5\n        /* \"GMD_flat.sol\":6655:6660  a / b */\n      tag_374\n      jump\t// in\n        /* \"GMD_flat.sol\":23425:23612  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_234:\n        /* \"GMD_flat.sol\":23517:23523  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":23533:23550  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"GMD_flat.sol\":23565:23605  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"GMD_flat.sol\":23517:23523  _owner */\n      swap2\n      and\n      swap2\n        /* \"GMD_flat.sol\":23533:23550  _owner = newOwner */\n      swap1\n        /* \"GMD_flat.sol\":23517:23523  _owner */\n      dup3\n      swap1\n        /* \"GMD_flat.sol\":23565:23605  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"GMD_flat.sol\":23498:23514  address oldOwner */\n      0x00\n      swap1\n        /* \"GMD_flat.sol\":23565:23605  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"GMD_flat.sol\":23488:23612  {... */\n      pop\n        /* \"GMD_flat.sol\":23425:23612  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"GMD_flat.sol\":5476:5572  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_272:\n        /* \"GMD_flat.sol\":5534:5541  uint256 */\n      0x00\n        /* \"GMD_flat.sol\":5560:5565  a + b */\n      tag_172\n        /* \"GMD_flat.sol\":5564:5565  b */\n      dup3\n        /* \"GMD_flat.sol\":5560:5561  a */\n      dup5\n        /* \"GMD_flat.sol\":5560:5565  a + b */\n      tag_184\n      jump\t// in\n        /* \"GMD_flat.sol\":39831:40220  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_278:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":39914:39935  account != address(0) */\n      dup3\n      and\n        /* \"GMD_flat.sol\":39906:39971  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12656:12658   */\n      0x20\n        /* \"GMD_flat.sol\":39906:39971  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12638:12659   */\n      mstore\n        /* \"#utility.yul\":12695:12697   */\n      0x1f\n        /* \"#utility.yul\":12675:12693   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12668:12698   */\n      mstore\n        /* \"#utility.yul\":12734:12767   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":12714:12732   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12707:12768   */\n      mstore\n        /* \"#utility.yul\":12785:12803   */\n      0x64\n      add\n        /* \"GMD_flat.sol\":39906:39971  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_208\n        /* \"#utility.yul\":12454:12809   */\n      jump\n        /* \"GMD_flat.sol\":39906:39971  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_379:\n        /* \"GMD_flat.sol\":40058:40064  amount */\n      dup1\n        /* \"GMD_flat.sol\":40042:40054  _totalSupply */\n      0x02\n      0x00\n        /* \"GMD_flat.sol\":40042:40064  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_383\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_383:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":40074:40092  _balances[account] */\n      dup3\n      and\n        /* \"GMD_flat.sol\":40074:40083  _balances */\n      0x00\n        /* \"GMD_flat.sol\":40074:40092  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"GMD_flat.sol\":40074:40102  _balances[account] += amount */\n      dup1\n      sload\n        /* \"GMD_flat.sol\":40096:40102  amount */\n      dup4\n      swap3\n        /* \"GMD_flat.sol\":40074:40083  _balances */\n      swap1\n        /* \"GMD_flat.sol\":40074:40102  _balances[account] += amount */\n      tag_384\n      swap1\n        /* \"GMD_flat.sol\":40096:40102  amount */\n      dup5\n      swap1\n        /* \"GMD_flat.sol\":40074:40102  _balances[account] += amount */\n      tag_184\n      jump\t// in\n    tag_384:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"GMD_flat.sol\":40117:40154  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1440:1465   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":40117:40154  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"GMD_flat.sol\":40134:40135  0 */\n      0x00\n      swap1\n        /* \"GMD_flat.sol\":40117:40154  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1428:1430   */\n      0x20\n        /* \"#utility.yul\":1413:1431   */\n      add\n        /* \"GMD_flat.sol\":40117:40154  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"GMD_flat.sol\":39831:40220  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"GMD_flat.sol\":27313:27554  function safeTransferFrom(... */\n    tag_280:\n        /* \"GMD_flat.sol\":27478:27546  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13072:13087   */\n      dup1\n      dup6\n      and\n        /* \"GMD_flat.sol\":27478:27546  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":13054:13088   */\n      mstore\n        /* \"#utility.yul\":13124:13139   */\n      dup4\n      and\n        /* \"#utility.yul\":13104:13122   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13097:13140   */\n      mstore\n        /* \"#utility.yul\":13156:13174   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":13149:13183   */\n      dup3\n      swap1\n      mstore\n        /* \"GMD_flat.sol\":27451:27547  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_331\n      swap1\n        /* \"GMD_flat.sol\":27471:27476  token */\n      dup6\n      swap1\n      shl(0xe0, 0x23b872dd)\n        /* \"GMD_flat.sol\":27501:27528  token.transferFrom.selector */\n      swap1\n        /* \"#utility.yul\":12989:13007   */\n      0x84\n      add\n        /* \"GMD_flat.sol\":27478:27546  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      tag_367\n        /* \"#utility.yul\":12814:13189   */\n      jump\n        /* \"GMD_flat.sol\":30086:30792  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_368:\n        /* \"GMD_flat.sol\":30505:30528  bytes memory returndata */\n      0x00\n        /* \"GMD_flat.sol\":30531:30600  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_394\n        /* \"GMD_flat.sol\":30559:30563  data */\n      dup3\n        /* \"GMD_flat.sol\":30531:30600  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"GMD_flat.sol\":30539:30544  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":30531:30558  address(token).functionCall */\n      and\n      tag_395\n      swap1\n        /* \"GMD_flat.sol\":30531:30600  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_394:\n        /* \"GMD_flat.sol\":30614:30631  returndata.length */\n      dup1\n      mload\n        /* \"GMD_flat.sol\":30505:30600  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"GMD_flat.sol\":30614:30635  returndata.length > 0 */\n      iszero\n        /* \"GMD_flat.sol\":30610:30786  if (returndata.length > 0) {... */\n      tag_364\n      jumpi\n        /* \"GMD_flat.sol\":30709:30719  returndata */\n      dup1\n        /* \"GMD_flat.sol\":30698:30728  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_397\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_397:\n        /* \"GMD_flat.sol\":30690:30775  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_364\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13396:13398   */\n      0x20\n        /* \"GMD_flat.sol\":30690:30775  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13378:13399   */\n      mstore\n        /* \"#utility.yul\":13435:13437   */\n      0x2a\n        /* \"#utility.yul\":13415:13433   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13408:13438   */\n      mstore\n        /* \"#utility.yul\":13474:13508   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":13454:13472   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13447:13509   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":13525:13543   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13518:13558   */\n      mstore\n        /* \"#utility.yul\":13575:13594   */\n      0x84\n      add\n        /* \"GMD_flat.sol\":30690:30775  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_208\n        /* \"#utility.yul\":13194:13600   */\n      jump\n        /* \"GMD_flat.sol\":13387:13610  function functionCall(... */\n    tag_395:\n        /* \"GMD_flat.sol\":13520:13532  bytes memory */\n      0x60\n        /* \"GMD_flat.sol\":13551:13603  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_239\n        /* \"GMD_flat.sol\":13573:13579  target */\n      dup5\n        /* \"GMD_flat.sol\":13581:13585  data */\n      dup5\n        /* \"GMD_flat.sol\":13587:13588  0 */\n      0x00\n        /* \"GMD_flat.sol\":13590:13602  errorMessage */\n      dup6\n        /* \"GMD_flat.sol\":13520:13532  bytes memory */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":10991:11010  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"GMD_flat.sol\":14754:14814  require(isContract(target), \"Address: call to non-contract\") */\n      tag_410\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14214:14216   */\n      0x20\n        /* \"GMD_flat.sol\":14754:14814  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14196:14217   */\n      mstore\n        /* \"#utility.yul\":14253:14255   */\n      0x1d\n        /* \"#utility.yul\":14233:14251   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14226:14256   */\n      mstore\n        /* \"#utility.yul\":14292:14323   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":14272:14290   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14265:14324   */\n      mstore\n        /* \"#utility.yul\":14341:14359   */\n      0x64\n      add\n        /* \"GMD_flat.sol\":14754:14814  require(isContract(target), \"Address: call to non-contract\") */\n      tag_208\n        /* \"#utility.yul\":14012:14365   */\n      jump\n        /* \"GMD_flat.sol\":14754:14814  require(isContract(target), \"Address: call to non-contract\") */\n    tag_410:\n        /* \"GMD_flat.sol\":14826:14838  bool success */\n      0x00\n        /* \"GMD_flat.sol\":14840:14863  bytes memory returndata */\n      dup1\n        /* \"GMD_flat.sol\":14867:14873  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GMD_flat.sol\":14867:14878  target.call */\n      and\n        /* \"GMD_flat.sol\":14886:14891  value */\n      dup6\n        /* \"GMD_flat.sol\":14893:14897  data */\n      dup8\n        /* \"GMD_flat.sol\":14867:14898  target.call{value: value}(data) */\n      mload(0x40)\n      tag_413\n      swap2\n      swap1\n      tag_414\n      jump\t// in\n    tag_413:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_417\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_416)\n    tag_417:\n      0x60\n      swap2\n      pop\n    tag_416:\n      pop\n        /* \"GMD_flat.sol\":14825:14898  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"GMD_flat.sol\":14915:14966  verifyCallResult(success, returndata, errorMessage) */\n      tag_418\n        /* \"GMD_flat.sol\":14932:14939  success */\n      dup3\n        /* \"GMD_flat.sol\":14941:14951  returndata */\n      dup3\n        /* \"GMD_flat.sol\":14953:14965  errorMessage */\n      dup7\n        /* \"GMD_flat.sol\":14915:14931  verifyCallResult */\n      tag_419\n        /* \"GMD_flat.sol\":14915:14966  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_418:\n        /* \"GMD_flat.sol\":14908:14966  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"GMD_flat.sol\":14474:14973  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GMD_flat.sol\":17087:17829  function verifyCallResult(... */\n    tag_419:\n        /* \"GMD_flat.sol\":17233:17245  bytes memory */\n      0x60\n        /* \"GMD_flat.sol\":17261:17268  success */\n      dup4\n        /* \"GMD_flat.sol\":17257:17823  if (success) {... */\n      iszero\n      tag_422\n      jumpi\n      pop\n        /* \"GMD_flat.sol\":17291:17301  returndata */\n      dup2\n        /* \"GMD_flat.sol\":17284:17301  return returndata */\n      jump(tag_172)\n        /* \"GMD_flat.sol\":17257:17823  if (success) {... */\n    tag_422:\n        /* \"GMD_flat.sol\":17402:17419  returndata.length */\n      dup3\n      mload\n        /* \"GMD_flat.sol\":17402:17423  returndata.length > 0 */\n      iszero\n        /* \"GMD_flat.sol\":17398:17813  if (returndata.length > 0) {... */\n      tag_424\n      jumpi\n        /* \"GMD_flat.sol\":17646:17656  returndata */\n      dup3\n        /* \"GMD_flat.sol\":17640:17657  mload(returndata) */\n      mload\n        /* \"GMD_flat.sol\":17706:17721  returndata_size */\n      dup1\n        /* \"GMD_flat.sol\":17693:17703  returndata */\n      dup5\n        /* \"GMD_flat.sol\":17689:17691  32 */\n      0x20\n        /* \"GMD_flat.sol\":17685:17704  add(32, returndata) */\n      add\n        /* \"GMD_flat.sol\":17678:17722  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"GMD_flat.sol\":17398:17813  if (returndata.length > 0) {... */\n    tag_424:\n        /* \"GMD_flat.sol\":17785:17797  errorMessage */\n      dup2\n        /* \"GMD_flat.sol\":17778:17798  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n        /* \"#utility.yul\":14:272   */\n    tag_427:\n        /* \"#utility.yul\":86:87   */\n      0x00\n        /* \"#utility.yul\":96:209   */\n    tag_433:\n        /* \"#utility.yul\":110:116   */\n      dup4\n        /* \"#utility.yul\":107:108   */\n      dup2\n        /* \"#utility.yul\":104:117   */\n      lt\n        /* \"#utility.yul\":96:209   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":186:197   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":180:198   */\n      mload\n        /* \"#utility.yul\":167:178   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":160:199   */\n      mstore\n        /* \"#utility.yul\":132:134   */\n      0x20\n        /* \"#utility.yul\":125:135   */\n      add\n        /* \"#utility.yul\":96:209   */\n      jump(tag_433)\n    tag_435:\n        /* \"#utility.yul\":227:233   */\n      dup4\n        /* \"#utility.yul\":224:225   */\n      dup2\n        /* \"#utility.yul\":221:234   */\n      gt\n        /* \"#utility.yul\":218:266   */\n      iszero\n      tag_331\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":262:263   */\n      0x00\n        /* \"#utility.yul\":244:260   */\n      swap2\n      add\n        /* \"#utility.yul\":237:264   */\n      mstore\n        /* \"#utility.yul\":14:272   */\n      jump\t// out\n        /* \"#utility.yul\":277:660   */\n    tag_44:\n        /* \"#utility.yul\":426:428   */\n      0x20\n        /* \"#utility.yul\":415:424   */\n      dup2\n        /* \"#utility.yul\":408:429   */\n      mstore\n        /* \"#utility.yul\":389:393   */\n      0x00\n        /* \"#utility.yul\":458:464   */\n      dup3\n        /* \"#utility.yul\":452:465   */\n      mload\n        /* \"#utility.yul\":501:507   */\n      dup1\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup5\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":474:508   */\n      mstore\n        /* \"#utility.yul\":517:583   */\n      tag_438\n        /* \"#utility.yul\":576:582   */\n      dup2\n        /* \"#utility.yul\":571:573   */\n      0x40\n        /* \"#utility.yul\":560:569   */\n      dup6\n        /* \"#utility.yul\":556:574   */\n      add\n        /* \"#utility.yul\":551:553   */\n      0x20\n        /* \"#utility.yul\":543:549   */\n      dup8\n        /* \"#utility.yul\":539:554   */\n      add\n        /* \"#utility.yul\":517:583   */\n      tag_427\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":644:646   */\n      0x1f\n        /* \"#utility.yul\":623:638   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":619:648   */\n      and\n        /* \"#utility.yul\":604:649   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":651:653   */\n      0x40\n        /* \"#utility.yul\":600:654   */\n      add\n      swap3\n        /* \"#utility.yul\":277:660   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":665:838   */\n    tag_428:\n        /* \"#utility.yul\":733:753   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":782:813   */\n      dup2\n      and\n        /* \"#utility.yul\":772:814   */\n      dup2\n      eq\n        /* \"#utility.yul\":762:832   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":828:829   */\n      0x00\n        /* \"#utility.yul\":825:826   */\n      dup1\n        /* \"#utility.yul\":818:830   */\n      revert\n        /* \"#utility.yul\":762:832   */\n    tag_440:\n        /* \"#utility.yul\":665:838   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":843:1097   */\n    tag_47:\n        /* \"#utility.yul\":911:917   */\n      0x00\n        /* \"#utility.yul\":919:925   */\n      dup1\n        /* \"#utility.yul\":972:974   */\n      0x40\n        /* \"#utility.yul\":960:969   */\n      dup4\n        /* \"#utility.yul\":951:958   */\n      dup6\n        /* \"#utility.yul\":947:970   */\n      sub\n        /* \"#utility.yul\":943:975   */\n      slt\n        /* \"#utility.yul\":940:992   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":988:989   */\n      0x00\n        /* \"#utility.yul\":985:986   */\n      dup1\n        /* \"#utility.yul\":978:990   */\n      revert\n        /* \"#utility.yul\":940:992   */\n    tag_442:\n        /* \"#utility.yul\":1011:1040   */\n      tag_443\n        /* \"#utility.yul\":1030:1039   */\n      dup4\n        /* \"#utility.yul\":1011:1040   */\n      tag_428\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":1001:1040   */\n      swap5\n        /* \"#utility.yul\":1087:1089   */\n      0x20\n        /* \"#utility.yul\":1072:1090   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1059:1091   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":843:1097   */\n      jump\t// out\n        /* \"#utility.yul\":1476:1662   */\n    tag_57:\n        /* \"#utility.yul\":1535:1541   */\n      0x00\n        /* \"#utility.yul\":1588:1590   */\n      0x20\n        /* \"#utility.yul\":1576:1585   */\n      dup3\n        /* \"#utility.yul\":1567:1574   */\n      dup5\n        /* \"#utility.yul\":1563:1586   */\n      sub\n        /* \"#utility.yul\":1559:1591   */\n      slt\n        /* \"#utility.yul\":1556:1608   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":1604:1605   */\n      0x00\n        /* \"#utility.yul\":1601:1602   */\n      dup1\n        /* \"#utility.yul\":1594:1606   */\n      revert\n        /* \"#utility.yul\":1556:1608   */\n    tag_447:\n        /* \"#utility.yul\":1627:1656   */\n      tag_172\n        /* \"#utility.yul\":1646:1655   */\n      dup3\n        /* \"#utility.yul\":1627:1656   */\n      tag_428\n      jump\t// in\n        /* \"#utility.yul\":1991:2319   */\n    tag_66:\n        /* \"#utility.yul\":2068:2074   */\n      0x00\n        /* \"#utility.yul\":2076:2082   */\n      dup1\n        /* \"#utility.yul\":2084:2090   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x60\n        /* \"#utility.yul\":2125:2134   */\n      dup5\n        /* \"#utility.yul\":2116:2123   */\n      dup7\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2157   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":2153:2154   */\n      0x00\n        /* \"#utility.yul\":2150:2151   */\n      dup1\n        /* \"#utility.yul\":2143:2155   */\n      revert\n        /* \"#utility.yul\":2105:2157   */\n    tag_451:\n        /* \"#utility.yul\":2176:2205   */\n      tag_452\n        /* \"#utility.yul\":2195:2204   */\n      dup5\n        /* \"#utility.yul\":2176:2205   */\n      tag_428\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":2166:2205   */\n      swap3\n      pop\n        /* \"#utility.yul\":2224:2262   */\n      tag_453\n        /* \"#utility.yul\":2258:2260   */\n      0x20\n        /* \"#utility.yul\":2247:2256   */\n      dup6\n        /* \"#utility.yul\":2243:2261   */\n      add\n        /* \"#utility.yul\":2224:2262   */\n      tag_428\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":2214:2262   */\n      swap2\n      pop\n        /* \"#utility.yul\":2309:2311   */\n      0x40\n        /* \"#utility.yul\":2298:2307   */\n      dup5\n        /* \"#utility.yul\":2294:2312   */\n      add\n        /* \"#utility.yul\":2281:2313   */\n      calldataload\n        /* \"#utility.yul\":2271:2313   */\n      swap1\n      pop\n        /* \"#utility.yul\":1991:2319   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2513:2693   */\n    tag_82:\n        /* \"#utility.yul\":2572:2578   */\n      0x00\n        /* \"#utility.yul\":2625:2627   */\n      0x20\n        /* \"#utility.yul\":2613:2622   */\n      dup3\n        /* \"#utility.yul\":2604:2611   */\n      dup5\n        /* \"#utility.yul\":2600:2623   */\n      sub\n        /* \"#utility.yul\":2596:2628   */\n      slt\n        /* \"#utility.yul\":2593:2645   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":2641:2642   */\n      0x00\n        /* \"#utility.yul\":2638:2639   */\n      dup1\n        /* \"#utility.yul\":2631:2643   */\n      revert\n        /* \"#utility.yul\":2593:2645   */\n    tag_456:\n      pop\n        /* \"#utility.yul\":2664:2687   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2513:2693   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3128:3388   */\n    tag_137:\n        /* \"#utility.yul\":3196:3202   */\n      0x00\n        /* \"#utility.yul\":3204:3210   */\n      dup1\n        /* \"#utility.yul\":3257:3259   */\n      0x40\n        /* \"#utility.yul\":3245:3254   */\n      dup4\n        /* \"#utility.yul\":3236:3243   */\n      dup6\n        /* \"#utility.yul\":3232:3255   */\n      sub\n        /* \"#utility.yul\":3228:3260   */\n      slt\n        /* \"#utility.yul\":3225:3277   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":3273:3274   */\n      0x00\n        /* \"#utility.yul\":3270:3271   */\n      dup1\n        /* \"#utility.yul\":3263:3275   */\n      revert\n        /* \"#utility.yul\":3225:3277   */\n    tag_460:\n        /* \"#utility.yul\":3296:3325   */\n      tag_461\n        /* \"#utility.yul\":3315:3324   */\n      dup4\n        /* \"#utility.yul\":3296:3325   */\n      tag_428\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":3286:3325   */\n      swap2\n      pop\n        /* \"#utility.yul\":3344:3382   */\n      tag_462\n        /* \"#utility.yul\":3378:3380   */\n      0x20\n        /* \"#utility.yul\":3367:3376   */\n      dup5\n        /* \"#utility.yul\":3363:3381   */\n      add\n        /* \"#utility.yul\":3344:3382   */\n      tag_428\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":3334:3382   */\n      swap1\n      pop\n        /* \"#utility.yul\":3128:3388   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3393:3511   */\n    tag_429:\n        /* \"#utility.yul\":3479:3484   */\n      dup1\n        /* \"#utility.yul\":3472:3485   */\n      iszero\n        /* \"#utility.yul\":3465:3486   */\n      iszero\n        /* \"#utility.yul\":3458:3463   */\n      dup2\n        /* \"#utility.yul\":3455:3487   */\n      eq\n        /* \"#utility.yul\":3445:3505   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":3501:3502   */\n      0x00\n        /* \"#utility.yul\":3498:3499   */\n      dup1\n        /* \"#utility.yul\":3491:3503   */\n      revert\n        /* \"#utility.yul\":3516:3757   */\n    tag_142:\n        /* \"#utility.yul\":3572:3578   */\n      0x00\n        /* \"#utility.yul\":3625:3627   */\n      0x20\n        /* \"#utility.yul\":3613:3622   */\n      dup3\n        /* \"#utility.yul\":3604:3611   */\n      dup5\n        /* \"#utility.yul\":3600:3623   */\n      sub\n        /* \"#utility.yul\":3596:3628   */\n      slt\n        /* \"#utility.yul\":3593:3645   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":3641:3642   */\n      0x00\n        /* \"#utility.yul\":3638:3639   */\n      dup1\n        /* \"#utility.yul\":3631:3643   */\n      revert\n        /* \"#utility.yul\":3593:3645   */\n    tag_466:\n        /* \"#utility.yul\":3680:3689   */\n      dup2\n        /* \"#utility.yul\":3667:3690   */\n      calldataload\n        /* \"#utility.yul\":3699:3727   */\n      tag_172\n        /* \"#utility.yul\":3721:3726   */\n      dup2\n        /* \"#utility.yul\":3699:3727   */\n      tag_429\n      jump\t// in\n        /* \"#utility.yul\":3762:4142   */\n    tag_155:\n        /* \"#utility.yul\":3841:3842   */\n      0x01\n        /* \"#utility.yul\":3837:3849   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3884:3896   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3905:3966   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":3959:3963   */\n      0x7f\n        /* \"#utility.yul\":3951:3957   */\n      dup3\n        /* \"#utility.yul\":3947:3964   */\n      and\n        /* \"#utility.yul\":3937:3964   */\n      swap2\n      pop\n        /* \"#utility.yul\":3905:3966   */\n    tag_469:\n        /* \"#utility.yul\":4012:4014   */\n      0x20\n        /* \"#utility.yul\":4004:4010   */\n      dup3\n        /* \"#utility.yul\":4001:4015   */\n      lt\n        /* \"#utility.yul\":3981:3999   */\n      dup2\n        /* \"#utility.yul\":3978:4016   */\n      eq\n        /* \"#utility.yul\":3975:4136   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":4058:4068   */\n      0x4e487b71\n        /* \"#utility.yul\":4053:4056   */\n      0xe0\n        /* \"#utility.yul\":4049:4069   */\n      shl\n        /* \"#utility.yul\":4046:4047   */\n      0x00\n        /* \"#utility.yul\":4039:4070   */\n      mstore\n        /* \"#utility.yul\":4093:4097   */\n      0x22\n        /* \"#utility.yul\":4090:4091   */\n      0x04\n        /* \"#utility.yul\":4083:4098   */\n      mstore\n        /* \"#utility.yul\":4121:4125   */\n      0x24\n        /* \"#utility.yul\":4118:4119   */\n      0x00\n        /* \"#utility.yul\":4111:4126   */\n      revert\n        /* \"#utility.yul\":3975:4136   */\n    tag_470:\n      pop\n        /* \"#utility.yul\":3762:4142   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4147:4274   */\n    tag_430:\n        /* \"#utility.yul\":4208:4218   */\n      0x4e487b71\n        /* \"#utility.yul\":4203:4206   */\n      0xe0\n        /* \"#utility.yul\":4199:4219   */\n      shl\n        /* \"#utility.yul\":4196:4197   */\n      0x00\n        /* \"#utility.yul\":4189:4220   */\n      mstore\n        /* \"#utility.yul\":4239:4243   */\n      0x11\n        /* \"#utility.yul\":4236:4237   */\n      0x04\n        /* \"#utility.yul\":4229:4244   */\n      mstore\n        /* \"#utility.yul\":4263:4267   */\n      0x24\n        /* \"#utility.yul\":4260:4261   */\n      0x00\n        /* \"#utility.yul\":4253:4268   */\n      revert\n        /* \"#utility.yul\":4279:4407   */\n    tag_184:\n        /* \"#utility.yul\":4319:4322   */\n      0x00\n        /* \"#utility.yul\":4350:4351   */\n      dup3\n        /* \"#utility.yul\":4346:4352   */\n      not\n        /* \"#utility.yul\":4343:4344   */\n      dup3\n        /* \"#utility.yul\":4340:4353   */\n      gt\n        /* \"#utility.yul\":4337:4376   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":4356:4374   */\n      tag_474\n      tag_430\n      jump\t// in\n    tag_474:\n      pop\n        /* \"#utility.yul\":4392:4401   */\n      add\n      swap1\n        /* \"#utility.yul\":4279:4407   */\n      jump\t// out\n        /* \"#utility.yul\":4412:4596   */\n    tag_204:\n        /* \"#utility.yul\":4482:4488   */\n      0x00\n        /* \"#utility.yul\":4535:4537   */\n      0x20\n        /* \"#utility.yul\":4523:4532   */\n      dup3\n        /* \"#utility.yul\":4514:4521   */\n      dup5\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4555   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":4551:4552   */\n      0x00\n        /* \"#utility.yul\":4548:4549   */\n      dup1\n        /* \"#utility.yul\":4541:4553   */\n      revert\n        /* \"#utility.yul\":4503:4555   */\n    tag_476:\n      pop\n        /* \"#utility.yul\":4574:4590   */\n      mload\n      swap2\n        /* \"#utility.yul\":4412:4596   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5575:5820   */\n    tag_228:\n        /* \"#utility.yul\":5642:5648   */\n      0x00\n        /* \"#utility.yul\":5695:5697   */\n      0x20\n        /* \"#utility.yul\":5683:5692   */\n      dup3\n        /* \"#utility.yul\":5674:5681   */\n      dup5\n        /* \"#utility.yul\":5670:5693   */\n      sub\n        /* \"#utility.yul\":5666:5698   */\n      slt\n        /* \"#utility.yul\":5663:5715   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":5711:5712   */\n      0x00\n        /* \"#utility.yul\":5708:5709   */\n      dup1\n        /* \"#utility.yul\":5701:5713   */\n      revert\n        /* \"#utility.yul\":5663:5715   */\n    tag_481:\n        /* \"#utility.yul\":5743:5752   */\n      dup2\n        /* \"#utility.yul\":5737:5753   */\n      mload\n        /* \"#utility.yul\":5762:5790   */\n      tag_172\n        /* \"#utility.yul\":5784:5789   */\n      dup2\n        /* \"#utility.yul\":5762:5790   */\n      tag_429\n      jump\t// in\n        /* \"#utility.yul\":9188:9313   */\n    tag_324:\n        /* \"#utility.yul\":9228:9232   */\n      0x00\n        /* \"#utility.yul\":9256:9257   */\n      dup3\n        /* \"#utility.yul\":9253:9254   */\n      dup3\n        /* \"#utility.yul\":9250:9258   */\n      lt\n        /* \"#utility.yul\":9247:9281   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":9261:9279   */\n      tag_494\n      tag_430\n      jump\t// in\n    tag_494:\n      pop\n        /* \"#utility.yul\":9298:9307   */\n      sub\n      swap1\n        /* \"#utility.yul\":9188:9313   */\n      jump\t// out\n        /* \"#utility.yul\":12059:12227   */\n    tag_371:\n        /* \"#utility.yul\":12099:12106   */\n      0x00\n        /* \"#utility.yul\":12165:12166   */\n      dup2\n        /* \"#utility.yul\":12161:12162   */\n      0x00\n        /* \"#utility.yul\":12157:12163   */\n      not\n        /* \"#utility.yul\":12153:12167   */\n      div\n        /* \"#utility.yul\":12150:12151   */\n      dup4\n        /* \"#utility.yul\":12147:12168   */\n      gt\n        /* \"#utility.yul\":12142:12143   */\n      dup3\n        /* \"#utility.yul\":12135:12144   */\n      iszero\n        /* \"#utility.yul\":12128:12145   */\n      iszero\n        /* \"#utility.yul\":12124:12169   */\n      and\n        /* \"#utility.yul\":12121:12192   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":12172:12190   */\n      tag_504\n      tag_430\n      jump\t// in\n    tag_504:\n      pop\n        /* \"#utility.yul\":12212:12221   */\n      mul\n      swap1\n        /* \"#utility.yul\":12059:12227   */\n      jump\t// out\n        /* \"#utility.yul\":12232:12449   */\n    tag_374:\n        /* \"#utility.yul\":12272:12273   */\n      0x00\n        /* \"#utility.yul\":12298:12299   */\n      dup3\n        /* \"#utility.yul\":12288:12420   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":12342:12352   */\n      0x4e487b71\n        /* \"#utility.yul\":12337:12340   */\n      0xe0\n        /* \"#utility.yul\":12333:12353   */\n      shl\n        /* \"#utility.yul\":12330:12331   */\n      0x00\n        /* \"#utility.yul\":12323:12354   */\n      mstore\n        /* \"#utility.yul\":12377:12381   */\n      0x12\n        /* \"#utility.yul\":12374:12375   */\n      0x04\n        /* \"#utility.yul\":12367:12382   */\n      mstore\n        /* \"#utility.yul\":12405:12409   */\n      0x24\n        /* \"#utility.yul\":12402:12403   */\n      0x00\n        /* \"#utility.yul\":12395:12410   */\n      revert\n        /* \"#utility.yul\":12288:12420   */\n    tag_506:\n      pop\n        /* \"#utility.yul\":12434:12443   */\n      div\n      swap1\n        /* \"#utility.yul\":12232:12449   */\n      jump\t// out\n        /* \"#utility.yul\":14370:14644   */\n    tag_414:\n        /* \"#utility.yul\":14499:14502   */\n      0x00\n        /* \"#utility.yul\":14537:14543   */\n      dup3\n        /* \"#utility.yul\":14531:14544   */\n      mload\n        /* \"#utility.yul\":14553:14606   */\n      tag_513\n        /* \"#utility.yul\":14599:14605   */\n      dup2\n        /* \"#utility.yul\":14594:14597   */\n      dup5\n        /* \"#utility.yul\":14587:14591   */\n      0x20\n        /* \"#utility.yul\":14579:14585   */\n      dup8\n        /* \"#utility.yul\":14575:14592   */\n      add\n        /* \"#utility.yul\":14553:14606   */\n      tag_427\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":14622:14638   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":14370:14644   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122011b4057e1857069e76caddf6789f50e832c698b64594ca5d7a526ca80a460b7d64736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1229": {
									"entryPoint": null,
									"id": 1229,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_1794": {
									"entryPoint": null,
									"id": 1794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_722": {
									"entryPoint": null,
									"id": 722,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1769": {
									"entryPoint": null,
									"id": 1769,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1758": {
									"entryPoint": null,
									"id": 1758,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_1587": {
									"entryPoint": 342,
									"id": 1587,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_690": {
									"entryPoint": 256,
									"id": 690,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_810": {
									"entryPoint": 260,
									"id": 810,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_1259": {
									"entryPoint": null,
									"id": 1259,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2759:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:358:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "220:16:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "235:1:1",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "224:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "245:16:1",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "254:7:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "245:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "270:13:1",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "278:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "270:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "334:228:1",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "379:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "381:16:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "381:18:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "381:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "354:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "368:1:1",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "364:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "364:6:1"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "372:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "360:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "360:17:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "351:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "351:27:1"
																		},
																		"nodeType": "YulIf",
																		"src": "348:53:1"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "440:29:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "442:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "455:5:1"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "462:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "451:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "451:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "442:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "421:8:1"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "431:7:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "417:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "417:22:1"
																		},
																		"nodeType": "YulIf",
																		"src": "414:55:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "482:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "494:4:1"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "500:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "490:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "490:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "482:4:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "518:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "534:7:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "543:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "530:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:22:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "518:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "303:8:1"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "313:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "300:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "300:21:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "322:3:1",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "296:3:1",
																"statements": []
															},
															"src": "292:270:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "174:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "181:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "194:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "201:4:1",
														"type": ""
													}
												],
												"src": "146:422:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "632:747:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "670:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "684:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "693:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "684:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "707:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "652:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:16:1"
															},
															"nodeType": "YulIf",
															"src": "642:80:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "755:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "769:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "778:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "769:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "792:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "741:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "734:12:1"
															},
															"nodeType": "YulIf",
															"src": "731:76:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "843:52:1",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "857:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "866:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "857:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "880:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "836:59:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "841:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "911:123:1",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "946:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "948:16:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "948:18:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "948:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "931:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "941:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "928:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "928:17:1"
																				},
																				"nodeType": "YulIf",
																				"src": "925:43:1"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "981:25:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "994:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1004:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "990:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "990:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "981:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1019:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "904:130:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "909:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "823:4:1"
															},
															"nodeType": "YulSwitch",
															"src": "816:218:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1132:70:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1146:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1159:4:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1165:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "1155:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1155:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1146:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1187:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1056:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1062:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1053:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1053:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1070:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1080:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1067:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1067:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1049:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1049:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1093:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1099:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1090:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1090:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1108:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1118:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1105:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1105:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1086:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1086:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:77:1"
															},
															"nodeType": "YulIf",
															"src": "1043:159:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1211:57:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1253:4:1"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1259:8:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "1234:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:34:1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "1215:7:1",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "1224:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1313:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1315:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1315:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1315:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1283:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1300:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1296:6:1"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "1304:6:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "1292:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1292:19:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1280:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1280:32:1"
															},
															"nodeType": "YulIf",
															"src": "1277:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1357:7:1"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "1366:6:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:20:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1344:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "603:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "609:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "622:5:1",
														"type": ""
													}
												],
												"src": "573:806:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1452:72:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1462:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1492:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "1502:8:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1512:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1498:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1498:19:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "1471:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:47:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1462:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1423:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1429:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1442:5:1",
														"type": ""
													}
												],
												"src": "1384:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1581:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1640:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1642:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1642:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1642:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1612:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1605:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1605:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1598:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1598:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1620:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1631:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1627:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1627:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1635:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1623:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1623:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1617:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1617:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1594:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1594:45:1"
															},
															"nodeType": "YulIf",
															"src": "1591:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1671:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1686:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1689:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1682:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1682:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1671:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1560:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1563:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1569:7:1",
														"type": ""
													}
												],
												"src": "1529:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1876:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1893:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1904:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1886:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1886:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1886:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1927:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1938:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1923:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1923:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1943:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1916:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1916:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1966:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1977:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1962:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1962:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1982:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1955:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2025:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2037:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2033:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2025:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1853:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1867:4:1",
														"type": ""
													}
												],
												"src": "1702:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2110:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2137:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2139:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2139:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2139:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2126:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2133:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2129:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2123:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2123:13:1"
															},
															"nodeType": "YulIf",
															"src": "2120:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2168:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2179:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2182:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2175:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2175:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2093:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2096:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2102:3:1",
														"type": ""
													}
												],
												"src": "2062:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2296:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2306:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2318:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2329:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2314:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2314:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2306:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2348:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2359:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2341:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2341:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2341:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2265:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2276:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2287:4:1",
														"type": ""
													}
												],
												"src": "2195:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2432:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2442:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2459:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2452:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2452:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2473:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2503:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2509:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2499:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2499:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2477:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2550:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2552:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2566:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2574:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2562:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2562:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2552:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2530:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2523:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2523:26:1"
															},
															"nodeType": "YulIf",
															"src": "2520:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2640:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2661:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2668:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2673:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2664:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2664:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2654:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2654:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2654:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2705:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2708:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2698:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2698:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2698:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2596:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2619:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2627:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2616:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2616:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2593:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2593:38:1"
															},
															"nodeType": "YulIf",
															"src": "2590:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2412:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2421:6:1",
														"type": ""
													}
												],
												"src": "2377:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526103e8600855600060095562069780600a55600b80546001600160a81b03191674ff970a61a04b1ca14834a43f5de4533ebddb5cc8001790553480156200004a57600080fd5b506040518060400160405280600381526020016211d35160ea1b8152506040518060400160405280600381526020016211d35160ea1b81525081600390805190602001906200009b9291906200023e565b508051620000b19060049060208401906200023e565b505050620000ce620000c86200010060201b60201c565b62000104565b6001600655620000fa33620000e66012600a620003f9565b620000f49061c35062000411565b62000156565b6200048b565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001b15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001c5919062000433565b90915550506001600160a01b03821660009081526020819052604081208054839290620001f490849062000433565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b8280546200024c906200044e565b90600052602060002090601f016020900481019282620002705760008555620002bb565b82601f106200028b57805160ff1916838001178555620002bb565b82800160010185558215620002bb579182015b82811115620002bb5782518255916020019190600101906200029e565b50620002c9929150620002cd565b5090565b5b80821115620002c95760008155600101620002ce565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200033b5781600019048211156200031f576200031f620002e4565b808516156200032d57918102915b93841c9390800290620002ff565b509250929050565b6000826200035457506001620003f3565b816200036357506000620003f3565b81600181146200037c57600281146200038757620003a7565b6001915050620003f3565b60ff8411156200039b576200039b620002e4565b50506001821b620003f3565b5060208310610133831016604e8410600b8410161715620003cc575081810a620003f3565b620003d88383620002fa565b8060001904821115620003ef57620003ef620002e4565b0290505b92915050565b60006200040a60ff84168362000343565b9392505050565b60008160001904831182151516156200042e576200042e620002e4565b500290565b60008219821115620004495762000449620002e4565b500190565b600181811c908216806200046357607f821691505b602082108114156200048557634e487b7160e01b600052602260045260246000fd5b50919050565b6119ee806200049b6000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806370a082311161010f578063a0712d68116100a2578063e2af30f411610071578063e2af30f414610410578063e2e5c15c14610423578063f2fde38b1461042b578063f4a0a5281461043e57600080fd5b8063a0712d68146103c4578063a457c2d7146103d7578063a9059cbb146103ea578063dd62ed3e146103fd57600080fd5b806384d24226116100de57806384d242261461036857806389a302711461037b5780638da5cb5b146103ab57806395d89b41146103bc57600080fd5b806370a0823114610325578063715018a61461034e5780637313ee5a1461035657806376c71ca11461035f57600080fd5b8063313ce5671161018757806342966c681161015657806342966c68146102f95780634e2745141461030c5780634e71d92d146103145780636817c76c1461031c57600080fd5b8063313ce567146102af57806339509351146102be5780634070a0c9146102d157806340bee0ed146102e657600080fd5b80631959a002116101c35780631959a0021461023d57806320f203d91461028757806323b872dd1461028f57806324bbd049146102a257600080fd5b806306fdde03146101ea578063095ea7b31461020857806318160ddd1461022b575b600080fd5b6101f2610451565b6040516101ff919061175e565b60405180910390f35b61021b6102163660046117ad565b6104e3565b60405190151581526020016101ff565b6002545b6040519081526020016101ff565b61026c61024b3660046117d7565b60076020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060016101ff565b61022f6104fb565b61021b61029d3660046117f2565b610562565b600b5461021b9060ff1681565b604051601281526020016101ff565b61021b6102cc3660046117ad565b610588565b6102e46102df36600461182e565b6105aa565b005b6102e46102f436600461182e565b6105b7565b6102e461030736600461182e565b6105c4565b6102e46105d1565b6102e4610678565b61022f60085481565b61022f6103333660046117d7565b6001600160a01b031660009081526020819052604090205490565b6102e4610880565b61022f600a5481565b61022f60095481565b61022f6103763660046117d7565b610892565b600b546103939061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016101ff565b6005546001600160a01b0316610393565b6101f261092d565b6102e46103d236600461182e565b61093c565b61021b6103e53660046117ad565b610c1a565b61021b6103f83660046117ad565b610ca0565b61022f61040b366004611847565b610cae565b6102e461041e366004611888565b610cd9565b61022f610cf4565b6102e46104393660046117d7565b610d69565b6102e461044c36600461182e565b610ddf565b606060038054610460906118a5565b80601f016020809104026020016040519081016040528092919081815260200182805461048c906118a5565b80156104d95780601f106104ae576101008083540402835291602001916104d9565b820191906000526020600020905b8154815290600101906020018083116104bc57829003601f168201915b5050505050905090565b6000336104f1818585610e3e565b5060019392505050565b33600090815260076020526040812060010154819061051b904290610f63565b33600090815260076020526040902060020154909150811061053f57600091505090565b3360009081526007602052604090206002015461055c9082610f63565b91505090565b600033610570858285610f6f565b61057b858585610fe9565b60019150505b9392505050565b6000336104f181858561059b8383610cae565b6105a591906118f6565b610e3e565b6105b26111b7565b600955565b6105bf6111b7565b600a55565b6105ce3382611211565b50565b6105d96111b7565b6106766105ee6005546001600160a01b031690565b600b546040516370a0823160e01b81523060048201526101009091046001600160a01b0316906370a0823190602401602060405180830381865afa15801561063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065e919061190e565b600b5461010090046001600160a01b0316919061135c565b565b600260065414156106d05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026006553360009081526007602052604090205461071b5760405162461bcd60e51b81526020600482015260076024820152661b9bc81b5a5b9d60ca1b60448201526064016106c7565b33600090815260076020526040812060010154610739904290610f63565b33600090815260076020526040812060020154919250908210610776575033600090815260076020526040812080546002909101919091556107d5565b336000908152600760205260409020600281015490546107a1919061079b90856113bf565b906113cb565b336000908152600760205260409020600201549091506107c19083610f63565b336000908152600760205260409020600201555b336000908152600760205260409020546107ef9082610f63565b336000818152600760205260409081902092835542600190930192909255905163a9059cbb60e01b8152600481019190915260248101829052309063a9059cbb906044016020604051808303816000875af1158015610852573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108769190611927565b5050600160065550565b6108886111b7565b61067660006113d7565b6001600160a01b03811660009081526007602052604081206001015481906108bb904290610f63565b336000908152600760205260408120600201549192509082106108f757506001600160a01b038316600090815260076020526040902054610581565b6001600160a01b038416600090815260076020526040902060028101549054610925919061079b90856113bf565b949350505050565b606060048054610460906118a5565b6002600654141561098f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106c7565b600260065563773594008111156109df5760405162461bcd60e51b81526020600482015260146024820152730dac2f0406460606040eae6c8c640e0cae440e8f60631b60448201526064016106c7565b600b5460ff16610a235760405162461bcd60e51b815260206004820152600f60248201526e1b5a5b9d081b9bdd081bdc195b9959608a1b60448201526064016106c7565b600b546040516370a0823160e01b8152336004820152829161010090046001600160a01b0316906370a0823190602401602060405180830381865afa158015610a70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a94919061190e565b1015610ad95760405162461bcd60e51b8152602060048201526014602482015273555344432062616c616e636520746f6f206c6f7760601b60448201526064016106c7565b6000610aea8264e8d4a510006113bf565b90506000610b0960085461079b6103e8856113bf90919063ffffffff16565b9050600954610b7a82306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b74919061190e565b90611429565b1115610bb85760405162461bcd60e51b815260206004820152600d60248201526c06f766572206d696e742063617609c1b60448201526064016106c7565b33600090815260076020526040902054610bd29082611429565b336000908152600760205260409020908155426001820155600a54600290910155610bfd3082611435565b600b546108769061010090046001600160a01b0316333086611514565b60003381610c288286610cae565b905083811015610c885760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106c7565b610c958286868403610e3e565b506001949350505050565b6000336104f1818585610fe9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610ce16111b7565b600b805460ff1916911515919091179055565b6000610d64306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5b919061190e565b60095490610f63565b905090565b610d716111b7565b6001600160a01b038116610dd65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106c7565b6105ce816113d7565b610de76111b7565b600854811015610e395760405162461bcd60e51b815260206004820152601d60248201527f63616e2774206265206c6f776572207468616e206c617374206d696e7400000060448201526064016106c7565b600855565b6001600160a01b038316610ea05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106c7565b6001600160a01b038216610f015760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106c7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105818284611944565b6000610f7b8484610cae565b90506000198114610fe35781811015610fd65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106c7565b610fe38484848403610e3e565b50505050565b6001600160a01b03831661104d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106c7565b6001600160a01b0382166110af5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106c7565b6001600160a01b038316600090815260208190526040902054818110156111275760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106c7565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061115e9084906118f6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111aa91815260200190565b60405180910390a3610fe3565b6005546001600160a01b031633146106765760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106c7565b6001600160a01b0382166112715760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106c7565b6001600160a01b038216600090815260208190526040902054818110156112e55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106c7565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611314908490611944565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610f56565b505050565b6040516001600160a01b03831660248201526044810182905261135790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261154c565b6000610581828461195b565b6000610581828461197a565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061058182846118f6565b6001600160a01b03821661148b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106c7565b806002600082825461149d91906118f6565b90915550506001600160a01b038216600090815260208190526040812080548392906114ca9084906118f6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052610fe39085906323b872dd60e01b90608401611388565b60006115a1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661161e9092919063ffffffff16565b80519091501561135757808060200190518101906115bf9190611927565b6113575760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106c7565b60606109258484600085856001600160a01b0385163b6116805760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106c7565b600080866001600160a01b0316858760405161169c919061199c565b60006040518083038185875af1925050503d80600081146116d9576040519150601f19603f3d011682016040523d82523d6000602084013e6116de565b606091505b50915091506116ee8282866116f9565b979650505050505050565b60608315611708575081610581565b8251156117185782518084602001fd5b8160405162461bcd60e51b81526004016106c7919061175e565b60005b8381101561174d578181015183820152602001611735565b83811115610fe35750506000910152565b602081526000825180602084015261177d816040850160208701611732565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146117a857600080fd5b919050565b600080604083850312156117c057600080fd5b6117c983611791565b946020939093013593505050565b6000602082840312156117e957600080fd5b61058182611791565b60008060006060848603121561180757600080fd5b61181084611791565b925061181e60208501611791565b9150604084013590509250925092565b60006020828403121561184057600080fd5b5035919050565b6000806040838503121561185a57600080fd5b61186383611791565b915061187160208401611791565b90509250929050565b80151581146105ce57600080fd5b60006020828403121561189a57600080fd5b81356105818161187a565b600181811c908216806118b957607f821691505b602082108114156118da57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611909576119096118e0565b500190565b60006020828403121561192057600080fd5b5051919050565b60006020828403121561193957600080fd5b81516105818161187a565b600082821015611956576119566118e0565b500390565b6000816000190483118215151615611975576119756118e0565b500290565b60008261199757634e487b7160e01b600052601260045260246000fd5b500490565b600082516119ae818460208701611732565b919091019291505056fea264697066735822122011b4057e1857069e76caddf6789f50e832c698b64594ca5d7a526ca80a460b7d64736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x3E8 PUSH1 0x8 SSTORE PUSH1 0x0 PUSH1 0x9 SSTORE PUSH3 0x69780 PUSH1 0xA SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH21 0xFF970A61A04B1CA14834A43F5DE4533EBDDB5CC800 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x11D351 PUSH1 0xEA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x11D351 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x9B SWAP3 SWAP2 SWAP1 PUSH3 0x23E JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xB1 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x23E JUMP JUMPDEST POP POP POP PUSH3 0xCE PUSH3 0xC8 PUSH3 0x100 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x104 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SSTORE PUSH3 0xFA CALLER PUSH3 0xE6 PUSH1 0x12 PUSH1 0xA PUSH3 0x3F9 JUMP JUMPDEST PUSH3 0xF4 SWAP1 PUSH2 0xC350 PUSH3 0x411 JUMP JUMPDEST PUSH3 0x156 JUMP JUMPDEST PUSH3 0x48B JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x1B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1C5 SWAP2 SWAP1 PUSH3 0x433 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x1F4 SWAP1 DUP5 SWAP1 PUSH3 0x433 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x24C SWAP1 PUSH3 0x44E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x270 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2BB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x28B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2BB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2BB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2BB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x29E JUMP JUMPDEST POP PUSH3 0x2C9 SWAP3 SWAP2 POP PUSH3 0x2CD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2C9 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2CE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x33B JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x31F JUMPI PUSH3 0x31F PUSH3 0x2E4 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x32D JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x2FF JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x354 JUMPI POP PUSH1 0x1 PUSH3 0x3F3 JUMP JUMPDEST DUP2 PUSH3 0x363 JUMPI POP PUSH1 0x0 PUSH3 0x3F3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x37C JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x387 JUMPI PUSH3 0x3A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x3F3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x39B JUMPI PUSH3 0x39B PUSH3 0x2E4 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x3F3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x3CC JUMPI POP DUP2 DUP2 EXP PUSH3 0x3F3 JUMP JUMPDEST PUSH3 0x3D8 DUP4 DUP4 PUSH3 0x2FA JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x3EF JUMPI PUSH3 0x3EF PUSH3 0x2E4 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x40A PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x343 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x42E JUMPI PUSH3 0x42E PUSH3 0x2E4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x449 JUMPI PUSH3 0x449 PUSH3 0x2E4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x463 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x485 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EE DUP1 PUSH3 0x49B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE2AF30F4 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE2AF30F4 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xE2E5C15C EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0xF4A0A528 EQ PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84D24226 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x84D24226 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x7313EE5A EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x76C71CA1 EQ PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x4E274514 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x6817C76C EQ PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x4070A0C9 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x40BEE0ED EQ PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1959A002 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x20F203D9 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x24BBD049 EQ PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x26C PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x22F PUSH2 0x4FB JUMP JUMPDEST PUSH2 0x21B PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x21B SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x21B PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E4 PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x22F PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x333 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x880 JUMP JUMPDEST PUSH2 0x22F PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x376 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D7 JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x393 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x393 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x92D JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x3D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x93C JUMP JUMPDEST PUSH2 0x21B PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0xC1A JUMP JUMPDEST PUSH2 0x21B PUSH2 0x3F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x1847 JUMP JUMPDEST PUSH2 0xCAE JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x22F PUSH2 0xCF4 JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x439 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D7 JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x44C CALLDATASIZE PUSH1 0x4 PUSH2 0x182E JUMP JUMPDEST PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x460 SWAP1 PUSH2 0x18A5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x48C SWAP1 PUSH2 0x18A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4F1 DUP2 DUP6 DUP6 PUSH2 0xE3E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 SWAP1 PUSH2 0x51B SWAP1 TIMESTAMP SWAP1 PUSH2 0xF63 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP DUP2 LT PUSH2 0x53F JUMPI PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x55C SWAP1 DUP3 PUSH2 0xF63 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x570 DUP6 DUP3 DUP6 PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x57B DUP6 DUP6 DUP6 PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4F1 DUP2 DUP6 DUP6 PUSH2 0x59B DUP4 DUP4 PUSH2 0xCAE JUMP JUMPDEST PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x5B2 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH2 0x5BF PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH2 0x5CE CALLER DUP3 PUSH2 0x1211 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5D9 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0x676 PUSH2 0x5EE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65E SWAP2 SWAP1 PUSH2 0x190E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x135C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x71B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x1B9BC81B5A5B9D PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x739 SWAP1 TIMESTAMP SWAP1 PUSH2 0xF63 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 LT PUSH2 0x776 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x7D5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SLOAD PUSH2 0x7A1 SWAP2 SWAP1 PUSH2 0x79B SWAP1 DUP6 PUSH2 0x13BF JUMP JUMPDEST SWAP1 PUSH2 0x13CB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x7C1 SWAP1 DUP4 PUSH2 0xF63 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7EF SWAP1 DUP3 PUSH2 0xF63 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 DUP4 SSTORE TIMESTAMP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x852 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x876 SWAP2 SWAP1 PUSH2 0x1927 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6 SSTORE POP JUMP JUMPDEST PUSH2 0x888 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0x676 PUSH1 0x0 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 SWAP1 PUSH2 0x8BB SWAP1 TIMESTAMP SWAP1 PUSH2 0xF63 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 LT PUSH2 0x8F7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x581 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SLOAD PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x79B SWAP1 DUP6 PUSH2 0x13BF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x460 SWAP1 PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH4 0x77359400 DUP2 GT ISZERO PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xDAC2F0406460606040EAE6C8C640E0CAE440E8F PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1B5A5B9D081B9BDD081BDC195B9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x190E JUMP JUMPDEST LT ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x555344432062616C616E636520746F6F206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEA DUP3 PUSH5 0xE8D4A51000 PUSH2 0x13BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB09 PUSH1 0x8 SLOAD PUSH2 0x79B PUSH2 0x3E8 DUP6 PUSH2 0x13BF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD PUSH2 0xB7A DUP3 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB74 SWAP2 SWAP1 PUSH2 0x190E JUMP JUMPDEST SWAP1 PUSH2 0x1429 JUMP JUMPDEST GT ISZERO PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x6F766572206D696E742063617 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBD2 SWAP1 DUP3 PUSH2 0x1429 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0xA SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH2 0xBFD ADDRESS DUP3 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x876 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0xC28 DUP3 DUP7 PUSH2 0xCAE JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0xC95 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xE3E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4F1 DUP2 DUP6 DUP6 PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xCE1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD64 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x190E JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 PUSH2 0xF63 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD71 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x5CE DUP2 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0xDE7 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xE39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E2774206265206C6F776572207468616E206C617374206D696E74000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 DUP3 DUP5 PUSH2 0x1944 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B DUP5 DUP5 PUSH2 0xCAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xFE3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0xFE3 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xE3E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x104D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1127 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x115E SWAP1 DUP5 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x11AA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1271 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1314 SWAP1 DUP5 SWAP1 PUSH2 0x1944 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0xF56 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1357 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x154C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 DUP3 DUP5 PUSH2 0x195B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 DUP3 DUP5 PUSH2 0x197A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 DUP3 DUP5 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x148B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x149D SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x14CA SWAP1 DUP5 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xFE3 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A1 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x161E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1357 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x15BF SWAP2 SWAP1 PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x1357 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x925 DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1680 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x169C SWAP2 SWAP1 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16D9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x16EE DUP3 DUP3 DUP7 PUSH2 0x16F9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1708 JUMPI POP DUP2 PUSH2 0x581 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1718 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x174D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1735 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFE3 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x177D DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x17A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17C9 DUP4 PUSH2 0x1791 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x581 DUP3 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1810 DUP5 PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP PUSH2 0x181E PUSH1 0x20 DUP6 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1840 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x185A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1863 DUP4 PUSH2 0x1791 JUMP JUMPDEST SWAP2 POP PUSH2 0x1871 PUSH1 0x20 DUP5 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x581 DUP2 PUSH2 0x187A JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x18B9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x18DA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1909 JUMPI PUSH2 0x1909 PUSH2 0x18E0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x581 DUP2 PUSH2 0x187A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1956 JUMPI PUSH2 0x1956 PUSH2 0x18E0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1975 JUMPI PUSH2 0x1975 PUSH2 0x18E0 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1997 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x19AE DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1732 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xB4 SDIV PUSH31 0x1857069E76CADDF6789F50E832C698B64594CA5D7A526CA80A460B7D64736F PUSH13 0x634300080C0033000000000000 ",
							"sourceMap": "44114:3940:0:-:0;;;44530:4;44503:31;;44565:1;44540:26;;44603:6;44572:37;;44615:28;;;-1:-1:-1;;;;;;44649:71:0;;;;;44184:74;;;;;;;;;;33407:113;;;;;;;;;;;;;-1:-1:-1;;;33407:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;33407:113:0;;;33481:5;33473;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;33496:17:0;;;;:7;;:17;;;;;:::i;:::-;;33407:113;;21928:32;21947:12;:10;;;:12;;:::i;:::-;21928:18;:32::i;:::-;1734:1;1839:7;:22;44208:43;44214:10;44234:16;34604:2;44234;:16;:::i;:::-;44226:24;;:5;:24;:::i;:::-;44208:5;:43::i;:::-;44114:3940;;20796:96;20875:10;;20796:96::o;23425:187::-;23517:6;;;-1:-1:-1;;;;;23533:17:0;;;-1:-1:-1;;;;;;23533:17:0;;;;;;;23565:40;;23517:6;;;23533:17;23517:6;;23565:40;;23498:16;;23565:40;23488:124;23425:187;:::o;39831:389::-;-1:-1:-1;;;;;39914:21:0;;39906:65;;;;-1:-1:-1;;;39906:65:0;;1904:2:1;39906:65:0;;;1886:21:1;1943:2;1923:18;;;1916:30;1982:33;1962:18;;;1955:61;2033:18;;39906:65:0;;;;;;;;40058:6;40042:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;40074:18:0;;:9;:18;;;;;;;;;;:28;;40096:6;;40074:9;:28;;40096:6;;40074:28;:::i;:::-;;;;-1:-1:-1;;40117:37:0;;2341:25:1;;;-1:-1:-1;;;;;40117:37:0;;;40134:1;;40117:37;;2329:2:1;2314:18;40117:37:0;;;;;;;39831:389;;:::o;44114:3940::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;44114:3940:0;;;-1:-1:-1;44114:3940:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:422;235:1;278:5;235:1;292:270;313:7;303:8;300:21;292:270;;;372:4;368:1;364:6;360:17;354:4;351:27;348:53;;;381:18;;:::i;:::-;431:7;421:8;417:22;414:55;;;451:16;;;;414:55;530:22;;;;490:15;;;;292:270;;;296:3;146:422;;;;;:::o;573:806::-;622:5;652:8;642:80;;-1:-1:-1;693:1:1;707:5;;642:80;741:4;731:76;;-1:-1:-1;778:1:1;792:5;;731:76;823:4;841:1;836:59;;;;909:1;904:130;;;;816:218;;836:59;866:1;857:10;;880:5;;;904:130;941:3;931:8;928:17;925:43;;;948:18;;:::i;:::-;-1:-1:-1;;1004:1:1;990:16;;1019:5;;816:218;;1118:2;1108:8;1105:16;1099:3;1093:4;1090:13;1086:36;1080:2;1070:8;1067:16;1062:2;1056:4;1053:12;1049:35;1046:77;1043:159;;;-1:-1:-1;1155:19:1;;;1187:5;;1043:159;1234:34;1259:8;1253:4;1234:34;:::i;:::-;1304:6;1300:1;1296:6;1292:19;1283:7;1280:32;1277:58;;;1315:18;;:::i;:::-;1353:20;;-1:-1:-1;573:806:1;;;;;:::o;1384:140::-;1442:5;1471:47;1512:4;1502:8;1498:19;1492:4;1471:47;:::i;:::-;1462:56;1384:140;-1:-1:-1;;;1384:140:1:o;1529:168::-;1569:7;1635:1;1631;1627:6;1623:14;1620:1;1617:21;1612:1;1605:9;1598:17;1594:45;1591:71;;;1642:18;;:::i;:::-;-1:-1:-1;1682:9:1;;1529:168::o;2062:128::-;2102:3;2133:1;2129:6;2126:1;2123:13;2120:39;;;2139:18;;:::i;:::-;-1:-1:-1;2175:9:1;;2062:128::o;2377:380::-;2456:1;2452:12;;;;2499;;;2520:61;;2574:4;2566:6;2562:17;2552:27;;2520:61;2627:2;2619:6;2616:14;2596:18;2593:38;2590:161;;;2673:10;2668:3;2664:20;2661:1;2654:31;2708:4;2705:1;2698:15;2736:4;2733:1;2726:15;2590:161;;2377:380;;;:::o;:::-;44114:3940:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@USDC_1831": {
									"entryPoint": null,
									"id": 1831,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1769": {
									"entryPoint": null,
									"id": 1769,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1704": {
									"entryPoint": 3646,
									"id": 1704,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1758": {
									"entryPoint": null,
									"id": 1758,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1659": {
									"entryPoint": 4625,
									"id": 1659,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1164": {
									"entryPoint": 5452,
									"id": 1164,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_753": {
									"entryPoint": 4535,
									"id": 753,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1587": {
									"entryPoint": 5173,
									"id": 1587,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_690": {
									"entryPoint": null,
									"id": 690,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1747": {
									"entryPoint": 3951,
									"id": 1747,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_810": {
									"entryPoint": 5079,
									"id": 810,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1531": {
									"entryPoint": 4073,
									"id": 1531,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_214": {
									"entryPoint": 5161,
									"id": 214,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_1326": {
									"entryPoint": 3246,
									"id": 1326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1351": {
									"entryPoint": 1251,
									"id": 1351,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1283": {
									"entryPoint": null,
									"id": 1283,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1843": {
									"entryPoint": 1476,
									"id": 1843,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claim_2212": {
									"entryPoint": 1656,
									"id": 2212,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimableTokens_1943": {
									"entryPoint": 2194,
									"id": 1943,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_1259": {
									"entryPoint": null,
									"id": 1259,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1454": {
									"entryPoint": 3098,
									"id": 1454,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_259": {
									"entryPoint": 5067,
									"id": 259,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_508": {
									"entryPoint": null,
									"id": 508,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_438": {
									"entryPoint": 5662,
									"id": 438,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@increaseAllowance_1413": {
									"entryPoint": 1416,
									"id": 1413,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_367": {
									"entryPoint": null,
									"id": 367,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintCap_1819": {
									"entryPoint": null,
									"id": 1819,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintOpen_1825": {
									"entryPoint": null,
									"id": 1825,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintPrice_1816": {
									"entryPoint": null,
									"id": 1816,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_2089": {
									"entryPoint": 2364,
									"id": 2089,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mul_244": {
									"entryPoint": 5055,
									"id": 244,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_1239": {
									"entryPoint": 1105,
									"id": 1239,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_739": {
									"entryPoint": null,
									"id": 739,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recoverTreasuryTokens_1975": {
									"entryPoint": 1489,
									"id": 1975,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@remainingMintableTokens_2225": {
									"entryPoint": 3316,
									"id": 2225,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@remainingVestedTime_2264": {
									"entryPoint": 1275,
									"id": 2264,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_767": {
									"entryPoint": 2176,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_942": {
									"entryPoint": 5396,
									"id": 942,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_916": {
									"entryPoint": 4956,
									"id": 916,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setMintCap_1855": {
									"entryPoint": 1450,
									"id": 1855,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMintPrice_1874": {
									"entryPoint": 3551,
									"id": 1874,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setOpenMint_1955": {
									"entryPoint": 3289,
									"id": 1955,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setVestingPeriod_1886": {
									"entryPoint": 1463,
									"id": 1886,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_229": {
									"entryPoint": 3939,
									"id": 229,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_1249": {
									"entryPoint": 2349,
									"id": 1249,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_1269": {
									"entryPoint": null,
									"id": 1269,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1384": {
									"entryPoint": 1378,
									"id": 1384,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_790": {
									"entryPoint": 3433,
									"id": 790,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1308": {
									"entryPoint": 3232,
									"id": 1308,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@userInfo_1813": {
									"entryPoint": null,
									"id": 1813,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_643": {
									"entryPoint": 5881,
									"id": 643,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@vestingPeriod_1822": {
									"entryPoint": null,
									"id": 1822,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 6280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$888__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_173f5feae1ad54da66e240442a86ada85e55dadd22acc085c5bb9acab9398b89__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fc0609bdede0b3c78d03850c6be1ea4de01b0f46fe7303a1b9fe01bbd756db3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f42ca80ca1cf7fc7c375d12ec6453aa191e43dda19c1fca59ba268e8930d40c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_83a2624d4982eca65d4a331a6673af179dc8008dcc96f17edd65b4a6824be790__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8bda22120a305673ec0011c53a79c93beb6c43153d45e10cc02b94d43563bbc9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e25561c5247b699ff6d2ec1fa3fd74ec2bd4ff755d0f0f85538b311c73d9a436__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5938,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6368,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 6266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14646:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "77:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "86:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "81:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "146:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "171:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "176:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "167:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "167:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "190:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "195:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "186:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "186:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "180:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "180:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "160:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "160:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "160:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "107:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "110:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "104:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "104:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "118:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "120:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "129:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "125:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "120:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "100:3:1",
																"statements": []
															},
															"src": "96:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "248:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "253:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "244:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "244:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "262:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "237:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "224:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "227:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "221:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:13:1"
															},
															"nodeType": "YulIf",
															"src": "218:48:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "50:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "55:6:1",
														"type": ""
													}
												],
												"src": "14:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "398:262:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "415:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "426:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "408:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "408:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "438:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "458:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "452:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "452:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "442:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "485:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "496:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "481:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "501:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "474:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "474:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "543:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "551:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "539:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "539:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "560:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "571:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "556:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "576:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "517:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "517:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "517:66:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "592:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "608:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "627:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "635:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "623:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "623:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "644:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "640:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "640:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "619:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "604:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "604:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "651:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "600:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "600:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "592:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "367:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "389:4:1",
														"type": ""
													}
												],
												"src": "277:383:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "714:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "724:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "746:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "733:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "724:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "816:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "825:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "828:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "818:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "818:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "818:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "775:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "786:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "801:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "806:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "797:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "797:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "810:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "793:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "793:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "782:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "782:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "772:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "772:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "765:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:50:1"
															},
															"nodeType": "YulIf",
															"src": "762:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "693:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "704:5:1",
														"type": ""
													}
												],
												"src": "665:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "930:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "976:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "985:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "988:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "978:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "978:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "978:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "951:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "960:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "947:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "947:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "972:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "943:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "943:32:1"
															},
															"nodeType": "YulIf",
															"src": "940:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1001:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1030:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1011:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1001:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1049:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1076:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1087:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1072:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1059:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1049:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "888:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "899:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "911:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "919:6:1",
														"type": ""
													}
												],
												"src": "843:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1197:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1207:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1219:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1230:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1215:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1215:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1207:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1249:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1274:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1267:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1267:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1260:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1260:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1242:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1177:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1188:4:1",
														"type": ""
													}
												],
												"src": "1102:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1395:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1405:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1417:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1428:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1413:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1413:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1405:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1447:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1458:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1440:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1364:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1375:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1386:4:1",
														"type": ""
													}
												],
												"src": "1294:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1546:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1592:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1601:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1604:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1594:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1594:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1594:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1567:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1563:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1563:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1588:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1559:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1559:32:1"
															},
															"nodeType": "YulIf",
															"src": "1556:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1617:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1646:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1627:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1627:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1512:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1523:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1535:6:1",
														"type": ""
													}
												],
												"src": "1476:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1824:162:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1834:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1846:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1842:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1842:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1834:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1876:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1869:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1869:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1914:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1925:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1910:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1930:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1903:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1903:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1957:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1968:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1953:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1953:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1973:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1946:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1946:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1946:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1796:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1804:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1815:4:1",
														"type": ""
													}
												],
												"src": "1667:319:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2095:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2143:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2108:32:1"
															},
															"nodeType": "YulIf",
															"src": "2105:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2166:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2195:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2176:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2176:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2166:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2214:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2247:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2258:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2243:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2243:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2224:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2224:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2214:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2271:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2281:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2281:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2271:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2045:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2056:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2068:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2076:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2084:6:1",
														"type": ""
													}
												],
												"src": "1991:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2421:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2431:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2443:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2454:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2439:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2439:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2431:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2473:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2488:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2496:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2484:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2484:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2466:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2466:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2390:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2401:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2412:4:1",
														"type": ""
													}
												],
												"src": "2324:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2583:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2629:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2638:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2641:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2631:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2631:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2631:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2604:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2613:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2600:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2600:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2625:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2596:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2596:32:1"
															},
															"nodeType": "YulIf",
															"src": "2593:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2654:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2677:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2664:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2664:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2654:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2549:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2560:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2572:6:1",
														"type": ""
													}
												],
												"src": "2513:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2813:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2823:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2835:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2846:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2831:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2831:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2823:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2865:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2880:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2896:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2901:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2892:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2892:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2905:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2888:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2888:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2876:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2876:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2858:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2858:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$888__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2782:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2793:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2804:4:1",
														"type": ""
													}
												],
												"src": "2698:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3021:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3031:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3043:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3054:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3039:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3031:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3073:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3088:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3104:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3109:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3100:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3100:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3113:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3096:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3096:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3084:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3084:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3066:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3066:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3066:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2990:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3001:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3012:4:1",
														"type": ""
													}
												],
												"src": "2920:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3215:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3261:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3270:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3273:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3263:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3263:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3263:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3236:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3232:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3232:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3257:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3228:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3228:32:1"
															},
															"nodeType": "YulIf",
															"src": "3225:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3286:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3315:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3296:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3296:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3334:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3367:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3378:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3363:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3363:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3344:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3334:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3173:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3184:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3196:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3204:6:1",
														"type": ""
													}
												],
												"src": "3128:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3435:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3489:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3498:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3501:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3491:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3491:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3491:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3458:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3479:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3472:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3472:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3465:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3455:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3455:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3448:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3448:40:1"
															},
															"nodeType": "YulIf",
															"src": "3445:60:1"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3424:5:1",
														"type": ""
													}
												],
												"src": "3393:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3583:174:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3629:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3638:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3641:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3631:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3631:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3631:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3604:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3613:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3600:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3600:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3625:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3596:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3596:32:1"
															},
															"nodeType": "YulIf",
															"src": "3593:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3654:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3680:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3667:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3667:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3658:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3721:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3699:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3699:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3699:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3736:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3746:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3736:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3549:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3560:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3572:6:1",
														"type": ""
													}
												],
												"src": "3516:241:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3817:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3827:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3841:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3844:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3837:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3837:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3827:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3858:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3888:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3894:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3884:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3862:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3935:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3937:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3951:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3959:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3947:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3947:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3937:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3915:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3908:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3908:26:1"
															},
															"nodeType": "YulIf",
															"src": "3905:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4025:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4046:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4053:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4058:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4049:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4049:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4039:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4039:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4039:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4090:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4093:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4083:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4083:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4083:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4118:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4121:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4111:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4111:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4111:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3981:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4004:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4012:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4001:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4001:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3978:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3978:38:1"
															},
															"nodeType": "YulIf",
															"src": "3975:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3797:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3806:6:1",
														"type": ""
													}
												],
												"src": "3762:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4179:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4196:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4203:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4208:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4199:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4199:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4189:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4189:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4189:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4236:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4239:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4229:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4229:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4229:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4260:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4263:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4253:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4253:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4253:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4147:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4327:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4354:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4356:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4356:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4356:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4343:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4350:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4346:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4346:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4340:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4340:13:1"
															},
															"nodeType": "YulIf",
															"src": "4337:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4385:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4396:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4399:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4392:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4392:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4385:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4310:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4313:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4319:3:1",
														"type": ""
													}
												],
												"src": "4279:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4548:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4551:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4541:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:1"
															},
															"nodeType": "YulIf",
															"src": "4503:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4564:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4580:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4574:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4574:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4564:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4459:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4470:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4482:6:1",
														"type": ""
													}
												],
												"src": "4412:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4775:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4792:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4803:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4785:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4785:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4785:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4842:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4815:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4815:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4815:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4865:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4876:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4861:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4861:18:1"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4881:33:1",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4854:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4854:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4854:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4924:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4936:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4947:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4924:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4752:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4766:4:1",
														"type": ""
													}
												],
												"src": "4601:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5135:156:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5152:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5163:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5145:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5145:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5145:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5186:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5197:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5182:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5182:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5202:1:1",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5175:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5175:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5175:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5224:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5235:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5220:18:1"
																	},
																	{
																		"hexValue": "6e6f206d696e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5240:9:1",
																		"type": "",
																		"value": "no mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5213:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5213:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5213:37:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5259:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5271:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5282:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5259:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fc0609bdede0b3c78d03850c6be1ea4de01b0f46fe7303a1b9fe01bbd756db3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5112:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5126:4:1",
														"type": ""
													}
												],
												"src": "4961:330:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5425:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5435:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5447:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5458:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5443:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5443:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5435:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5477:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5492:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5508:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5513:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5504:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5504:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5517:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5500:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5500:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5488:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5488:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5470:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5470:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5470:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5541:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5552:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5537:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5537:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5557:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5530:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5530:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5530:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5386:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5397:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5405:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5416:4:1",
														"type": ""
													}
												],
												"src": "5296:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5653:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5699:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5708:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5711:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5701:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5701:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5701:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5674:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5683:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5670:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5670:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5695:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5666:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5666:32:1"
															},
															"nodeType": "YulIf",
															"src": "5663:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5724:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5743:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5737:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5737:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5728:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5784:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5762:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5762:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5762:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5799:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5809:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5799:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5619:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5630:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5642:6:1",
														"type": ""
													}
												],
												"src": "5575:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5999:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6016:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6027:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6009:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6009:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6050:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6061:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6046:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6046:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6066:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6039:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6039:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6039:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6089:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6100:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6085:18:1"
																	},
																	{
																		"hexValue": "6d61782032303030207573646320706572207478",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6105:22:1",
																		"type": "",
																		"value": "max 2000 usdc per tx"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6078:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6078:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6078:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6137:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6149:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6160:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6145:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6145:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6137:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_83a2624d4982eca65d4a331a6673af179dc8008dcc96f17edd65b4a6824be790__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5976:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5990:4:1",
														"type": ""
													}
												],
												"src": "5825:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6348:165:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6365:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6376:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6358:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6358:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6358:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6399:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6410:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6395:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6395:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6415:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6388:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6388:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6388:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6438:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6449:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6434:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6434:18:1"
																	},
																	{
																		"hexValue": "6d696e74206e6f74206f70656e6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6454:17:1",
																		"type": "",
																		"value": "mint not opened"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6427:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6427:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6427:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6481:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6493:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6504:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6489:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6489:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6481:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f42ca80ca1cf7fc7c375d12ec6453aa191e43dda19c1fca59ba268e8930d40c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6325:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6339:4:1",
														"type": ""
													}
												],
												"src": "6174:339:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6692:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6709:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6720:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6702:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6702:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6702:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6743:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6754:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6739:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6739:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6759:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6732:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6732:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6732:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6782:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6793:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6778:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6778:18:1"
																	},
																	{
																		"hexValue": "555344432062616c616e636520746f6f206c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6798:22:1",
																		"type": "",
																		"value": "USDC balance too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6771:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6771:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6771:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6830:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6842:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6853:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6838:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6838:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6830:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bda22120a305673ec0011c53a79c93beb6c43153d45e10cc02b94d43563bbc9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6669:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6683:4:1",
														"type": ""
													}
												],
												"src": "6518:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7041:163:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7058:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7069:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7051:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7051:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7051:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7092:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7103:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7088:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7088:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7108:2:1",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7081:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7081:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7081:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7131:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7142:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7127:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7127:18:1"
																	},
																	{
																		"hexValue": "6f766572206d696e7420636170",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7147:15:1",
																		"type": "",
																		"value": "over mint cap"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7120:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7120:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7172:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7184:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7195:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7180:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7180:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7172:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e25561c5247b699ff6d2ec1fa3fd74ec2bd4ff755d0f0f85538b311c73d9a436__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7018:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7032:4:1",
														"type": ""
													}
												],
												"src": "6867:337:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7383:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7400:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7411:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7393:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7393:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7393:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7434:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7445:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7430:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7430:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7450:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7423:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7423:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7423:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7473:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7484:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7469:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7469:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7489:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7462:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7462:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7462:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7544:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7555:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7540:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7540:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7560:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7533:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7533:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7533:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7577:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7589:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7600:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7585:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7585:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7577:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7360:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7374:4:1",
														"type": ""
													}
												],
												"src": "7209:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7789:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7806:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7817:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7799:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7799:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7799:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7840:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7851:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7836:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7836:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7856:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7829:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7829:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7829:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7879:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7890:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7875:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7875:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7895:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7868:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7868:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7868:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7950:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7961:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7946:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7946:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7966:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7939:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7939:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7939:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7984:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7996:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8007:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7992:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7992:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7984:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7766:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7780:4:1",
														"type": ""
													}
												],
												"src": "7615:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8196:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8213:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8224:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8206:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8206:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8206:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8247:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8258:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8243:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8243:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8263:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8236:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8236:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8286:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8297:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8282:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8282:18:1"
																	},
																	{
																		"hexValue": "63616e2774206265206c6f776572207468616e206c617374206d696e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8302:31:1",
																		"type": "",
																		"value": "can't be lower than last mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8275:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8275:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8275:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8343:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8355:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8366:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8351:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8351:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8343:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_173f5feae1ad54da66e240442a86ada85e55dadd22acc085c5bb9acab9398b89__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8173:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8187:4:1",
														"type": ""
													}
												],
												"src": "8022:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8554:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8571:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8582:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8564:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8564:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8564:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8605:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8616:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8601:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8601:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8621:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8594:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8594:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8594:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8644:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8655:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8640:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8640:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8660:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8633:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8633:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8633:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8715:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8726:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8711:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8711:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8731:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8704:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8704:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8747:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8759:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8770:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8755:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8755:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8747:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8531:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8545:4:1",
														"type": ""
													}
												],
												"src": "8380:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8959:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8976:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8987:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8969:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8969:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8969:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9010:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9021:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9006:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9006:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9026:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8999:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8999:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8999:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9049:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9060:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9045:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9045:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9065:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9038:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9038:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9038:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9120:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9131:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9116:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9116:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9136:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9109:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9109:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9109:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9150:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9162:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9173:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9158:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9158:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9150:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8936:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8950:4:1",
														"type": ""
													}
												],
												"src": "8785:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9237:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9259:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9261:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9261:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9261:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9253:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9256:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9250:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9250:8:1"
															},
															"nodeType": "YulIf",
															"src": "9247:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9290:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9302:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9305:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9298:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9298:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9290:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9219:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9222:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9228:4:1",
														"type": ""
													}
												],
												"src": "9188:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9492:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9509:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9520:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9502:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9502:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9543:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9554:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9539:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9539:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9559:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9532:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9532:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9532:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9582:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9593:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9578:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9578:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9598:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9571:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9571:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9571:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9639:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9651:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9662:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9647:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9647:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9639:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9469:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9483:4:1",
														"type": ""
													}
												],
												"src": "9318:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9850:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9867:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9878:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9860:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9860:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9901:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9912:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9897:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9897:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9917:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9890:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9890:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9890:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9940:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9951:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9936:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9936:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9956:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9929:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9929:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9929:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10011:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10022:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10007:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10007:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10027:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10000:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10000:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10000:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10044:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10056:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10067:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10052:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10052:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10044:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9827:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9841:4:1",
														"type": ""
													}
												],
												"src": "9676:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10256:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10273:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10284:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10266:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10266:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10266:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10307:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10318:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10303:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10303:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10323:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10296:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10296:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10296:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10346:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10357:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10342:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10342:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10362:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10335:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10335:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10417:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10428:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10413:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10413:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10433:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10406:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10406:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10406:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10448:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10460:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10471:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10456:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10456:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10448:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10233:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10247:4:1",
														"type": ""
													}
												],
												"src": "10082:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10660:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10677:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10688:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10670:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10670:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10711:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10722:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10707:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10707:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10727:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10700:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10700:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10700:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10750:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10761:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10746:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10746:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10766:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10739:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10739:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10739:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10821:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10832:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10817:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10817:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10837:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10810:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10810:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10810:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10855:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10867:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10878:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10863:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10863:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10855:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10637:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10651:4:1",
														"type": ""
													}
												],
												"src": "10486:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11067:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11084:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11095:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11077:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11077:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11077:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11118:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11129:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11114:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11114:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11134:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11107:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11107:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11107:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11157:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11168:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11153:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11153:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11173:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11146:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11146:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11146:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11217:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11229:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11240:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11225:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11225:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11217:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11044:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11058:4:1",
														"type": ""
													}
												],
												"src": "10893:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11428:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11445:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11456:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11438:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11438:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11438:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11479:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11490:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11475:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11475:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11495:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11468:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11468:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11468:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11518:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11529:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11514:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11514:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11534:34:1",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11507:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11507:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11507:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11589:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11600:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11585:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11585:18:1"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11605:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11578:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11578:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11578:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11618:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11630:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11641:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11626:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11626:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11618:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11405:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11419:4:1",
														"type": ""
													}
												],
												"src": "11254:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11830:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11847:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11858:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11840:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11840:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11840:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11881:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11892:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11877:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11877:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11897:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11870:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11870:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11870:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11920:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11931:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11916:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11916:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11936:34:1",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11909:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11909:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11909:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11991:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12002:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11987:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11987:18:1"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12007:4:1",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11980:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11980:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11980:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12021:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12033:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12044:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12029:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12029:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12021:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11807:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11821:4:1",
														"type": ""
													}
												],
												"src": "11656:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12111:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12170:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12172:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12172:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12172:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12142:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12135:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12135:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12128:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12128:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12150:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12161:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "12157:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12157:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12165:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "12153:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12153:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12147:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12147:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12124:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12124:45:1"
															},
															"nodeType": "YulIf",
															"src": "12121:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12201:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12216:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12219:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12212:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12212:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12201:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12090:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12093:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12099:7:1",
														"type": ""
													}
												],
												"src": "12059:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12278:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12309:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12330:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12337:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12342:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "12333:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12333:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12323:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12323:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12323:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12374:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12377:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12367:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12367:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12367:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12402:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12405:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12395:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12395:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12395:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12298:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12291:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12291:9:1"
															},
															"nodeType": "YulIf",
															"src": "12288:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12429:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12438:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12441:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12434:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12434:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12429:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12263:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12266:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12272:1:1",
														"type": ""
													}
												],
												"src": "12232:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12628:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12645:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12656:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12638:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12638:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12638:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12679:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12690:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12675:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12675:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12695:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12668:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12668:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12668:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12718:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12729:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12714:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12734:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12707:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12707:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12707:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12777:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12789:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12800:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12785:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12785:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12777:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12605:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12619:4:1",
														"type": ""
													}
												],
												"src": "12454:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12971:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12981:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12993:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13004:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12989:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12989:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12981:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13016:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13034:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13039:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13030:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13030:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13043:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13026:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13026:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13020:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13061:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13076:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13084:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13072:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13072:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13054:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13054:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13054:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13108:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13119:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13104:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13104:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13128:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13136:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13124:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13124:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13097:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13097:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13097:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13160:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13171:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13156:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13156:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13176:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13149:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13149:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13149:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12924:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12935:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12943:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12951:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12962:4:1",
														"type": ""
													}
												],
												"src": "12814:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13368:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13385:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13396:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13378:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13378:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13378:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13419:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13430:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13415:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13435:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13408:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13408:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13408:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13458:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13469:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13454:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13454:18:1"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13474:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13447:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13447:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13447:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13529:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13540:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13525:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13525:18:1"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13545:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13518:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13518:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13518:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13567:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13579:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13590:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13575:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13575:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13567:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13345:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13359:4:1",
														"type": ""
													}
												],
												"src": "13194:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13779:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13796:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13807:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13789:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13789:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13789:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13830:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13841:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13826:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13826:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13846:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13819:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13819:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13819:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13869:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13880:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13865:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13865:18:1"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13885:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13858:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13858:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13858:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13940:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13951:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13936:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13936:18:1"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13956:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13929:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13929:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13929:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13974:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13986:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13997:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13982:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13982:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13974:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13756:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13770:4:1",
														"type": ""
													}
												],
												"src": "13605:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14186:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14203:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14214:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14196:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14196:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14196:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14237:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14248:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14233:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14233:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14253:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14226:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14226:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14226:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14276:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14287:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14272:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14272:18:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14292:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14265:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14265:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14333:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14345:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14356:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14341:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14341:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14333:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14163:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14177:4:1",
														"type": ""
													}
												],
												"src": "14012:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14507:137:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14517:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14537:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14531:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14531:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14521:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14579:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14587:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14575:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14575:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14594:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14599:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "14553:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14553:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14553:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14615:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14626:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14631:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14622:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14622:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14615:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14483:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14488:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14499:3:1",
														"type": ""
													}
												],
												"src": "14370:274:1"
											}
										]
									},
									"contents": "{\n    { }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$888__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2fc0609bdede0b3c78d03850c6be1ea4de01b0f46fe7303a1b9fe01bbd756db3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"no mint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_83a2624d4982eca65d4a331a6673af179dc8008dcc96f17edd65b4a6824be790__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"max 2000 usdc per tx\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3f42ca80ca1cf7fc7c375d12ec6453aa191e43dda19c1fca59ba268e8930d40c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"mint not opened\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8bda22120a305673ec0011c53a79c93beb6c43153d45e10cc02b94d43563bbc9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"USDC balance too low\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e25561c5247b699ff6d2ec1fa3fd74ec2bd4ff755d0f0f85538b311c73d9a436__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"over mint cap\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_173f5feae1ad54da66e240442a86ada85e55dadd22acc085c5bb9acab9398b89__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"can't be lower than last mint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101e55760003560e01c806370a082311161010f578063a0712d68116100a2578063e2af30f411610071578063e2af30f414610410578063e2e5c15c14610423578063f2fde38b1461042b578063f4a0a5281461043e57600080fd5b8063a0712d68146103c4578063a457c2d7146103d7578063a9059cbb146103ea578063dd62ed3e146103fd57600080fd5b806384d24226116100de57806384d242261461036857806389a302711461037b5780638da5cb5b146103ab57806395d89b41146103bc57600080fd5b806370a0823114610325578063715018a61461034e5780637313ee5a1461035657806376c71ca11461035f57600080fd5b8063313ce5671161018757806342966c681161015657806342966c68146102f95780634e2745141461030c5780634e71d92d146103145780636817c76c1461031c57600080fd5b8063313ce567146102af57806339509351146102be5780634070a0c9146102d157806340bee0ed146102e657600080fd5b80631959a002116101c35780631959a0021461023d57806320f203d91461028757806323b872dd1461028f57806324bbd049146102a257600080fd5b806306fdde03146101ea578063095ea7b31461020857806318160ddd1461022b575b600080fd5b6101f2610451565b6040516101ff919061175e565b60405180910390f35b61021b6102163660046117ad565b6104e3565b60405190151581526020016101ff565b6002545b6040519081526020016101ff565b61026c61024b3660046117d7565b60076020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060016101ff565b61022f6104fb565b61021b61029d3660046117f2565b610562565b600b5461021b9060ff1681565b604051601281526020016101ff565b61021b6102cc3660046117ad565b610588565b6102e46102df36600461182e565b6105aa565b005b6102e46102f436600461182e565b6105b7565b6102e461030736600461182e565b6105c4565b6102e46105d1565b6102e4610678565b61022f60085481565b61022f6103333660046117d7565b6001600160a01b031660009081526020819052604090205490565b6102e4610880565b61022f600a5481565b61022f60095481565b61022f6103763660046117d7565b610892565b600b546103939061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016101ff565b6005546001600160a01b0316610393565b6101f261092d565b6102e46103d236600461182e565b61093c565b61021b6103e53660046117ad565b610c1a565b61021b6103f83660046117ad565b610ca0565b61022f61040b366004611847565b610cae565b6102e461041e366004611888565b610cd9565b61022f610cf4565b6102e46104393660046117d7565b610d69565b6102e461044c36600461182e565b610ddf565b606060038054610460906118a5565b80601f016020809104026020016040519081016040528092919081815260200182805461048c906118a5565b80156104d95780601f106104ae576101008083540402835291602001916104d9565b820191906000526020600020905b8154815290600101906020018083116104bc57829003601f168201915b5050505050905090565b6000336104f1818585610e3e565b5060019392505050565b33600090815260076020526040812060010154819061051b904290610f63565b33600090815260076020526040902060020154909150811061053f57600091505090565b3360009081526007602052604090206002015461055c9082610f63565b91505090565b600033610570858285610f6f565b61057b858585610fe9565b60019150505b9392505050565b6000336104f181858561059b8383610cae565b6105a591906118f6565b610e3e565b6105b26111b7565b600955565b6105bf6111b7565b600a55565b6105ce3382611211565b50565b6105d96111b7565b6106766105ee6005546001600160a01b031690565b600b546040516370a0823160e01b81523060048201526101009091046001600160a01b0316906370a0823190602401602060405180830381865afa15801561063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065e919061190e565b600b5461010090046001600160a01b0316919061135c565b565b600260065414156106d05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026006553360009081526007602052604090205461071b5760405162461bcd60e51b81526020600482015260076024820152661b9bc81b5a5b9d60ca1b60448201526064016106c7565b33600090815260076020526040812060010154610739904290610f63565b33600090815260076020526040812060020154919250908210610776575033600090815260076020526040812080546002909101919091556107d5565b336000908152600760205260409020600281015490546107a1919061079b90856113bf565b906113cb565b336000908152600760205260409020600201549091506107c19083610f63565b336000908152600760205260409020600201555b336000908152600760205260409020546107ef9082610f63565b336000818152600760205260409081902092835542600190930192909255905163a9059cbb60e01b8152600481019190915260248101829052309063a9059cbb906044016020604051808303816000875af1158015610852573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108769190611927565b5050600160065550565b6108886111b7565b61067660006113d7565b6001600160a01b03811660009081526007602052604081206001015481906108bb904290610f63565b336000908152600760205260408120600201549192509082106108f757506001600160a01b038316600090815260076020526040902054610581565b6001600160a01b038416600090815260076020526040902060028101549054610925919061079b90856113bf565b949350505050565b606060048054610460906118a5565b6002600654141561098f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106c7565b600260065563773594008111156109df5760405162461bcd60e51b81526020600482015260146024820152730dac2f0406460606040eae6c8c640e0cae440e8f60631b60448201526064016106c7565b600b5460ff16610a235760405162461bcd60e51b815260206004820152600f60248201526e1b5a5b9d081b9bdd081bdc195b9959608a1b60448201526064016106c7565b600b546040516370a0823160e01b8152336004820152829161010090046001600160a01b0316906370a0823190602401602060405180830381865afa158015610a70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a94919061190e565b1015610ad95760405162461bcd60e51b8152602060048201526014602482015273555344432062616c616e636520746f6f206c6f7760601b60448201526064016106c7565b6000610aea8264e8d4a510006113bf565b90506000610b0960085461079b6103e8856113bf90919063ffffffff16565b9050600954610b7a82306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b74919061190e565b90611429565b1115610bb85760405162461bcd60e51b815260206004820152600d60248201526c06f766572206d696e742063617609c1b60448201526064016106c7565b33600090815260076020526040902054610bd29082611429565b336000908152600760205260409020908155426001820155600a54600290910155610bfd3082611435565b600b546108769061010090046001600160a01b0316333086611514565b60003381610c288286610cae565b905083811015610c885760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106c7565b610c958286868403610e3e565b506001949350505050565b6000336104f1818585610fe9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610ce16111b7565b600b805460ff1916911515919091179055565b6000610d64306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5b919061190e565b60095490610f63565b905090565b610d716111b7565b6001600160a01b038116610dd65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106c7565b6105ce816113d7565b610de76111b7565b600854811015610e395760405162461bcd60e51b815260206004820152601d60248201527f63616e2774206265206c6f776572207468616e206c617374206d696e7400000060448201526064016106c7565b600855565b6001600160a01b038316610ea05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106c7565b6001600160a01b038216610f015760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106c7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105818284611944565b6000610f7b8484610cae565b90506000198114610fe35781811015610fd65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106c7565b610fe38484848403610e3e565b50505050565b6001600160a01b03831661104d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106c7565b6001600160a01b0382166110af5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106c7565b6001600160a01b038316600090815260208190526040902054818110156111275760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106c7565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061115e9084906118f6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111aa91815260200190565b60405180910390a3610fe3565b6005546001600160a01b031633146106765760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106c7565b6001600160a01b0382166112715760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106c7565b6001600160a01b038216600090815260208190526040902054818110156112e55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106c7565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611314908490611944565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610f56565b505050565b6040516001600160a01b03831660248201526044810182905261135790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261154c565b6000610581828461195b565b6000610581828461197a565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061058182846118f6565b6001600160a01b03821661148b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106c7565b806002600082825461149d91906118f6565b90915550506001600160a01b038216600090815260208190526040812080548392906114ca9084906118f6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052610fe39085906323b872dd60e01b90608401611388565b60006115a1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661161e9092919063ffffffff16565b80519091501561135757808060200190518101906115bf9190611927565b6113575760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106c7565b60606109258484600085856001600160a01b0385163b6116805760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106c7565b600080866001600160a01b0316858760405161169c919061199c565b60006040518083038185875af1925050503d80600081146116d9576040519150601f19603f3d011682016040523d82523d6000602084013e6116de565b606091505b50915091506116ee8282866116f9565b979650505050505050565b60608315611708575081610581565b8251156117185782518084602001fd5b8160405162461bcd60e51b81526004016106c7919061175e565b60005b8381101561174d578181015183820152602001611735565b83811115610fe35750506000910152565b602081526000825180602084015261177d816040850160208701611732565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146117a857600080fd5b919050565b600080604083850312156117c057600080fd5b6117c983611791565b946020939093013593505050565b6000602082840312156117e957600080fd5b61058182611791565b60008060006060848603121561180757600080fd5b61181084611791565b925061181e60208501611791565b9150604084013590509250925092565b60006020828403121561184057600080fd5b5035919050565b6000806040838503121561185a57600080fd5b61186383611791565b915061187160208401611791565b90509250929050565b80151581146105ce57600080fd5b60006020828403121561189a57600080fd5b81356105818161187a565b600181811c908216806118b957607f821691505b602082108114156118da57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611909576119096118e0565b500190565b60006020828403121561192057600080fd5b5051919050565b60006020828403121561193957600080fd5b81516105818161187a565b600082821015611956576119566118e0565b500390565b6000816000190483118215151615611975576119756118e0565b500290565b60008261199757634e487b7160e01b600052601260045260246000fd5b500490565b600082516119ae818460208701611732565b919091019291505056fea264697066735822122011b4057e1857069e76caddf6789f50e832c698b64594ca5d7a526ca80a460b7d64736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE2AF30F4 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE2AF30F4 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xE2E5C15C EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0xF4A0A528 EQ PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84D24226 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x84D24226 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x7313EE5A EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x76C71CA1 EQ PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x4E274514 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x6817C76C EQ PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x4070A0C9 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x40BEE0ED EQ PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1959A002 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x20F203D9 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x24BBD049 EQ PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x26C PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x22F PUSH2 0x4FB JUMP JUMPDEST PUSH2 0x21B PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x21B SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x21B PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E4 PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x22F PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x333 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x880 JUMP JUMPDEST PUSH2 0x22F PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x376 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D7 JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x393 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x393 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x92D JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x3D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x93C JUMP JUMPDEST PUSH2 0x21B PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0xC1A JUMP JUMPDEST PUSH2 0x21B PUSH2 0x3F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x1847 JUMP JUMPDEST PUSH2 0xCAE JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x22F PUSH2 0xCF4 JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x439 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D7 JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x44C CALLDATASIZE PUSH1 0x4 PUSH2 0x182E JUMP JUMPDEST PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x460 SWAP1 PUSH2 0x18A5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x48C SWAP1 PUSH2 0x18A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4F1 DUP2 DUP6 DUP6 PUSH2 0xE3E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 SWAP1 PUSH2 0x51B SWAP1 TIMESTAMP SWAP1 PUSH2 0xF63 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP DUP2 LT PUSH2 0x53F JUMPI PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x55C SWAP1 DUP3 PUSH2 0xF63 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x570 DUP6 DUP3 DUP6 PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x57B DUP6 DUP6 DUP6 PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4F1 DUP2 DUP6 DUP6 PUSH2 0x59B DUP4 DUP4 PUSH2 0xCAE JUMP JUMPDEST PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x5B2 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH2 0x5BF PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH2 0x5CE CALLER DUP3 PUSH2 0x1211 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5D9 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0x676 PUSH2 0x5EE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65E SWAP2 SWAP1 PUSH2 0x190E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x135C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x71B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x1B9BC81B5A5B9D PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x739 SWAP1 TIMESTAMP SWAP1 PUSH2 0xF63 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 LT PUSH2 0x776 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x7D5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SLOAD PUSH2 0x7A1 SWAP2 SWAP1 PUSH2 0x79B SWAP1 DUP6 PUSH2 0x13BF JUMP JUMPDEST SWAP1 PUSH2 0x13CB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x7C1 SWAP1 DUP4 PUSH2 0xF63 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7EF SWAP1 DUP3 PUSH2 0xF63 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 DUP4 SSTORE TIMESTAMP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x852 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x876 SWAP2 SWAP1 PUSH2 0x1927 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6 SSTORE POP JUMP JUMPDEST PUSH2 0x888 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0x676 PUSH1 0x0 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 SWAP1 PUSH2 0x8BB SWAP1 TIMESTAMP SWAP1 PUSH2 0xF63 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 LT PUSH2 0x8F7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x581 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SLOAD PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x79B SWAP1 DUP6 PUSH2 0x13BF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x460 SWAP1 PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH4 0x77359400 DUP2 GT ISZERO PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xDAC2F0406460606040EAE6C8C640E0CAE440E8F PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1B5A5B9D081B9BDD081BDC195B9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x190E JUMP JUMPDEST LT ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x555344432062616C616E636520746F6F206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEA DUP3 PUSH5 0xE8D4A51000 PUSH2 0x13BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB09 PUSH1 0x8 SLOAD PUSH2 0x79B PUSH2 0x3E8 DUP6 PUSH2 0x13BF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD PUSH2 0xB7A DUP3 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB74 SWAP2 SWAP1 PUSH2 0x190E JUMP JUMPDEST SWAP1 PUSH2 0x1429 JUMP JUMPDEST GT ISZERO PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x6F766572206D696E742063617 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBD2 SWAP1 DUP3 PUSH2 0x1429 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0xA SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH2 0xBFD ADDRESS DUP3 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x876 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0xC28 DUP3 DUP7 PUSH2 0xCAE JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0xC95 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xE3E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4F1 DUP2 DUP6 DUP6 PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xCE1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD64 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x190E JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 PUSH2 0xF63 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD71 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x5CE DUP2 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0xDE7 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xE39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E2774206265206C6F776572207468616E206C617374206D696E74000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 DUP3 DUP5 PUSH2 0x1944 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B DUP5 DUP5 PUSH2 0xCAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xFE3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0xFE3 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xE3E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x104D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1127 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x115E SWAP1 DUP5 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x11AA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1271 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1314 SWAP1 DUP5 SWAP1 PUSH2 0x1944 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0xF56 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1357 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x154C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 DUP3 DUP5 PUSH2 0x195B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 DUP3 DUP5 PUSH2 0x197A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 DUP3 DUP5 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x148B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x149D SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x14CA SWAP1 DUP5 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xFE3 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A1 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x161E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1357 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x15BF SWAP2 SWAP1 PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x1357 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x925 DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1680 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x169C SWAP2 SWAP1 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16D9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x16EE DUP3 DUP3 DUP7 PUSH2 0x16F9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1708 JUMPI POP DUP2 PUSH2 0x581 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1718 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x174D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1735 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFE3 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x177D DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x17A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17C9 DUP4 PUSH2 0x1791 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x581 DUP3 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1810 DUP5 PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP PUSH2 0x181E PUSH1 0x20 DUP6 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1840 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x185A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1863 DUP4 PUSH2 0x1791 JUMP JUMPDEST SWAP2 POP PUSH2 0x1871 PUSH1 0x20 DUP5 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x581 DUP2 PUSH2 0x187A JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x18B9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x18DA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1909 JUMPI PUSH2 0x1909 PUSH2 0x18E0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x581 DUP2 PUSH2 0x187A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1956 JUMPI PUSH2 0x1956 PUSH2 0x18E0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1975 JUMPI PUSH2 0x1975 PUSH2 0x18E0 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1997 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x19AE DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1732 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xB4 SDIV PUSH31 0x1857069E76CADDF6789F50E832C698B64594CA5D7A526CA80A460B7D64736F PUSH13 0x634300080C0033000000000000 ",
							"sourceMap": "44114:3940:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33585:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;35862:197;;;;;;:::i;:::-;;:::i;:::-;;;1267:14:1;;1260:22;1242:41;;1230:2;1215:18;35862:197:0;1102:187:1;34673:106:0;34760:12;;34673:106;;;1440:25:1;;;1428:2;1413:18;34673:106:0;1294:177:1;44452:44:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1869:25:1;;;1925:2;1910:18;;1903:34;;;;1953:18;;;1946:34;1857:2;1842:18;44452:44:0;1667:319:1;47703:348:0;;;:::i;36621:286::-;;;;;;:::i;:::-;;:::i;44615:28::-;;;;;;;;;34522:91;;;34604:2;2466:36:1;;2454:2;2439:18;34522:91:0;2324:184:1;37302:234:0;;;;;;:::i;:::-;;:::i;44818:92::-;;;;;;:::i;:::-;;:::i;:::-;;45102:102;;;;;;:::i;:::-;;:::i;44728:84::-;;;;;;:::i;:::-;;:::i;45792:126::-;;;:::i;46710:852::-;;;:::i;44503:31::-;;;;;;34837:125;;;;;;:::i;:::-;-1:-1:-1;;;;;34937:18:0;34911:7;34937:18;;;;;;;;;;;;34837:125;22823:101;;;:::i;44572:37::-;;;;;;44540:26;;;;;;45210:476;;;;;;:::i;:::-;;:::i;44649:71::-;;;;;;;;-1:-1:-1;;;;;44649:71:0;;;;;;-1:-1:-1;;;;;2876:32:1;;;2858:51;;2846:2;2831:18;44649:71:0;2698:217:1;22193:85:0;22265:6;;-1:-1:-1;;;;;22265:6:0;22193:85;;33796:102;;;:::i;45925:779::-;;;;;;:::i;:::-;;:::i;38023:427::-;;;;;;:::i;:::-;;:::i;35158:189::-;;;;;;:::i;:::-;;:::i;35405:149::-;;;;;;:::i;:::-;;:::i;45693:93::-;;;;;;:::i;:::-;;:::i;47568:129::-;;;:::i;23073:198::-;;;;;;:::i;:::-;;:::i;44921:175::-;;;;;;:::i;:::-;;:::i;33585:98::-;33639:13;33671:5;33664:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33585:98;:::o;35862:197::-;35945:4;20875:10;35999:32;20875:10;36015:7;36024:6;35999:8;:32::i;:::-;-1:-1:-1;36048:4:0;;35862:197;-1:-1:-1;;;35862:197:0:o;47703:348::-;47822:10;47756:7;47813:20;;;:8;:20;;;;;:40;;;47756:7;;47793:61;;:15;;:19;:61::i;:::-;47889:10;47880:20;;;;:8;:20;;;;;:31;;;47774:80;;-1:-1:-1;47868:43:0;;47864:172;;47933:1;47926:8;;;47703:348;:::o;47864:172::-;47989:10;47980:20;;;;:8;:20;;;;;:31;;;:45;;48016:8;47980:35;:45::i;:::-;47973:52;;;47703:348;:::o;36621:286::-;36748:4;20875:10;36804:38;36820:4;20875:10;36835:6;36804:15;:38::i;:::-;36852:27;36862:4;36868:2;36872:6;36852:9;:27::i;:::-;36896:4;36889:11;;;36621:286;;;;;;:::o;37302:234::-;37390:4;20875:10;37444:64;20875:10;37460:7;37497:10;37469:25;20875:10;37460:7;37469:9;:25::i;:::-;:38;;;;:::i;:::-;37444:8;:64::i;44818:92::-;22086:13;:11;:13::i;:::-;44885:7:::1;:18:::0;44818:92::o;45102:102::-;22086:13;:11;:13::i;:::-;45174::::1;:23:::0;45102:102::o;44728:84::-;44779:26;44785:10;44797:7;44779:5;:26::i;:::-;44728:84;:::o;45792:126::-;22086:13;:11;:13::i;:::-;45854:57:::1;45872:7;22265:6:::0;;-1:-1:-1;;;;;22265:6:0;;22193:85;45872:7:::1;45881:4;::::0;:29:::1;::::0;-1:-1:-1;;;45881:29:0;;45904:4:::1;45881:29;::::0;::::1;2858:51:1::0;45881:4:0::1;::::0;;::::1;-1:-1:-1::0;;;;;45881:4:0::1;::::0;:14:::1;::::0;2831:18:1;;45881:29:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;45854:4;::::0;::::1;::::0;::::1;-1:-1:-1::0;;;;;45854:4:0::1;::::0;;:17:::1;:57::i;:::-;45792:126::o:0;46710:852::-;1777:1;2358:7;;:19;;2350:63;;;;-1:-1:-1;;;2350:63:0;;4803:2:1;2350:63:0;;;4785:21:1;4842:2;4822:18;;;4815:30;4881:33;4861:18;;;4854:61;4932:18;;2350:63:0;;;;;;;;;1777:1;2488:7;:18;46777:10:::1;46803:1;46768:20:::0;;;:8:::1;:20;::::0;;;;:32;46760:56:::1;;;::::0;-1:-1:-1;;;46760:56:0;;5163:2:1;46760:56:0::1;::::0;::::1;5145:21:1::0;5202:1;5182:18;;;5175:29;-1:-1:-1;;;5220:18:1;;;5213:37;5267:18;;46760:56:0::1;4961:330:1::0;46760:56:0::1;46874:10;46826:16;46865:20:::0;;;:8:::1;:20;::::0;;;;:40:::1;;::::0;46845:61:::1;::::0;:15:::1;::::0;:19:::1;:61::i;:::-;46968:10;46916:17;46959:20:::0;;;:8:::1;:20;::::0;;;;:31:::1;;::::0;46826:80;;-1:-1:-1;46916:17:0;46947:43;::::1;46943:406;;-1:-1:-1::0;47026:10:0::1;47017:20;::::0;;;:8:::1;:20;::::0;;;;:32;;47063:31:::1;::::0;;::::1;:35:::0;;;;46943:406:::1;;;47209:10;47200:20;::::0;;;:8:::1;:20;::::0;;;;:31:::1;::::0;::::1;::::0;47149:32;;:83:::1;::::0;47200:31;47149:46:::1;::::0;47186:8;47149:36:::1;:46::i;:::-;:50:::0;::::1;:83::i;:::-;47289:10;47280:20;::::0;;;:8:::1;:20;::::0;;;;:31:::1;;::::0;47137:95;;-1:-1:-1;47280:45:0::1;::::0;47316:8;47280:35:::1;:45::i;:::-;47255:10;47246:20;::::0;;;:8:::1;:20;::::0;;;;:31:::1;;:79:::0;46943:406:::1;47402:10;47393:20;::::0;;;:8:::1;:20;::::0;;;;:32;:47:::1;::::0;47430:9;47393:36:::1;:47::i;:::-;47367:10;47358:20;::::0;;;:8:::1;:20;::::0;;;;;;:82;;;47493:15:::1;47450:40;::::0;;::::1;:58:::0;;;;47519:36;;-1:-1:-1;;;47519:36:0;;::::1;::::0;::::1;5470:51:1::0;;;;5537:18;;;5530:34;;;47519:4:0::1;::::0;:13:::1;::::0;5443:18:1;;47519:36:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;1734:1:0;2661:7;:22;-1:-1:-1;46710:852:0:o;22823:101::-;22086:13;:11;:13::i;:::-;22887:30:::1;22914:1;22887:18;:30::i;45210:476::-:0;-1:-1:-1;;;;;45333:18:0;;45275:7;45333:18;;;:8;:18;;;;;:38;;;45275:7;;45313:59;;:15;;:19;:59::i;:::-;45434:10;45382:17;45425:20;;;:8;:20;;;;;:31;;;45294:78;;-1:-1:-1;45382:17:0;45413:43;;45409:245;;-1:-1:-1;;;;;;45483:18:0;;;;;;:8;:18;;;;;:30;45409:245;;;-1:-1:-1;;;;;45613:18:0;;;;;;:8;:18;;;;;:29;;;;45564:30;;:79;;45613:29;45564:44;;45599:8;45564:34;:44::i;:79::-;45552:91;45670:9;-1:-1:-1;;;;45210:476:0:o;33796:102::-;33852:13;33884:7;33877:14;;;;;:::i;45925:779::-;1777:1;2358:7;;:19;;2350:63;;;;-1:-1:-1;;;2350:63:0;;4803:2:1;2350:63:0;;;4785:21:1;4842:2;4822:18;;;4815:30;4881:33;4861:18;;;4854:61;4932:18;;2350:63:0;4601:355:1;2350:63:0;1777:1;2488:7;:18;46008:10:::1;45997:21:::0;::::1;;45989:54;;;::::0;-1:-1:-1;;;45989:54:0;;6027:2:1;45989:54:0::1;::::0;::::1;6009:21:1::0;6066:2;6046:18;;;6039:30;-1:-1:-1;;;6085:18:1;;;6078:50;6145:18;;45989:54:0::1;5825:344:1::0;45989:54:0::1;46061:8;::::0;::::1;;46053:36;;;::::0;-1:-1:-1;;;46053:36:0;;6376:2:1;46053:36:0::1;::::0;::::1;6358:21:1::0;6415:2;6395:18;;;6388:30;-1:-1:-1;;;6434:18:1;;;6427:45;6489:18;;46053:36:0::1;6174:339:1::0;46053:36:0::1;46107:4;::::0;:26:::1;::::0;-1:-1:-1;;;46107:26:0;;46122:10:::1;46107:26;::::0;::::1;2858:51:1::0;46137:7:0;;46107:4:::1;::::0;::::1;-1:-1:-1::0;;;;;46107:4:0::1;::::0;:14:::1;::::0;2831:18:1;;46107:26:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;46099:70;;;::::0;-1:-1:-1;;;46099:70:0;;6720:2:1;46099:70:0::1;::::0;::::1;6702:21:1::0;6759:2;6739:18;;;6732:30;-1:-1:-1;;;6778:18:1;;;6771:50;6838:18;;46099:70:0::1;6518:344:1::0;46099:70:0::1;46179:17;46199:19;:7:::0;46211:6:::1;46199:11;:19::i;:::-;46179:39;;46228:17;46248:34;46272:9;;46248:19;46262:4;46248:9;:13;;:19;;;;:::i;:34::-;46228:54;;46346:7;;46309:33;46332:9;46309:4;-1:-1:-1::0;;;;;46309:16:0::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:22:::0;::::1;:33::i;:::-;:44;;46301:70;;;::::0;-1:-1:-1;;;46301:70:0;;7069:2:1;46301:70:0::1;::::0;::::1;7051:21:1::0;7108:2;7088:18;;;7081:30;-1:-1:-1;;;7127:18:1;;;7120:43;7180:18;;46301:70:0::1;6867:337:1::0;46301:70:0::1;46425:10;46416:20;::::0;;;:8:::1;:20;::::0;;;;:32;:47:::1;::::0;46453:9;46416:36:::1;:47::i;:::-;46390:10;46381:20;::::0;;;:8:::1;:20;::::0;;;;:82;;;46516:15:::1;46473:40;::::0;::::1;:58:::0;46575:13:::1;::::0;46541:31:::1;::::0;;::::1;:47:::0;46599:31:::1;46613:4;46620:9:::0;46599:5:::1;:31::i;:::-;46640:4;::::0;:57:::1;::::0;:4:::1;::::0;::::1;-1:-1:-1::0;;;;;46640:4:0::1;46662:10;46682:4;46689:7:::0;46640:21:::1;:57::i;38023:427::-:0;38116:4;20875:10;38116:4;38197:25;20875:10;38214:7;38197:9;:25::i;:::-;38170:52;;38260:15;38240:16;:35;;38232:85;;;;-1:-1:-1;;;38232:85:0;;7411:2:1;38232:85:0;;;7393:21:1;7450:2;7430:18;;;7423:30;7489:34;7469:18;;;7462:62;-1:-1:-1;;;7540:18:1;;;7533:35;7585:19;;38232:85:0;7209:401:1;38232:85:0;38351:60;38360:5;38367:7;38395:15;38376:16;:34;38351:8;:60::i;:::-;-1:-1:-1;38439:4:0;;38023:427;-1:-1:-1;;;;38023:427:0:o;35158:189::-;35237:4;20875:10;35291:28;20875:10;35308:2;35312:6;35291:9;:28::i;35405:149::-;-1:-1:-1;;;;;35520:18:0;;;35494:7;35520:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;35405:149::o;45693:93::-;22086:13;:11;:13::i;:::-;45759:8:::1;:20:::0;;-1:-1:-1;;45759:20:0::1;::::0;::::1;;::::0;;;::::1;::::0;;45693:93::o;47568:129::-;47625:7;47659:31;47671:4;-1:-1:-1;;;;;47671:16:0;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;47659:7;;;:11;:31::i;:::-;47652:38;;47568:129;:::o;23073:198::-;22086:13;:11;:13::i;:::-;-1:-1:-1;;;;;23161:22:0;::::1;23153:73;;;::::0;-1:-1:-1;;;23153:73:0;;7817:2:1;23153:73:0::1;::::0;::::1;7799:21:1::0;7856:2;7836:18;;;7829:30;7895:34;7875:18;;;7868:62;-1:-1:-1;;;7946:18:1;;;7939:36;7992:19;;23153:73:0::1;7615:402:1::0;23153:73:0::1;23236:28;23255:8;23236:18;:28::i;44921:175::-:0;22086:13;:11;:13::i;:::-;45014:9:::1;;45000:10;:23;;44992:65;;;::::0;-1:-1:-1;;;44992:65:0;;8224:2:1;44992:65:0::1;::::0;::::1;8206:21:1::0;8263:2;8243:18;;;8236:30;8302:31;8282:18;;;8275:59;8351:18;;44992:65:0::1;8022:353:1::0;44992:65:0::1;45067:9;:22:::0;44921:175::o;41539:370::-;-1:-1:-1;;;;;41670:19:0;;41662:68;;;;-1:-1:-1;;;41662:68:0;;8582:2:1;41662:68:0;;;8564:21:1;8621:2;8601:18;;;8594:30;8660:34;8640:18;;;8633:62;-1:-1:-1;;;8711:18:1;;;8704:34;8755:19;;41662:68:0;8380:400:1;41662:68:0;-1:-1:-1;;;;;41748:21:0;;41740:68;;;;-1:-1:-1;;;41740:68:0;;8987:2:1;41740:68:0;;;8969:21:1;9026:2;9006:18;;;8999:30;9065:34;9045:18;;;9038:62;-1:-1:-1;;;9116:18:1;;;9109:32;9158:19;;41740:68:0;8785:398:1;41740:68:0;-1:-1:-1;;;;;41819:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;41870:32;;1440:25:1;;;41870:32:0;;1413:18:1;41870:32:0;;;;;;;;41539:370;;;:::o;5843:96::-;5901:7;5927:5;5931:1;5927;:5;:::i;42190:441::-;42320:24;42347:25;42357:5;42364:7;42347:9;:25::i;:::-;42320:52;;-1:-1:-1;;42386:16:0;:37;42382:243;;42467:6;42447:16;:26;;42439:68;;;;-1:-1:-1;;;42439:68:0;;9520:2:1;42439:68:0;;;9502:21:1;9559:2;9539:18;;;9532:30;9598:31;9578:18;;;9571:59;9647:18;;42439:68:0;9318:353:1;42439:68:0;42549:51;42558:5;42565:7;42593:6;42574:16;:25;42549:8;:51::i;:::-;42310:321;42190:441;;;:::o;38904:651::-;-1:-1:-1;;;;;39030:18:0;;39022:68;;;;-1:-1:-1;;;39022:68:0;;9878:2:1;39022:68:0;;;9860:21:1;9917:2;9897:18;;;9890:30;9956:34;9936:18;;;9929:62;-1:-1:-1;;;10007:18:1;;;10000:35;10052:19;;39022:68:0;9676:401:1;39022:68:0;-1:-1:-1;;;;;39108:16:0;;39100:64;;;;-1:-1:-1;;;39100:64:0;;10284:2:1;39100:64:0;;;10266:21:1;10323:2;10303:18;;;10296:30;10362:34;10342:18;;;10335:62;-1:-1:-1;;;10413:18:1;;;10406:33;10456:19;;39100:64:0;10082:399:1;39100:64:0;-1:-1:-1;;;;;39246:15:0;;39224:19;39246:15;;;;;;;;;;;39279:21;;;;39271:72;;;;-1:-1:-1;;;39271:72:0;;10688:2:1;39271:72:0;;;10670:21:1;10727:2;10707:18;;;10700:30;10766:34;10746:18;;;10739:62;-1:-1:-1;;;10817:18:1;;;10810:36;10863:19;;39271:72:0;10486:402:1;39271:72:0;-1:-1:-1;;;;;39377:15:0;;;:9;:15;;;;;;;;;;;39395:20;;;39377:38;;39435:13;;;;;;;;:23;;39409:6;;39377:9;39435:23;;39409:6;;39435:23;:::i;:::-;;;;;;;;39489:2;-1:-1:-1;;;;;39474:26:0;39483:4;-1:-1:-1;;;;;39474:26:0;;39493:6;39474:26;;;;1440:25:1;;1428:2;1413:18;;1294:177;39474:26:0;;;;;;;;39511:37;40540:576;22351:130;22265:6;;-1:-1:-1;;;;;22265:6:0;20875:10;22414:23;22406:68;;;;-1:-1:-1;;;22406:68:0;;11095:2:1;22406:68:0;;;11077:21:1;;;11114:18;;;11107:30;11173:34;11153:18;;;11146:62;11225:18;;22406:68:0;10893:356:1;40540:576:0;-1:-1:-1;;;;;40623:21:0;;40615:67;;;;-1:-1:-1;;;40615:67:0;;11456:2:1;40615:67:0;;;11438:21:1;11495:2;11475:18;;;11468:30;11534:34;11514:18;;;11507:62;-1:-1:-1;;;11585:18:1;;;11578:31;11626:19;;40615:67:0;11254:397:1;40615:67:0;-1:-1:-1;;;;;40778:18:0;;40753:22;40778:18;;;;;;;;;;;40814:24;;;;40806:71;;;;-1:-1:-1;;;40806:71:0;;11858:2:1;40806:71:0;;;11840:21:1;11897:2;11877:18;;;11870:30;11936:34;11916:18;;;11909:62;-1:-1:-1;;;11987:18:1;;;11980:32;12029:19;;40806:71:0;11656:398:1;40806:71:0;-1:-1:-1;;;;;40911:18:0;;:9;:18;;;;;;;;;;40932:23;;;40911:44;;40975:12;:22;;40949:6;;40911:9;40975:22;;40949:6;;40975:22;:::i;:::-;;;;-1:-1:-1;;41013:37:0;;1440:25:1;;;41039:1:0;;-1:-1:-1;;;;;41013:37:0;;;;;1428:2:1;1413:18;41013:37:0;1294:177:1;41061:48:0;40605:511;40540:576;;:::o;27102:205::-;27241:58;;-1:-1:-1;;;;;5488:32:1;;27241:58:0;;;5470:51:1;5537:18;;;5530:34;;;27214:86:0;;27234:5;;-1:-1:-1;;;27264:23:0;5443:18:1;;27241:58:0;;;;-1:-1:-1;;27241:58:0;;;;;;;;;;;;;;-1:-1:-1;;;;;27241:58:0;-1:-1:-1;;;;;;27241:58:0;;;;;;;;;;27214:19;:86::i;6186:96::-;6244:7;6270:5;6274:1;6270;:5;:::i;6571:96::-;6629:7;6655:5;6659:1;6655;:5;:::i;23425:187::-;23517:6;;;-1:-1:-1;;;;;23533:17:0;;;-1:-1:-1;;;;;;23533:17:0;;;;;;;23565:40;;23517:6;;;23533:17;23517:6;;23565:40;;23498:16;;23565:40;23488:124;23425:187;:::o;5476:96::-;5534:7;5560:5;5564:1;5560;:5;:::i;39831:389::-;-1:-1:-1;;;;;39914:21:0;;39906:65;;;;-1:-1:-1;;;39906:65:0;;12656:2:1;39906:65:0;;;12638:21:1;12695:2;12675:18;;;12668:30;12734:33;12714:18;;;12707:61;12785:18;;39906:65:0;12454:355:1;39906:65:0;40058:6;40042:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;40074:18:0;;:9;:18;;;;;;;;;;:28;;40096:6;;40074:9;:28;;40096:6;;40074:28;:::i;:::-;;;;-1:-1:-1;;40117:37:0;;1440:25:1;;;-1:-1:-1;;;;;40117:37:0;;;40134:1;;40117:37;;1428:2:1;1413:18;40117:37:0;;;;;;;39831:389;;:::o;27313:241::-;27478:68;;-1:-1:-1;;;;;13072:15:1;;;27478:68:0;;;13054:34:1;13124:15;;13104:18;;;13097:43;13156:18;;;13149:34;;;27451:96:0;;27471:5;;-1:-1:-1;;;27501:27:0;12989:18:1;;27478:68:0;12814:375:1;30086:706:0;30505:23;30531:69;30559:4;30531:69;;;;;;;;;;;;;;;;;30539:5;-1:-1:-1;;;;;30531:27:0;;;:69;;;;;:::i;:::-;30614:17;;30505:95;;-1:-1:-1;30614:21:0;30610:176;;30709:10;30698:30;;;;;;;;;;;;:::i;:::-;30690:85;;;;-1:-1:-1;;;30690:85:0;;13396:2:1;30690:85:0;;;13378:21:1;13435:2;13415:18;;;13408:30;13474:34;13454:18;;;13447:62;-1:-1:-1;;;13525:18:1;;;13518:40;13575:19;;30690:85:0;13194:406:1;13387:223:0;13520:12;13551:52;13573:6;13581:4;13587:1;13590:12;13520;-1:-1:-1;;;;;10991:19:0;;;14754:60;;;;-1:-1:-1;;;14754:60:0;;14214:2:1;14754:60:0;;;14196:21:1;14253:2;14233:18;;;14226:30;14292:31;14272:18;;;14265:59;14341:18;;14754:60:0;14012:353:1;14754:60:0;14826:12;14840:23;14867:6;-1:-1:-1;;;;;14867:11:0;14886:5;14893:4;14867:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14825:73;;;;14915:51;14932:7;14941:10;14953:12;14915:16;:51::i;:::-;14908:58;14474:499;-1:-1:-1;;;;;;;14474:499:0:o;17087:742::-;17233:12;17261:7;17257:566;;;-1:-1:-1;17291:10:0;17284:17;;17257:566;17402:17;;:21;17398:415;;17646:10;17640:17;17706:15;17693:10;17689:2;17685:19;17678:44;17398:415;17785:12;17778:20;;-1:-1:-1;;;17778:20:0;;;;;;;;:::i;14:258:1:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:1;244:16;;237:27;14:258::o;277:383::-;426:2;415:9;408:21;389:4;458:6;452:13;501:6;496:2;485:9;481:18;474:34;517:66;576:6;571:2;560:9;556:18;551:2;543:6;539:15;517:66;:::i;:::-;644:2;623:15;-1:-1:-1;;619:29:1;604:45;;;;651:2;600:54;;277:383;-1:-1:-1;;277:383:1:o;665:173::-;733:20;;-1:-1:-1;;;;;782:31:1;;772:42;;762:70;;828:1;825;818:12;762:70;665:173;;;:::o;843:254::-;911:6;919;972:2;960:9;951:7;947:23;943:32;940:52;;;988:1;985;978:12;940:52;1011:29;1030:9;1011:29;:::i;:::-;1001:39;1087:2;1072:18;;;;1059:32;;-1:-1:-1;;;843:254:1:o;1476:186::-;1535:6;1588:2;1576:9;1567:7;1563:23;1559:32;1556:52;;;1604:1;1601;1594:12;1556:52;1627:29;1646:9;1627:29;:::i;1991:328::-;2068:6;2076;2084;2137:2;2125:9;2116:7;2112:23;2108:32;2105:52;;;2153:1;2150;2143:12;2105:52;2176:29;2195:9;2176:29;:::i;:::-;2166:39;;2224:38;2258:2;2247:9;2243:18;2224:38;:::i;:::-;2214:48;;2309:2;2298:9;2294:18;2281:32;2271:42;;1991:328;;;;;:::o;2513:180::-;2572:6;2625:2;2613:9;2604:7;2600:23;2596:32;2593:52;;;2641:1;2638;2631:12;2593:52;-1:-1:-1;2664:23:1;;2513:180;-1:-1:-1;2513:180:1:o;3128:260::-;3196:6;3204;3257:2;3245:9;3236:7;3232:23;3228:32;3225:52;;;3273:1;3270;3263:12;3225:52;3296:29;3315:9;3296:29;:::i;:::-;3286:39;;3344:38;3378:2;3367:9;3363:18;3344:38;:::i;:::-;3334:48;;3128:260;;;;;:::o;3393:118::-;3479:5;3472:13;3465:21;3458:5;3455:32;3445:60;;3501:1;3498;3491:12;3516:241;3572:6;3625:2;3613:9;3604:7;3600:23;3596:32;3593:52;;;3641:1;3638;3631:12;3593:52;3680:9;3667:23;3699:28;3721:5;3699:28;:::i;3762:380::-;3841:1;3837:12;;;;3884;;;3905:61;;3959:4;3951:6;3947:17;3937:27;;3905:61;4012:2;4004:6;4001:14;3981:18;3978:38;3975:161;;;4058:10;4053:3;4049:20;4046:1;4039:31;4093:4;4090:1;4083:15;4121:4;4118:1;4111:15;3975:161;;3762:380;;;:::o;4147:127::-;4208:10;4203:3;4199:20;4196:1;4189:31;4239:4;4236:1;4229:15;4263:4;4260:1;4253:15;4279:128;4319:3;4350:1;4346:6;4343:1;4340:13;4337:39;;;4356:18;;:::i;:::-;-1:-1:-1;4392:9:1;;4279:128::o;4412:184::-;4482:6;4535:2;4523:9;4514:7;4510:23;4506:32;4503:52;;;4551:1;4548;4541:12;4503:52;-1:-1:-1;4574:16:1;;4412:184;-1:-1:-1;4412:184:1:o;5575:245::-;5642:6;5695:2;5683:9;5674:7;5670:23;5666:32;5663:52;;;5711:1;5708;5701:12;5663:52;5743:9;5737:16;5762:28;5784:5;5762:28;:::i;9188:125::-;9228:4;9256:1;9253;9250:8;9247:34;;;9261:18;;:::i;:::-;-1:-1:-1;9298:9:1;;9188:125::o;12059:168::-;12099:7;12165:1;12161;12157:6;12153:14;12150:1;12147:21;12142:1;12135:9;12128:17;12124:45;12121:71;;;12172:18;;:::i;:::-;-1:-1:-1;12212:9:1;;12059:168::o;12232:217::-;12272:1;12298;12288:132;;12342:10;12337:3;12333:20;12330:1;12323:31;12377:4;12374:1;12367:15;12405:4;12402:1;12395:15;12288:132;-1:-1:-1;12434:9:1;;12232:217::o;14370:274::-;14499:3;14537:6;14531:13;14553:53;14599:6;14594:3;14587:4;14579:6;14575:17;14553:53;:::i;:::-;14622:16;;;;;14370:274;-1:-1:-1;;14370:274:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1327600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"USDC()": "2415",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24671",
								"balanceOf(address)": "2586",
								"burn(uint256)": "50906",
								"claim()": "infinite",
								"claimableTokens(address)": "infinite",
								"decimals()": "223",
								"decreaseAllowance(address,uint256)": "27018",
								"increaseAllowance(address,uint256)": "27047",
								"mint(uint256)": "infinite",
								"mintCap()": "2407",
								"mintOpen()": "2422",
								"mintPrice()": "2406",
								"name()": "infinite",
								"owner()": "2420",
								"recoverTreasuryTokens()": "infinite",
								"remainingMintableTokens()": "infinite",
								"remainingVestedTime()": "infinite",
								"renounceOwnership()": "infinite",
								"setMintCap(uint256)": "24578",
								"setMintPrice(uint256)": "26724",
								"setOpenMint(bool)": "26731",
								"setVestingPeriod(uint256)": "24600",
								"symbol()": "infinite",
								"totalSupply()": "2372",
								"transfer(address,uint256)": "51271",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28424",
								"userInfo(address)": "6840",
								"vestingPeriod()": "2385"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 44530,
									"end": 44534,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 44503,
									"end": 44534,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 44503,
									"end": 44534,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 44565,
									"end": 44566,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 44540,
									"end": 44566,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 44540,
									"end": 44566,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 44603,
									"end": 44609,
									"name": "PUSH",
									"source": 0,
									"value": "69780"
								},
								{
									"begin": 44572,
									"end": 44609,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 44572,
									"end": 44609,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 44615,
									"end": 44643,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 44615,
									"end": 44643,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 44615,
									"end": 44643,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 44649,
									"end": 44720,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 44649,
									"end": 44720,
									"name": "PUSH",
									"source": 0,
									"value": "FF970A61A04B1CA14834A43F5DE4533EBDDB5CC800"
								},
								{
									"begin": 44649,
									"end": 44720,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 44649,
									"end": 44720,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44649,
									"end": 44720,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 44184,
									"end": 44258,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 44184,
									"end": 44258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 44184,
									"end": 44258,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 44184,
									"end": 44258,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 44184,
									"end": 44258,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 44184,
									"end": 44258,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 44184,
									"end": 44258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 44184,
									"end": 44258,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 44184,
									"end": 44258,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 44184,
									"end": 44258,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 44184,
									"end": 44258,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "11D351"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "11D351"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33481,
									"end": 33486,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33478,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 33473,
									"end": 33486,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33496,
									"end": 33503,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 33496,
									"end": 33503,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33496,
									"end": 33513,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33407,
									"end": 33520,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21928,
									"end": 21960,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 21947,
									"end": 21959,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 21947,
									"end": 21957,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 21947,
									"end": 21957,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21947,
									"end": 21957,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 21947,
									"end": 21959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21947,
									"end": 21959,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 21947,
									"end": 21959,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 21947,
									"end": 21959,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 21947,
									"end": 21959,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21928,
									"end": 21946,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 21928,
									"end": 21960,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 21928,
									"end": 21960,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 21928,
									"end": 21960,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1839,
									"end": 1846,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1839,
									"end": 1861,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 44208,
									"end": 44251,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 44214,
									"end": 44224,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 44234,
									"end": 44250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34604,
									"end": 34606,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 44234,
									"end": 44236,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 44234,
									"end": 44250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 44234,
									"end": 44250,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 44234,
									"end": 44250,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 44234,
									"end": 44250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 44226,
									"end": 44250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 44226,
									"end": 44250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44226,
									"end": 44231,
									"name": "PUSH",
									"source": 0,
									"value": "C350"
								},
								{
									"begin": 44226,
									"end": 44250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 44226,
									"end": 44250,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 44226,
									"end": 44250,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 44226,
									"end": 44250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 44208,
									"end": 44213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 44208,
									"end": 44251,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 44208,
									"end": 44251,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 44208,
									"end": 44251,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20796,
									"end": 20892,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 20796,
									"end": 20892,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20875,
									"end": 20885,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 20875,
									"end": 20885,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20796,
									"end": 20892,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 23425,
									"end": 23612,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23425,
									"end": 23612,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23517,
									"end": 23523,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 23517,
									"end": 23523,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23517,
									"end": 23523,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 23533,
									"end": 23550,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23533,
									"end": 23550,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23533,
									"end": 23550,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 23533,
									"end": 23550,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23533,
									"end": 23550,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23533,
									"end": 23550,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23533,
									"end": 23550,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 23533,
									"end": 23550,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23533,
									"end": 23550,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 23533,
									"end": 23550,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23565,
									"end": 23605,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23565,
									"end": 23605,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23517,
									"end": 23523,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23517,
									"end": 23523,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23517,
									"end": 23523,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23533,
									"end": 23550,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23517,
									"end": 23523,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23517,
									"end": 23523,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23565,
									"end": 23605,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 23565,
									"end": 23605,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23498,
									"end": 23514,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23498,
									"end": 23514,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23565,
									"end": 23605,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 23488,
									"end": 23612,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23425,
									"end": 23612,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23425,
									"end": 23612,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 39831,
									"end": 40220,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 39831,
									"end": 40220,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 39914,
									"end": 39935,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39914,
									"end": 39935,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1904,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1886,
									"end": 1907,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1943,
									"end": 1945,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1923,
									"end": 1941,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1923,
									"end": 1941,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1923,
									"end": 1941,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1916,
									"end": 1946,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1982,
									"end": 2015,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 1962,
									"end": 1980,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1962,
									"end": 1980,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1980,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1955,
									"end": 2016,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2051,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2033,
									"end": 2051,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 39906,
									"end": 39971,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40058,
									"end": 40064,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40042,
									"end": 40054,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 40042,
									"end": 40054,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40042,
									"end": 40064,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40042,
									"end": 40064,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40042,
									"end": 40064,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 40042,
									"end": 40064,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 40042,
									"end": 40064,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 40042,
									"end": 40064,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40042,
									"end": 40064,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 40042,
									"end": 40064,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 40042,
									"end": 40064,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 40042,
									"end": 40064,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40042,
									"end": 40064,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40042,
									"end": 40064,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 40042,
									"end": 40064,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 40074,
									"end": 40092,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40074,
									"end": 40092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 40074,
									"end": 40083,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40074,
									"end": 40092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40074,
									"end": 40092,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40074,
									"end": 40092,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40074,
									"end": 40092,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40074,
									"end": 40092,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40074,
									"end": 40092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40074,
									"end": 40092,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40074,
									"end": 40092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40074,
									"end": 40092,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40074,
									"end": 40092,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 40074,
									"end": 40102,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40074,
									"end": 40102,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 40096,
									"end": 40102,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 40096,
									"end": 40102,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 40074,
									"end": 40083,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40074,
									"end": 40102,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 40074,
									"end": 40102,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40096,
									"end": 40102,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 40096,
									"end": 40102,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40074,
									"end": 40102,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 40074,
									"end": 40102,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 40074,
									"end": 40102,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 40074,
									"end": 40102,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40074,
									"end": 40102,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40074,
									"end": 40102,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 40074,
									"end": 40102,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 40117,
									"end": 40154,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40117,
									"end": 40154,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2341,
									"end": 2366,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2341,
									"end": 2366,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2341,
									"end": 2366,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 40117,
									"end": 40154,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 40117,
									"end": 40154,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 40117,
									"end": 40154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40134,
									"end": 40135,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40134,
									"end": 40135,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40117,
									"end": 40154,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 40117,
									"end": 40154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2329,
									"end": 2331,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2314,
									"end": 2332,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 40117,
									"end": 40154,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40117,
									"end": 40154,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40117,
									"end": 40154,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40117,
									"end": 40154,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 40117,
									"end": 40154,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 40117,
									"end": 40154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40117,
									"end": 40154,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 39831,
									"end": 40220,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39831,
									"end": 40220,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39831,
									"end": 40220,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "tag",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "tag",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 568,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 146,
									"end": 568,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 235,
									"end": 236,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 235,
									"end": 236,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 292,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 313,
									"end": 320,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 303,
									"end": 311,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 300,
									"end": 321,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 292,
									"end": 562,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 292,
									"end": 562,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 372,
									"end": 376,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 368,
									"end": 369,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 370,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 360,
									"end": 377,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 354,
									"end": 358,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 351,
									"end": 378,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 348,
									"end": 401,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 348,
									"end": 401,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 348,
									"end": 401,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 381,
									"end": 399,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 431,
									"end": 438,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 421,
									"end": 429,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 417,
									"end": 439,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 414,
									"end": 469,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 414,
									"end": 469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 414,
									"end": 469,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 451,
									"end": 467,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 451,
									"end": 467,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 451,
									"end": 467,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 451,
									"end": 467,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 414,
									"end": 469,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 414,
									"end": 469,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 530,
									"end": 552,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 490,
									"end": 505,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 490,
									"end": 505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 490,
									"end": 505,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 490,
									"end": 505,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 292,
									"end": 562,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 292,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 296,
									"end": 299,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 146,
									"end": 568,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 568,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 568,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 622,
									"end": 627,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 652,
									"end": 660,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 642,
									"end": 722,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 642,
									"end": 722,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 693,
									"end": 694,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 707,
									"end": 712,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 642,
									"end": 722,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 642,
									"end": 722,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 741,
									"end": 745,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 731,
									"end": 807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 731,
									"end": 807,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 778,
									"end": 779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 792,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 792,
									"end": 797,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 731,
									"end": 807,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 731,
									"end": 807,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 823,
									"end": 827,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 841,
									"end": 842,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 836,
									"end": 895,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 836,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 909,
									"end": 910,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 836,
									"end": 895,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 866,
									"end": 867,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 857,
									"end": 867,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 857,
									"end": 867,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 880,
									"end": 885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 880,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 880,
									"end": 885,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 941,
									"end": 944,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 931,
									"end": 939,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 928,
									"end": 945,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 925,
									"end": 968,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 925,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 925,
									"end": 968,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 948,
									"end": 966,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1004,
									"end": 1005,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 990,
									"end": 1006,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 990,
									"end": 1006,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1120,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1116,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1121,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1099,
									"end": 1102,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 1093,
									"end": 1097,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1103,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1122,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1080,
									"end": 1082,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 1070,
									"end": 1078,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1067,
									"end": 1083,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1062,
									"end": 1064,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 1056,
									"end": 1060,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1053,
									"end": 1065,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1084,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1123,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 1259,
									"end": 1267,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1253,
									"end": 1257,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1310,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1300,
									"end": 1301,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1296,
									"end": 1302,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1311,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1283,
									"end": 1290,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1280,
									"end": 1312,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1353,
									"end": 1373,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1353,
									"end": 1373,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1384,
									"end": 1524,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1384,
									"end": 1524,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1442,
									"end": 1447,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1471,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1512,
									"end": 1516,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1502,
									"end": 1510,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1517,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1492,
									"end": 1496,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1471,
									"end": 1518,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1471,
									"end": 1518,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1471,
									"end": 1518,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1518,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1524,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1384,
									"end": 1524,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1529,
									"end": 1697,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1529,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1569,
									"end": 1576,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1631,
									"end": 1632,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1627,
									"end": 1633,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1637,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1620,
									"end": 1621,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1617,
									"end": 1638,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1612,
									"end": 1613,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1614,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1598,
									"end": 1615,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1594,
									"end": 1639,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1591,
									"end": 1662,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1591,
									"end": 1662,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1591,
									"end": 1662,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1682,
									"end": 1691,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1682,
									"end": 1691,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1697,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2062,
									"end": 2190,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 2062,
									"end": 2190,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2102,
									"end": 2105,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2133,
									"end": 2134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2129,
									"end": 2135,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2126,
									"end": 2127,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2136,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2120,
									"end": 2159,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2120,
									"end": 2159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 2120,
									"end": 2159,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2139,
									"end": 2157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 2139,
									"end": 2157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2139,
									"end": 2157,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2139,
									"end": 2157,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 2139,
									"end": 2157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2175,
									"end": 2184,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2175,
									"end": 2184,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2190,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2377,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2377,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2456,
									"end": 2457,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2499,
									"end": 2511,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2499,
									"end": 2511,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2499,
									"end": 2511,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2581,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 2520,
									"end": 2581,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2574,
									"end": 2578,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 2566,
									"end": 2572,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2562,
									"end": 2579,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2552,
									"end": 2579,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2552,
									"end": 2579,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2581,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 2520,
									"end": 2581,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2627,
									"end": 2629,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2619,
									"end": 2625,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2616,
									"end": 2630,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2596,
									"end": 2614,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2593,
									"end": 2631,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2590,
									"end": 2751,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2590,
									"end": 2751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 2590,
									"end": 2751,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2673,
									"end": 2683,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2668,
									"end": 2671,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2664,
									"end": 2684,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2661,
									"end": 2662,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2654,
									"end": 2685,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2708,
									"end": 2712,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2705,
									"end": 2706,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2698,
									"end": 2713,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2736,
									"end": 2740,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2733,
									"end": 2734,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2726,
									"end": 2741,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2590,
									"end": 2751,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 2590,
									"end": 2751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2590,
									"end": 2751,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2757,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2757,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2757,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2377,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2377,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 44114,
									"end": 48054,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122011b4057e1857069e76caddf6789f50e832c698b64594ca5d7a526ca80a460b7d64736f6c634300080c0033",
									".code": [
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "E2AF30F4"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "E2AF30F4"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "E2E5C15C"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "F4A0A528"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "84D24226"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "84D24226"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "89A30271"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "7313EE5A"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "76C71CA1"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "4E274514"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "4E71D92D"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "6817C76C"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "4070A0C9"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "40BEE0ED"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "1959A002"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "1959A002"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "20F203D9"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "24BBD049"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44114,
											"end": 48054,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1281,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1282,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1102,
											"end": 1289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34673,
											"end": 34779,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34673,
											"end": 34779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34760,
											"end": 34772,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34760,
											"end": 34772,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34673,
											"end": 34779,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 34673,
											"end": 34779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34673,
											"end": 34779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34673,
											"end": 34779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1413,
											"end": 1431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34673,
											"end": 34779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1294,
											"end": 1471,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1869,
											"end": 1894,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1894,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1937,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1937,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1980,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1857,
											"end": 1859,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44452,
											"end": 44496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1667,
											"end": 1986,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 47703,
											"end": 48051,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 47703,
											"end": 48051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47703,
											"end": 48051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 47703,
											"end": 48051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 47703,
											"end": 48051,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44615,
											"end": 44643,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 44615,
											"end": 44643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44615,
											"end": 44643,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 44615,
											"end": 44643,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44615,
											"end": 44643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 44615,
											"end": 44643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44615,
											"end": 44643,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 44615,
											"end": 44643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44615,
											"end": 44643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44615,
											"end": 44643,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34522,
											"end": 34613,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 34522,
											"end": 34613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34522,
											"end": 34613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34522,
											"end": 34613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34604,
											"end": 34606,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2466,
											"end": 2502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2454,
											"end": 2456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2439,
											"end": 2457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34522,
											"end": 34613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2324,
											"end": 2508,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 45102,
											"end": 45204,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 45102,
											"end": 45204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45102,
											"end": 45204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 45102,
											"end": 45204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 45102,
											"end": 45204,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 45102,
											"end": 45204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45102,
											"end": 45204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 45102,
											"end": 45204,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45102,
											"end": 45204,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 45102,
											"end": 45204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45102,
											"end": 45204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 45102,
											"end": 45204,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44728,
											"end": 44812,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 44728,
											"end": 44812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44728,
											"end": 44812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 44728,
											"end": 44812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 44728,
											"end": 44812,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44728,
											"end": 44812,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44728,
											"end": 44812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 44728,
											"end": 44812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44728,
											"end": 44812,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 44728,
											"end": 44812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44728,
											"end": 44812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 44728,
											"end": 44812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45792,
											"end": 45918,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 45792,
											"end": 45918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45792,
											"end": 45918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 45792,
											"end": 45918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 45792,
											"end": 45918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46710,
											"end": 47562,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 46710,
											"end": 47562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46710,
											"end": 47562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 46710,
											"end": 47562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 46710,
											"end": 47562,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44503,
											"end": 44534,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 44503,
											"end": 44534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44503,
											"end": 44534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 44503,
											"end": 44534,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 44503,
											"end": 44534,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44503,
											"end": 44534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44503,
											"end": 44534,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34911,
											"end": 34918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34937,
											"end": 34955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 34962,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22823,
											"end": 22924,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22823,
											"end": 22924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22823,
											"end": 22924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22823,
											"end": 22924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 22823,
											"end": 22924,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44572,
											"end": 44609,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44572,
											"end": 44609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44572,
											"end": 44609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 44572,
											"end": 44609,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 44572,
											"end": 44609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44572,
											"end": 44609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44572,
											"end": 44609,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44540,
											"end": 44566,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 44540,
											"end": 44566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44540,
											"end": 44566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 44540,
											"end": 44566,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 44540,
											"end": 44566,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44540,
											"end": 44566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44540,
											"end": 44566,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45210,
											"end": 45686,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 45210,
											"end": 45686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45210,
											"end": 45686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 45210,
											"end": 45686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 45210,
											"end": 45686,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 45210,
											"end": 45686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45210,
											"end": 45686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 45210,
											"end": 45686,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45210,
											"end": 45686,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 45210,
											"end": 45686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45210,
											"end": 45686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 45210,
											"end": 45686,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44649,
											"end": 44720,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 44649,
											"end": 44720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44649,
											"end": 44720,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 44649,
											"end": 44720,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44649,
											"end": 44720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 44649,
											"end": 44720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44649,
											"end": 44720,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 44649,
											"end": 44720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44649,
											"end": 44720,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44649,
											"end": 44720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44649,
											"end": 44720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44649,
											"end": 44720,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44649,
											"end": 44720,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 44649,
											"end": 44720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44649,
											"end": 44720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44649,
											"end": 44720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2876,
											"end": 2908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2908,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2848,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2831,
											"end": 2849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44649,
											"end": 44720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2698,
											"end": 2915,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22193,
											"end": 22278,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22193,
											"end": 22278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22265,
											"end": 22271,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22265,
											"end": 22271,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22265,
											"end": 22271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22193,
											"end": 22278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 22193,
											"end": 22278,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33796,
											"end": 33898,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 33796,
											"end": 33898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33796,
											"end": 33898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 33796,
											"end": 33898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 33796,
											"end": 33898,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45925,
											"end": 46704,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 45925,
											"end": 46704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45925,
											"end": 46704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 45925,
											"end": 46704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 45925,
											"end": 46704,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 45925,
											"end": 46704,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45925,
											"end": 46704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 45925,
											"end": 46704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45925,
											"end": 46704,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 45925,
											"end": 46704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45925,
											"end": 46704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 45925,
											"end": 46704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45693,
											"end": 45786,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 45693,
											"end": 45786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45693,
											"end": 45786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 45693,
											"end": 45786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 45693,
											"end": 45786,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 45693,
											"end": 45786,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45693,
											"end": 45786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 45693,
											"end": 45786,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45693,
											"end": 45786,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 45693,
											"end": 45786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45693,
											"end": 45786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 45693,
											"end": 45786,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47568,
											"end": 47697,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 47568,
											"end": 47697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47568,
											"end": 47697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 47568,
											"end": 47697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 47568,
											"end": 47697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23073,
											"end": 23271,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 23073,
											"end": 23271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23073,
											"end": 23271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23073,
											"end": 23271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 23073,
											"end": 23271,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23073,
											"end": 23271,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23073,
											"end": 23271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 23073,
											"end": 23271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23073,
											"end": 23271,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 23073,
											"end": 23271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23073,
											"end": 23271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 23073,
											"end": 23271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44921,
											"end": 45096,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 44921,
											"end": 45096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44921,
											"end": 45096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 44921,
											"end": 45096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 44921,
											"end": 45096,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44921,
											"end": 45096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44921,
											"end": 45096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 44921,
											"end": 45096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44921,
											"end": 45096,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 44921,
											"end": 45096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44921,
											"end": 45096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 44921,
											"end": 45096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33639,
											"end": 33652,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 33671,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33664,
											"end": 33676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33683,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35945,
											"end": 35949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35999,
											"end": 36031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36015,
											"end": 36022,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36024,
											"end": 36030,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35999,
											"end": 36007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 35999,
											"end": 36031,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35999,
											"end": 36031,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 35999,
											"end": 36031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36048,
											"end": 36052,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36048,
											"end": 36052,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35862,
											"end": 36059,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 47703,
											"end": 48051,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 47703,
											"end": 48051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47822,
											"end": 47832,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 47756,
											"end": 47763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47813,
											"end": 47833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47813,
											"end": 47833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47813,
											"end": 47833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47813,
											"end": 47821,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 47813,
											"end": 47833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47813,
											"end": 47833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47813,
											"end": 47833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47813,
											"end": 47833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47813,
											"end": 47833,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47813,
											"end": 47853,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47813,
											"end": 47853,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47813,
											"end": 47853,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47756,
											"end": 47763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47756,
											"end": 47763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47793,
											"end": 47854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 47793,
											"end": 47854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47793,
											"end": 47808,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 47793,
											"end": 47808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47793,
											"end": 47812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 47793,
											"end": 47854,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47793,
											"end": 47854,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 47793,
											"end": 47854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47889,
											"end": 47899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 47880,
											"end": 47900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47880,
											"end": 47900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47880,
											"end": 47900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47880,
											"end": 47900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47880,
											"end": 47888,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 47880,
											"end": 47900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47880,
											"end": 47900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47880,
											"end": 47900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47880,
											"end": 47900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47880,
											"end": 47900,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47880,
											"end": 47911,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 47880,
											"end": 47911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47880,
											"end": 47911,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47774,
											"end": 47854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47774,
											"end": 47854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47868,
											"end": 47911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47868,
											"end": 47911,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 47864,
											"end": 48036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 47864,
											"end": 48036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47933,
											"end": 47934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47926,
											"end": 47934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47926,
											"end": 47934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47926,
											"end": 47934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47703,
											"end": 48051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47703,
											"end": 48051,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 47864,
											"end": 48036,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 47864,
											"end": 48036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47989,
											"end": 47999,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 47980,
											"end": 48000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47980,
											"end": 48000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47980,
											"end": 48000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47980,
											"end": 48000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47980,
											"end": 47988,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 47980,
											"end": 48000,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47980,
											"end": 48000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47980,
											"end": 48000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47980,
											"end": 48000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47980,
											"end": 48000,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47980,
											"end": 48011,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 47980,
											"end": 48011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47980,
											"end": 48011,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47980,
											"end": 48025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 47980,
											"end": 48025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48016,
											"end": 48024,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47980,
											"end": 48015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 47980,
											"end": 48025,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47980,
											"end": 48025,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 47980,
											"end": 48025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47973,
											"end": 48025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47973,
											"end": 48025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47973,
											"end": 48025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47703,
											"end": 48051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47703,
											"end": 48051,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36804,
											"end": 36842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 36820,
											"end": 36824,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36835,
											"end": 36841,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36804,
											"end": 36819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 36804,
											"end": 36842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36804,
											"end": 36842,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 36804,
											"end": 36842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36852,
											"end": 36879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 36862,
											"end": 36866,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36868,
											"end": 36870,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36872,
											"end": 36878,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36852,
											"end": 36861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 36852,
											"end": 36879,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36852,
											"end": 36879,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 36852,
											"end": 36879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36900,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36889,
											"end": 36900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36621,
											"end": 36907,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 37302,
											"end": 37536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37390,
											"end": 37394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37444,
											"end": 37508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37467,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37497,
											"end": 37507,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37469,
											"end": 37494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37467,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37469,
											"end": 37478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 37469,
											"end": 37494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37469,
											"end": 37494,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 37469,
											"end": 37494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37469,
											"end": 37507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 37469,
											"end": 37507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37469,
											"end": 37507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37469,
											"end": 37507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 37469,
											"end": 37507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37469,
											"end": 37507,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 37469,
											"end": 37507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37444,
											"end": 37452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 37444,
											"end": 37508,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 22086,
											"end": 22097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44885,
											"end": 44892,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 44885,
											"end": 44903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44818,
											"end": 44910,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 45102,
											"end": 45204,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 45102,
											"end": 45204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 22086,
											"end": 22097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45174,
											"end": 45187,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 45174,
											"end": 45197,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45102,
											"end": 45204,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 44728,
											"end": 44812,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 44728,
											"end": 44812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44779,
											"end": 44805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 44785,
											"end": 44795,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44779,
											"end": 44784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 44779,
											"end": 44805,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44779,
											"end": 44805,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 44779,
											"end": 44805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44728,
											"end": 44812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44728,
											"end": 44812,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 45792,
											"end": 45918,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 45792,
											"end": 45918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 22086,
											"end": 22097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45854,
											"end": 45911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 45872,
											"end": 45879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 22265,
											"end": 22271,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22265,
											"end": 22271,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22265,
											"end": 22271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22265,
											"end": 22271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22193,
											"end": 22278,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45872,
											"end": 45879,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 45872,
											"end": 45879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45885,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 45881,
											"end": 45885,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45904,
											"end": 45908,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 45881,
											"end": 45885,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 45881,
											"end": 45885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45885,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45881,
											"end": 45885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45895,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 45881,
											"end": 45895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2849,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2831,
											"end": 2849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 45881,
											"end": 45910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45854,
											"end": 45858,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 45854,
											"end": 45858,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45854,
											"end": 45858,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 45854,
											"end": 45858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45854,
											"end": 45858,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45854,
											"end": 45858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45854,
											"end": 45858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45854,
											"end": 45858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45854,
											"end": 45871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 45854,
											"end": 45911,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45854,
											"end": 45911,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 45854,
											"end": 45911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45792,
											"end": 45918,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 46710,
											"end": 47562,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 46710,
											"end": 47562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1778,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2358,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2358,
											"end": 2365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4805,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4844,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4815,
											"end": 4845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4881,
											"end": 4914,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4932,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1778,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2488,
											"end": 2506,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46777,
											"end": 46787,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 46803,
											"end": 46804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46768,
											"end": 46788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46768,
											"end": 46788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46768,
											"end": 46788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46768,
											"end": 46776,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 46768,
											"end": 46788,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46768,
											"end": 46788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46768,
											"end": 46788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46768,
											"end": 46788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46768,
											"end": 46788,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46768,
											"end": 46800,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46760,
											"end": 46816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 46760,
											"end": 46816,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46760,
											"end": 46816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46760,
											"end": 46816,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46760,
											"end": 46816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46760,
											"end": 46816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5163,
											"end": 5165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 46760,
											"end": 46816,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46760,
											"end": 46816,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46760,
											"end": 46816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5202,
											"end": 5203,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5182,
											"end": 5200,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5182,
											"end": 5200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5175,
											"end": 5204,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BC81B5A5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5267,
											"end": 5285,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5267,
											"end": 5285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46760,
											"end": 46816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4961,
											"end": 5291,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46760,
											"end": 46816,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 46760,
											"end": 46816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46874,
											"end": 46884,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 46826,
											"end": 46842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46865,
											"end": 46885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46865,
											"end": 46885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46865,
											"end": 46885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46865,
											"end": 46873,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 46865,
											"end": 46885,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46865,
											"end": 46885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46865,
											"end": 46885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46865,
											"end": 46885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46865,
											"end": 46885,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46865,
											"end": 46905,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46865,
											"end": 46905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46865,
											"end": 46905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46845,
											"end": 46906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 46845,
											"end": 46906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46845,
											"end": 46860,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 46845,
											"end": 46860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46845,
											"end": 46864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 46845,
											"end": 46906,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46845,
											"end": 46906,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 46845,
											"end": 46906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46968,
											"end": 46978,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 46916,
											"end": 46933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46959,
											"end": 46979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46959,
											"end": 46979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46959,
											"end": 46979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46959,
											"end": 46967,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 46959,
											"end": 46979,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46959,
											"end": 46979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46959,
											"end": 46979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46959,
											"end": 46979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46959,
											"end": 46979,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46959,
											"end": 46990,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46959,
											"end": 46990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46959,
											"end": 46990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46826,
											"end": 46906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46826,
											"end": 46906,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46916,
											"end": 46933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46947,
											"end": 46990,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46947,
											"end": 46990,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 46943,
											"end": 47349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 46943,
											"end": 47349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47026,
											"end": 47036,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 47017,
											"end": 47037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47017,
											"end": 47037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47017,
											"end": 47037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47017,
											"end": 47037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47017,
											"end": 47025,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 47017,
											"end": 47037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47017,
											"end": 47037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47017,
											"end": 47037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47017,
											"end": 47037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47017,
											"end": 47037,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47017,
											"end": 47049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47017,
											"end": 47049,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47063,
											"end": 47094,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 47063,
											"end": 47094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47063,
											"end": 47094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47063,
											"end": 47094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47063,
											"end": 47098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47063,
											"end": 47098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47063,
											"end": 47098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47063,
											"end": 47098,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46943,
											"end": 47349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 46943,
											"end": 47349,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46943,
											"end": 47349,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 46943,
											"end": 47349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47209,
											"end": 47219,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 47200,
											"end": 47220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47200,
											"end": 47220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47200,
											"end": 47220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47200,
											"end": 47220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47200,
											"end": 47208,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 47200,
											"end": 47220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47200,
											"end": 47220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47200,
											"end": 47220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47200,
											"end": 47220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47200,
											"end": 47220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47200,
											"end": 47231,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 47200,
											"end": 47231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47200,
											"end": 47231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47200,
											"end": 47231,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47149,
											"end": 47181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47149,
											"end": 47181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47149,
											"end": 47232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 47149,
											"end": 47232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47200,
											"end": 47231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47149,
											"end": 47195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 47149,
											"end": 47195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47186,
											"end": 47194,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47149,
											"end": 47185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 47149,
											"end": 47195,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47149,
											"end": 47195,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 47149,
											"end": 47195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47149,
											"end": 47199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47149,
											"end": 47199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 47149,
											"end": 47232,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47149,
											"end": 47232,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 47149,
											"end": 47232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47289,
											"end": 47299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 47280,
											"end": 47300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47280,
											"end": 47300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47280,
											"end": 47300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47280,
											"end": 47300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47280,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 47280,
											"end": 47300,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47280,
											"end": 47300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47280,
											"end": 47300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47280,
											"end": 47300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47280,
											"end": 47300,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47280,
											"end": 47311,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 47280,
											"end": 47311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47280,
											"end": 47311,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47137,
											"end": 47232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47137,
											"end": 47232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47280,
											"end": 47325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 47280,
											"end": 47325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47316,
											"end": 47324,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47280,
											"end": 47315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 47280,
											"end": 47325,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47280,
											"end": 47325,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 47280,
											"end": 47325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47255,
											"end": 47265,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 47246,
											"end": 47266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47246,
											"end": 47266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47246,
											"end": 47266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47246,
											"end": 47266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47246,
											"end": 47254,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 47246,
											"end": 47266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47246,
											"end": 47266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47246,
											"end": 47266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47246,
											"end": 47266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47246,
											"end": 47266,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47246,
											"end": 47277,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 47246,
											"end": 47277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47246,
											"end": 47325,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46943,
											"end": 47349,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 46943,
											"end": 47349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47402,
											"end": 47412,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 47393,
											"end": 47413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47393,
											"end": 47413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47393,
											"end": 47413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47393,
											"end": 47413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47393,
											"end": 47401,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 47393,
											"end": 47413,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47393,
											"end": 47413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47393,
											"end": 47413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47393,
											"end": 47413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47393,
											"end": 47413,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47393,
											"end": 47425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47393,
											"end": 47440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 47393,
											"end": 47440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47430,
											"end": 47439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47393,
											"end": 47429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 47393,
											"end": 47440,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47393,
											"end": 47440,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 47393,
											"end": 47440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47367,
											"end": 47377,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 47358,
											"end": 47378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47358,
											"end": 47378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47358,
											"end": 47378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47358,
											"end": 47378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47358,
											"end": 47366,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 47358,
											"end": 47378,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47358,
											"end": 47378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47358,
											"end": 47378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47358,
											"end": 47378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47358,
											"end": 47378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47358,
											"end": 47378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47358,
											"end": 47378,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47358,
											"end": 47440,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47358,
											"end": 47440,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47358,
											"end": 47440,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47493,
											"end": 47508,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 47450,
											"end": 47490,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47450,
											"end": 47490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47450,
											"end": 47490,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47450,
											"end": 47490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47450,
											"end": 47508,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47450,
											"end": 47508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47450,
											"end": 47508,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47450,
											"end": 47508,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5555,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5537,
											"end": 5555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 47519,
											"end": 47523,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47532,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 47519,
											"end": 47532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 47519,
											"end": 47555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2661,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2661,
											"end": 2683,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46710,
											"end": 47562,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22823,
											"end": 22924,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 22823,
											"end": 22924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 22086,
											"end": 22097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22887,
											"end": 22917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 22914,
											"end": 22915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22887,
											"end": 22905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 22887,
											"end": 22917,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45210,
											"end": 45686,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 45210,
											"end": 45686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45333,
											"end": 45351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45333,
											"end": 45351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45275,
											"end": 45282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45333,
											"end": 45351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45333,
											"end": 45351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45333,
											"end": 45351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45333,
											"end": 45341,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 45333,
											"end": 45351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45333,
											"end": 45351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45333,
											"end": 45351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45333,
											"end": 45351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45333,
											"end": 45351,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45333,
											"end": 45371,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 45333,
											"end": 45371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45333,
											"end": 45371,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45275,
											"end": 45282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45275,
											"end": 45282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45313,
											"end": 45372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 45313,
											"end": 45372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45313,
											"end": 45328,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 45313,
											"end": 45328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45313,
											"end": 45332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 45313,
											"end": 45372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45313,
											"end": 45372,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 45313,
											"end": 45372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45434,
											"end": 45444,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 45382,
											"end": 45399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45425,
											"end": 45445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45425,
											"end": 45445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45425,
											"end": 45445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45425,
											"end": 45433,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 45425,
											"end": 45445,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45425,
											"end": 45445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45425,
											"end": 45445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45425,
											"end": 45445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45425,
											"end": 45445,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45425,
											"end": 45456,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 45425,
											"end": 45456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45425,
											"end": 45456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45294,
											"end": 45372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45294,
											"end": 45372,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45382,
											"end": 45399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45413,
											"end": 45456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45413,
											"end": 45456,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 45409,
											"end": 45654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 45409,
											"end": 45654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45483,
											"end": 45501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45483,
											"end": 45501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45483,
											"end": 45501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45483,
											"end": 45501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45483,
											"end": 45501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45483,
											"end": 45501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45483,
											"end": 45491,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 45483,
											"end": 45501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45483,
											"end": 45501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45483,
											"end": 45501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45483,
											"end": 45501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45483,
											"end": 45501,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45483,
											"end": 45513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45409,
											"end": 45654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 45409,
											"end": 45654,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45409,
											"end": 45654,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 45409,
											"end": 45654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45613,
											"end": 45631,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45613,
											"end": 45631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45621,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 45613,
											"end": 45631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45613,
											"end": 45631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45613,
											"end": 45631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45631,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45642,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 45613,
											"end": 45642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45642,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 45564,
											"end": 45643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 45564,
											"end": 45608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45599,
											"end": 45607,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 45564,
											"end": 45608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45564,
											"end": 45643,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 45564,
											"end": 45643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45552,
											"end": 45643,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 45670,
											"end": 45679,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45210,
											"end": 45686,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33796,
											"end": 33898,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 33796,
											"end": 33898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33852,
											"end": 33865,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 33884,
											"end": 33891,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33877,
											"end": 33891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33877,
											"end": 33891,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33877,
											"end": 33891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 33877,
											"end": 33891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33877,
											"end": 33891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 33877,
											"end": 33891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45925,
											"end": 46704,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 45925,
											"end": 46704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1778,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2358,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2358,
											"end": 2365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4805,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4844,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4815,
											"end": 4845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4881,
											"end": 4914,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4932,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4601,
											"end": 4956,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1778,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2488,
											"end": 2506,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46008,
											"end": 46018,
											"name": "PUSH",
											"source": 0,
											"value": "77359400"
										},
										{
											"begin": 45997,
											"end": 46018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45997,
											"end": 46018,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 45997,
											"end": 46018,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45989,
											"end": 46043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 45989,
											"end": 46043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45989,
											"end": 46043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45989,
											"end": 46043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45989,
											"end": 46043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45989,
											"end": 46043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6027,
											"end": 6029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 45989,
											"end": 46043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45989,
											"end": 46043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45989,
											"end": 46043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6009,
											"end": 6030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6068,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6046,
											"end": 6064,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6046,
											"end": 6064,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6039,
											"end": 6069,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAC2F0406460606040EAE6C8C640E0CAE440E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6085,
											"end": 6103,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6085,
											"end": 6103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6085,
											"end": 6103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6145,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6145,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 45989,
											"end": 46043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 5825,
											"end": 6169,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 45989,
											"end": 46043,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 45989,
											"end": 46043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46061,
											"end": 46069,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 46061,
											"end": 46069,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46061,
											"end": 46069,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 46061,
											"end": 46069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 46053,
											"end": 46089,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46053,
											"end": 46089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46053,
											"end": 46089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 46053,
											"end": 46089,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46053,
											"end": 46089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6415,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 6395,
											"end": 6413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6395,
											"end": 6413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6395,
											"end": 6413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6388,
											"end": 6418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B5A5B9D081B9BDD081BDC195B9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6427,
											"end": 6472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6507,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6489,
											"end": 6507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46053,
											"end": 46089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6174,
											"end": 6513,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46053,
											"end": 46089,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 46053,
											"end": 46089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 46107,
											"end": 46111,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46122,
											"end": 46132,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 46137,
											"end": 46144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46137,
											"end": 46144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 46107,
											"end": 46111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46111,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46107,
											"end": 46111,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46121,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 46107,
											"end": 46121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2849,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2831,
											"end": 2849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 46107,
											"end": 46133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46144,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 46107,
											"end": 46144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46099,
											"end": 46169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 46099,
											"end": 46169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46099,
											"end": 46169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46099,
											"end": 46169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46099,
											"end": 46169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46099,
											"end": 46169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6720,
											"end": 6722,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 46099,
											"end": 46169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46099,
											"end": 46169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46099,
											"end": 46169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6702,
											"end": 6723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6759,
											"end": 6761,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6739,
											"end": 6757,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6739,
											"end": 6757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "555344432062616C616E636520746F6F206C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6856,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6838,
											"end": 6856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46099,
											"end": 46169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6518,
											"end": 6862,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46099,
											"end": 46169,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 46099,
											"end": 46169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46179,
											"end": 46196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46199,
											"end": 46218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 46199,
											"end": 46206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46211,
											"end": 46217,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 46199,
											"end": 46210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 46199,
											"end": 46218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46199,
											"end": 46218,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 46199,
											"end": 46218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46179,
											"end": 46218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46179,
											"end": 46218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46228,
											"end": 46245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46248,
											"end": 46282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 46272,
											"end": 46281,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 46272,
											"end": 46281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46248,
											"end": 46267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 46262,
											"end": 46266,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 46248,
											"end": 46257,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46248,
											"end": 46261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 46248,
											"end": 46261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46248,
											"end": 46267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46248,
											"end": 46267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46248,
											"end": 46267,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 46248,
											"end": 46267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46248,
											"end": 46267,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46248,
											"end": 46282,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 46248,
											"end": 46282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46228,
											"end": 46282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46228,
											"end": 46282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46346,
											"end": 46353,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 46346,
											"end": 46353,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 46332,
											"end": 46341,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46313,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46309,
											"end": 46325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46325,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 46309,
											"end": 46327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 46309,
											"end": 46342,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46309,
											"end": 46342,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 46309,
											"end": 46342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46353,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 46309,
											"end": 46353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46301,
											"end": 46371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 46301,
											"end": 46371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46301,
											"end": 46371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46301,
											"end": 46371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46301,
											"end": 46371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46301,
											"end": 46371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7069,
											"end": 7071,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 46301,
											"end": 46371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46301,
											"end": 46371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46301,
											"end": 46371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7051,
											"end": 7072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7108,
											"end": 7110,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7081,
											"end": 7111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F766572206D696E742063617"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7180,
											"end": 7198,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7180,
											"end": 7198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46301,
											"end": 46371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6867,
											"end": 7204,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46301,
											"end": 46371,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 46301,
											"end": 46371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46425,
											"end": 46435,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 46416,
											"end": 46436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46416,
											"end": 46436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46416,
											"end": 46436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46416,
											"end": 46436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46416,
											"end": 46424,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 46416,
											"end": 46436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46416,
											"end": 46436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46416,
											"end": 46436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46416,
											"end": 46436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46416,
											"end": 46436,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46416,
											"end": 46448,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46416,
											"end": 46463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 46416,
											"end": 46463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46453,
											"end": 46462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46416,
											"end": 46452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 46416,
											"end": 46463,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46416,
											"end": 46463,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 46416,
											"end": 46463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46390,
											"end": 46400,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 46381,
											"end": 46401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46381,
											"end": 46401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46381,
											"end": 46401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46381,
											"end": 46401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46381,
											"end": 46389,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 46381,
											"end": 46401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46381,
											"end": 46401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46381,
											"end": 46401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46381,
											"end": 46401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46381,
											"end": 46401,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46381,
											"end": 46463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46381,
											"end": 46463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46381,
											"end": 46463,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46516,
											"end": 46531,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 46473,
											"end": 46513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46473,
											"end": 46513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46473,
											"end": 46513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46473,
											"end": 46531,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46575,
											"end": 46588,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 46575,
											"end": 46588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46541,
											"end": 46572,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46541,
											"end": 46572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46541,
											"end": 46572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46541,
											"end": 46572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46541,
											"end": 46588,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46599,
											"end": 46630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 46613,
											"end": 46617,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 46620,
											"end": 46629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46599,
											"end": 46604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 46599,
											"end": 46630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46599,
											"end": 46630,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 46599,
											"end": 46630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46640,
											"end": 46644,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 46640,
											"end": 46644,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46640,
											"end": 46697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 46640,
											"end": 46697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46640,
											"end": 46644,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 46640,
											"end": 46644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46640,
											"end": 46644,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46640,
											"end": 46644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46662,
											"end": 46672,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 46682,
											"end": 46686,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 46689,
											"end": 46696,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46640,
											"end": 46661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 46640,
											"end": 46697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38116,
											"end": 38120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 38116,
											"end": 38120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38197,
											"end": 38222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38214,
											"end": 38221,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38197,
											"end": 38206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 38197,
											"end": 38222,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38197,
											"end": 38222,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 38197,
											"end": 38222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38170,
											"end": 38222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38170,
											"end": 38222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38260,
											"end": 38275,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38275,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7411,
											"end": 7413,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7393,
											"end": 7414,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7450,
											"end": 7452,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7430,
											"end": 7448,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7430,
											"end": 7448,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7523,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 7469,
											"end": 7487,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7469,
											"end": 7487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7469,
											"end": 7487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7533,
											"end": 7568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7585,
											"end": 7604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 7209,
											"end": 7610,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 38232,
											"end": 38317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38351,
											"end": 38411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 38360,
											"end": 38365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38367,
											"end": 38374,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38395,
											"end": 38410,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38376,
											"end": 38392,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38376,
											"end": 38410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38351,
											"end": 38359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 38351,
											"end": 38411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38351,
											"end": 38411,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 38351,
											"end": 38411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38439,
											"end": 38443,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38439,
											"end": 38443,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38023,
											"end": 38450,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 35158,
											"end": 35347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35237,
											"end": 35241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35291,
											"end": 35319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35308,
											"end": 35310,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35312,
											"end": 35318,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35291,
											"end": 35300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 35291,
											"end": 35319,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35494,
											"end": 35501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35538,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35554,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 45693,
											"end": 45786,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 45693,
											"end": 45786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 22086,
											"end": 22097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45759,
											"end": 45767,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 45759,
											"end": 45779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45759,
											"end": 45779,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 45759,
											"end": 45779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45759,
											"end": 45779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45759,
											"end": 45779,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45759,
											"end": 45779,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45759,
											"end": 45779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45759,
											"end": 45779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45759,
											"end": 45779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45759,
											"end": 45779,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 45759,
											"end": 45779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45759,
											"end": 45779,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45693,
											"end": 45786,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 47568,
											"end": 47697,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 47568,
											"end": 47697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47625,
											"end": 47632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47659,
											"end": 47690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 47671,
											"end": 47675,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47671,
											"end": 47687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47687,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 47671,
											"end": 47689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47659,
											"end": 47666,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 47659,
											"end": 47666,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47659,
											"end": 47666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47659,
											"end": 47670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 47659,
											"end": 47690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47659,
											"end": 47690,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 47659,
											"end": 47690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47652,
											"end": 47690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47652,
											"end": 47690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47568,
											"end": 47697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47568,
											"end": 47697,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23073,
											"end": 23271,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 23073,
											"end": 23271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 22086,
											"end": 22097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23161,
											"end": 23183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23161,
											"end": 23183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23153,
											"end": 23226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 23153,
											"end": 23226,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23153,
											"end": 23226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23153,
											"end": 23226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23153,
											"end": 23226,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23226,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23153,
											"end": 23226,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23153,
											"end": 23226,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7820,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7856,
											"end": 7858,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7836,
											"end": 7854,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7836,
											"end": 7854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 7859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7895,
											"end": 7929,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7868,
											"end": 7930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7946,
											"end": 7964,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7946,
											"end": 7964,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 7975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 8011,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7992,
											"end": 8011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23153,
											"end": 23226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 7615,
											"end": 8017,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23153,
											"end": 23226,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 23153,
											"end": 23226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23236,
											"end": 23264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 23255,
											"end": 23263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23236,
											"end": 23254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 23236,
											"end": 23264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44921,
											"end": 45096,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 44921,
											"end": 45096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 22086,
											"end": 22097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 22086,
											"end": 22099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45023,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 45014,
											"end": 45023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45000,
											"end": 45010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45000,
											"end": 45023,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 45000,
											"end": 45023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44992,
											"end": 45057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 44992,
											"end": 45057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44992,
											"end": 45057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44992,
											"end": 45057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44992,
											"end": 45057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44992,
											"end": 45057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8224,
											"end": 8226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 44992,
											"end": 45057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44992,
											"end": 45057,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44992,
											"end": 45057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8206,
											"end": 8227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8263,
											"end": 8265,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 8243,
											"end": 8261,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8243,
											"end": 8261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8243,
											"end": 8261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8302,
											"end": 8333,
											"name": "PUSH",
											"source": 1,
											"value": "63616E2774206265206C6F776572207468616E206C617374206D696E74000000"
										},
										{
											"begin": 8282,
											"end": 8300,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8282,
											"end": 8300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8282,
											"end": 8300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8275,
											"end": 8334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8351,
											"end": 8369,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8351,
											"end": 8369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44992,
											"end": 45057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8022,
											"end": 8375,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 44992,
											"end": 45057,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 44992,
											"end": 45057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45067,
											"end": 45076,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 45067,
											"end": 45089,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44921,
											"end": 45096,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 41539,
											"end": 41909,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 41539,
											"end": 41909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41670,
											"end": 41689,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41670,
											"end": 41689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8582,
											"end": 8584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8564,
											"end": 8585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8621,
											"end": 8623,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8601,
											"end": 8619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8619,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8624,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8694,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 8640,
											"end": 8658,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8640,
											"end": 8658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8640,
											"end": 8658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8711,
											"end": 8729,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8711,
											"end": 8729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8711,
											"end": 8729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8704,
											"end": 8738,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8774,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8755,
											"end": 8774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8380,
											"end": 8780,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 41662,
											"end": 41730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41748,
											"end": 41769,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41748,
											"end": 41769,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 8989,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9026,
											"end": 9028,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9006,
											"end": 9024,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9006,
											"end": 9024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9006,
											"end": 9024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9065,
											"end": 9099,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 9045,
											"end": 9063,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9045,
											"end": 9063,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9045,
											"end": 9063,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9038,
											"end": 9100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9116,
											"end": 9134,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9116,
											"end": 9134,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9116,
											"end": 9134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9109,
											"end": 9141,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9158,
											"end": 9177,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9158,
											"end": 9177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8785,
											"end": 9183,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 41740,
											"end": 41808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41830,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41837,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41846,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41855,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1465,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41870,
											"end": 41902,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 41539,
											"end": 41909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41539,
											"end": 41909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41539,
											"end": 41909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41539,
											"end": 41909,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5843,
											"end": 5939,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5843,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5931,
											"end": 5932,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5927,
											"end": 5928,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5927,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 5927,
											"end": 5932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42190,
											"end": 42631,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 42190,
											"end": 42631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42320,
											"end": 42344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42347,
											"end": 42372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 42357,
											"end": 42362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42364,
											"end": 42371,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42347,
											"end": 42356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 42347,
											"end": 42372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42347,
											"end": 42372,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 42347,
											"end": 42372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42320,
											"end": 42372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42320,
											"end": 42372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 42386,
											"end": 42402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42386,
											"end": 42423,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42382,
											"end": 42625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 42382,
											"end": 42625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42467,
											"end": 42473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42447,
											"end": 42463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42447,
											"end": 42473,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42447,
											"end": 42473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9502,
											"end": 9523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 9539,
											"end": 9557,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9539,
											"end": 9557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9539,
											"end": 9557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9532,
											"end": 9562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9598,
											"end": 9629,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 9578,
											"end": 9596,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9578,
											"end": 9596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9578,
											"end": 9596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9571,
											"end": 9630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9647,
											"end": 9665,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9647,
											"end": 9665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 9318,
											"end": 9671,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 42439,
											"end": 42507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42549,
											"end": 42600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 42558,
											"end": 42563,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42565,
											"end": 42572,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42593,
											"end": 42599,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42574,
											"end": 42590,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42574,
											"end": 42599,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42549,
											"end": 42557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 42549,
											"end": 42600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42549,
											"end": 42600,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 42549,
											"end": 42600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42310,
											"end": 42631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42190,
											"end": 42631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42190,
											"end": 42631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42190,
											"end": 42631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42190,
											"end": 42631,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38904,
											"end": 39555,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 38904,
											"end": 39555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39030,
											"end": 39048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39030,
											"end": 39048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9878,
											"end": 9880,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9881,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9917,
											"end": 9919,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 9897,
											"end": 9915,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9897,
											"end": 9915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9897,
											"end": 9915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9890,
											"end": 9920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 9990,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 9936,
											"end": 9954,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9936,
											"end": 9954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9929,
											"end": 9991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10007,
											"end": 10025,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10007,
											"end": 10025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10007,
											"end": 10025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10035,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10071,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10052,
											"end": 10071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 9676,
											"end": 10077,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 39022,
											"end": 39090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39108,
											"end": 39124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39108,
											"end": 39124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10284,
											"end": 10286,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10325,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 10303,
											"end": 10321,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10303,
											"end": 10321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10296,
											"end": 10326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10362,
											"end": 10396,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 10342,
											"end": 10360,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10342,
											"end": 10360,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10335,
											"end": 10397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10406,
											"end": 10439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10456,
											"end": 10475,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10456,
											"end": 10475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 10082,
											"end": 10481,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 39100,
											"end": 39164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39224,
											"end": 39243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39246,
											"end": 39261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39279,
											"end": 39300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39279,
											"end": 39300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39279,
											"end": 39300,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39279,
											"end": 39300,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10688,
											"end": 10690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10670,
											"end": 10691,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10727,
											"end": 10729,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10730,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10766,
											"end": 10800,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 10746,
											"end": 10764,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10746,
											"end": 10764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 10764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10739,
											"end": 10801,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10817,
											"end": 10835,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10817,
											"end": 10835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10810,
											"end": 10846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10863,
											"end": 10882,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10863,
											"end": 10882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 10486,
											"end": 10888,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 39271,
											"end": 39343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39392,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39395,
											"end": 39415,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39395,
											"end": 39415,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39395,
											"end": 39415,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39415,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39448,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39448,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39409,
											"end": 39415,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39409,
											"end": 39415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39377,
											"end": 39386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39409,
											"end": 39415,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39409,
											"end": 39415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39435,
											"end": 39458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39489,
											"end": 39491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39483,
											"end": 39487,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 39493,
											"end": 39499,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1413,
											"end": 1431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1413,
											"end": 1431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1471,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39474,
											"end": 39500,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 39511,
											"end": 39548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 40540,
											"end": 41116,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22351,
											"end": 22481,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 22351,
											"end": 22481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22265,
											"end": 22271,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22265,
											"end": 22271,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22265,
											"end": 22271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20885,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22414,
											"end": 22437,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22406,
											"end": 22474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 22406,
											"end": 22474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22406,
											"end": 22474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22406,
											"end": 22474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22406,
											"end": 22474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22406,
											"end": 22474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22406,
											"end": 22474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22406,
											"end": 22474,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22406,
											"end": 22474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11077,
											"end": 11098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11114,
											"end": 11132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11114,
											"end": 11132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11114,
											"end": 11132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11107,
											"end": 11137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11173,
											"end": 11207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11153,
											"end": 11171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11153,
											"end": 11171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11153,
											"end": 11171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11146,
											"end": 11208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11225,
											"end": 11243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11225,
											"end": 11243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22406,
											"end": 22474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 10893,
											"end": 11249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40540,
											"end": 41116,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 40540,
											"end": 41116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40623,
											"end": 40644,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40615,
											"end": 40682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 40615,
											"end": 40682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40615,
											"end": 40682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40615,
											"end": 40682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40615,
											"end": 40682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40615,
											"end": 40682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11456,
											"end": 11458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 40615,
											"end": 40682,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40615,
											"end": 40682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40615,
											"end": 40682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11438,
											"end": 11459,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11495,
											"end": 11497,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 11475,
											"end": 11493,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11475,
											"end": 11493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11475,
											"end": 11493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11534,
											"end": 11568,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 11514,
											"end": 11532,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11514,
											"end": 11532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11507,
											"end": 11569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11585,
											"end": 11603,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11585,
											"end": 11603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11585,
											"end": 11603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11626,
											"end": 11645,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11626,
											"end": 11645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 40615,
											"end": 40682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 11254,
											"end": 11651,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40615,
											"end": 40682,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 40615,
											"end": 40682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40778,
											"end": 40796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40778,
											"end": 40796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40753,
											"end": 40775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40778,
											"end": 40796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40778,
											"end": 40796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40778,
											"end": 40796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40778,
											"end": 40796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40778,
											"end": 40796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40778,
											"end": 40796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40778,
											"end": 40796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40778,
											"end": 40796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40778,
											"end": 40796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40778,
											"end": 40796,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40778,
											"end": 40796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40814,
											"end": 40838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40814,
											"end": 40838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40814,
											"end": 40838,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40814,
											"end": 40838,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40806,
											"end": 40877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 40806,
											"end": 40877,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40806,
											"end": 40877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40806,
											"end": 40877,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40806,
											"end": 40877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40806,
											"end": 40877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11858,
											"end": 11860,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 40806,
											"end": 40877,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40806,
											"end": 40877,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40806,
											"end": 40877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11840,
											"end": 11861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11897,
											"end": 11899,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 11877,
											"end": 11895,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11877,
											"end": 11895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 11900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11936,
											"end": 11970,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 11916,
											"end": 11934,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11916,
											"end": 11934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11916,
											"end": 11934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11909,
											"end": 11971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11987,
											"end": 12005,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11987,
											"end": 12005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11987,
											"end": 12005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11980,
											"end": 12012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12029,
											"end": 12048,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12029,
											"end": 12048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 40806,
											"end": 40877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 11656,
											"end": 12054,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40806,
											"end": 40877,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 40806,
											"end": 40877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40911,
											"end": 40929,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40911,
											"end": 40929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40911,
											"end": 40920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40911,
											"end": 40929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40911,
											"end": 40929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40911,
											"end": 40929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40911,
											"end": 40929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40911,
											"end": 40929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40911,
											"end": 40929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40911,
											"end": 40929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40911,
											"end": 40929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40911,
											"end": 40929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40911,
											"end": 40929,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40932,
											"end": 40955,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40932,
											"end": 40955,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40932,
											"end": 40955,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40911,
											"end": 40955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40911,
											"end": 40955,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 40975,
											"end": 40987,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40975,
											"end": 40997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40975,
											"end": 40997,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40949,
											"end": 40955,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40949,
											"end": 40955,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40911,
											"end": 40920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40975,
											"end": 40997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 40975,
											"end": 40997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40949,
											"end": 40955,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40949,
											"end": 40955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40975,
											"end": 40997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 40975,
											"end": 40997,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40975,
											"end": 40997,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 40975,
											"end": 40997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40975,
											"end": 40997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40975,
											"end": 40997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40975,
											"end": 40997,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41013,
											"end": 41050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41013,
											"end": 41050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 41039,
											"end": 41040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41039,
											"end": 41040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41013,
											"end": 41050,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41013,
											"end": 41050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41013,
											"end": 41050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41013,
											"end": 41050,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 41013,
											"end": 41050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1413,
											"end": 1431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41013,
											"end": 41050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1294,
											"end": 1471,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41061,
											"end": 41109,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 41061,
											"end": 41109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40605,
											"end": 41116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40540,
											"end": 41116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40540,
											"end": 41116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40540,
											"end": 41116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27102,
											"end": 27307,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 27102,
											"end": 27307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5488,
											"end": 5520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5488,
											"end": 5520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5555,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5537,
											"end": 5555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27214,
											"end": 27300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 27214,
											"end": 27300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27234,
											"end": 27239,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27234,
											"end": 27239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27264,
											"end": 27287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 27214,
											"end": 27300,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6186,
											"end": 6282,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6186,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6244,
											"end": 6251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6274,
											"end": 6275,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6270,
											"end": 6271,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6270,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 6270,
											"end": 6275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6571,
											"end": 6667,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 6571,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6655,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6659,
											"end": 6660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6655,
											"end": 6656,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6655,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 6655,
											"end": 6660,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23425,
											"end": 23612,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 23425,
											"end": 23612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23517,
											"end": 23523,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23517,
											"end": 23523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23517,
											"end": 23523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23533,
											"end": 23550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23533,
											"end": 23550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23550,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23550,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23550,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23565,
											"end": 23605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23565,
											"end": 23605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23517,
											"end": 23523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23517,
											"end": 23523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23517,
											"end": 23523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23517,
											"end": 23523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23517,
											"end": 23523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23565,
											"end": 23605,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 23565,
											"end": 23605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 23514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23498,
											"end": 23514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23565,
											"end": 23605,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 23488,
											"end": 23612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23425,
											"end": 23612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23425,
											"end": 23612,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5476,
											"end": 5572,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 5476,
											"end": 5572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5534,
											"end": 5541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5564,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5561,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 5560,
											"end": 5565,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39831,
											"end": 40220,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 39831,
											"end": 40220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39914,
											"end": 39935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39914,
											"end": 39935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39906,
											"end": 39971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 39906,
											"end": 39971,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39906,
											"end": 39971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39906,
											"end": 39971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39906,
											"end": 39971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39906,
											"end": 39971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 39906,
											"end": 39971,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39906,
											"end": 39971,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39906,
											"end": 39971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12638,
											"end": 12659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12695,
											"end": 12697,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 12675,
											"end": 12693,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12675,
											"end": 12693,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12675,
											"end": 12693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12668,
											"end": 12698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12734,
											"end": 12767,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 12714,
											"end": 12732,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12714,
											"end": 12732,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12714,
											"end": 12732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12707,
											"end": 12768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12785,
											"end": 12803,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12785,
											"end": 12803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39906,
											"end": 39971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 12454,
											"end": 12809,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 39906,
											"end": 39971,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 39906,
											"end": 39971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40058,
											"end": 40064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40042,
											"end": 40054,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40042,
											"end": 40054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40042,
											"end": 40064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40042,
											"end": 40064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40042,
											"end": 40064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40042,
											"end": 40064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 40042,
											"end": 40064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40042,
											"end": 40064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40042,
											"end": 40064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 40042,
											"end": 40064,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40042,
											"end": 40064,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 40042,
											"end": 40064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40042,
											"end": 40064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40042,
											"end": 40064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40042,
											"end": 40064,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40074,
											"end": 40092,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40074,
											"end": 40092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40074,
											"end": 40083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40074,
											"end": 40092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40074,
											"end": 40092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40074,
											"end": 40092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40074,
											"end": 40092,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40074,
											"end": 40092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40074,
											"end": 40092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40074,
											"end": 40092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40074,
											"end": 40092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40074,
											"end": 40092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40074,
											"end": 40092,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40074,
											"end": 40102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40074,
											"end": 40102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40096,
											"end": 40102,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40096,
											"end": 40102,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40074,
											"end": 40083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40074,
											"end": 40102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 40074,
											"end": 40102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40096,
											"end": 40102,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40096,
											"end": 40102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40074,
											"end": 40102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 40074,
											"end": 40102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40074,
											"end": 40102,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 40074,
											"end": 40102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40074,
											"end": 40102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40074,
											"end": 40102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40074,
											"end": 40102,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40117,
											"end": 40154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40117,
											"end": 40154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40117,
											"end": 40154,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40117,
											"end": 40154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40117,
											"end": 40154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40134,
											"end": 40135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40134,
											"end": 40135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40117,
											"end": 40154,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 40117,
											"end": 40154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1413,
											"end": 1431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 40117,
											"end": 40154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40117,
											"end": 40154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40117,
											"end": 40154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40117,
											"end": 40154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40117,
											"end": 40154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40117,
											"end": 40154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40117,
											"end": 40154,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 39831,
											"end": 40220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39831,
											"end": 40220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39831,
											"end": 40220,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27313,
											"end": 27554,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 27313,
											"end": 27554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27478,
											"end": 27546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27478,
											"end": 27546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13072,
											"end": 13087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13072,
											"end": 13087,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13072,
											"end": 13087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27478,
											"end": 27546,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27478,
											"end": 27546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27478,
											"end": 27546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13054,
											"end": 13088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13124,
											"end": 13139,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13124,
											"end": 13139,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13104,
											"end": 13122,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13104,
											"end": 13122,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13104,
											"end": 13122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13097,
											"end": 13140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13156,
											"end": 13174,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13156,
											"end": 13174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13156,
											"end": 13174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13149,
											"end": 13183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13149,
											"end": 13183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13149,
											"end": 13183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27451,
											"end": 27547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 27451,
											"end": 27547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27471,
											"end": 27476,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27471,
											"end": 27476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27501,
											"end": 27528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12989,
											"end": 13007,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12989,
											"end": 13007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27478,
											"end": 27546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 12814,
											"end": 13189,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30086,
											"end": 30792,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 30086,
											"end": 30792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30505,
											"end": 30528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 30559,
											"end": 30563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30539,
											"end": 30544,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30531,
											"end": 30558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30531,
											"end": 30558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 30531,
											"end": 30558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 30531,
											"end": 30600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30614,
											"end": 30631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30614,
											"end": 30631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30505,
											"end": 30600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30505,
											"end": 30600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30614,
											"end": 30635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30610,
											"end": 30786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 30610,
											"end": 30786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30698,
											"end": 30728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30698,
											"end": 30728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30698,
											"end": 30728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30698,
											"end": 30728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30698,
											"end": 30728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30698,
											"end": 30728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30698,
											"end": 30728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30698,
											"end": 30728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30698,
											"end": 30728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 30698,
											"end": 30728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30698,
											"end": 30728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30698,
											"end": 30728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 30698,
											"end": 30728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30698,
											"end": 30728,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 30698,
											"end": 30728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30690,
											"end": 30775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 30690,
											"end": 30775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30690,
											"end": 30775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30690,
											"end": 30775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30690,
											"end": 30775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30690,
											"end": 30775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13396,
											"end": 13398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30690,
											"end": 30775,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30690,
											"end": 30775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30690,
											"end": 30775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13378,
											"end": 13399,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13435,
											"end": 13437,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 13415,
											"end": 13433,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13415,
											"end": 13433,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13415,
											"end": 13433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13408,
											"end": 13438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13508,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 13454,
											"end": 13472,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13454,
											"end": 13472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13454,
											"end": 13472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13447,
											"end": 13509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13525,
											"end": 13543,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13525,
											"end": 13543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13525,
											"end": 13543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13518,
											"end": 13558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13575,
											"end": 13594,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13575,
											"end": 13594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30690,
											"end": 30775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 13194,
											"end": 13600,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13387,
											"end": 13610,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 13387,
											"end": 13610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13520,
											"end": 13532,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13551,
											"end": 13603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 13573,
											"end": 13579,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13581,
											"end": 13585,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13587,
											"end": 13588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13590,
											"end": 13602,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13520,
											"end": 13532,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14754,
											"end": 14814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 14754,
											"end": 14814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14754,
											"end": 14814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14754,
											"end": 14814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14754,
											"end": 14814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14754,
											"end": 14814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14214,
											"end": 14216,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14754,
											"end": 14814,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14754,
											"end": 14814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14754,
											"end": 14814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14253,
											"end": 14255,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 14233,
											"end": 14251,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14233,
											"end": 14251,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14233,
											"end": 14251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14226,
											"end": 14256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14323,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14265,
											"end": 14324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14341,
											"end": 14359,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14341,
											"end": 14359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14754,
											"end": 14814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 14012,
											"end": 14365,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14754,
											"end": 14814,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 14754,
											"end": 14814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14826,
											"end": 14838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14840,
											"end": 14863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14873,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14867,
											"end": 14878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14891,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14915,
											"end": 14966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 14932,
											"end": 14939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14941,
											"end": 14951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14953,
											"end": 14965,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14915,
											"end": 14931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 14915,
											"end": 14966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14915,
											"end": 14966,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 14915,
											"end": 14966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 14966,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 14474,
											"end": 14973,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14474,
											"end": 14973,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17087,
											"end": 17829,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 17087,
											"end": 17829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17245,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17261,
											"end": 17268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17257,
											"end": 17823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17257,
											"end": 17823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 17257,
											"end": 17823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17291,
											"end": 17301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17284,
											"end": 17301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 17284,
											"end": 17301,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17257,
											"end": 17823,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 17257,
											"end": 17823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17402,
											"end": 17419,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17402,
											"end": 17419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17402,
											"end": 17423,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 17398,
											"end": 17813,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17646,
											"end": 17656,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17640,
											"end": 17657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17693,
											"end": 17703,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17685,
											"end": 17704,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17678,
											"end": 17722,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17813,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 17398,
											"end": 17813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17785,
											"end": 17797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17778,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17778,
											"end": 17798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17778,
											"end": 17798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17778,
											"end": 17798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17778,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17778,
											"end": 17798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17778,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 17778,
											"end": 17798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17778,
											"end": 17798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17778,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 17778,
											"end": 17798,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 272,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 14,
											"end": 272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 86,
											"end": 87,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 209,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 96,
											"end": 209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 110,
											"end": 116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 107,
											"end": 108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 104,
											"end": 117,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 96,
											"end": 209,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 96,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 96,
											"end": 209,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 186,
											"end": 197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 186,
											"end": 197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 186,
											"end": 197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 180,
											"end": 198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 167,
											"end": 178,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 167,
											"end": 178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 167,
											"end": 178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 132,
											"end": 134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 125,
											"end": 135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 96,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 96,
											"end": 209,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 96,
											"end": 209,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 96,
											"end": 209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 227,
											"end": 233,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 224,
											"end": 225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 221,
											"end": 234,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 218,
											"end": 266,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 218,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 218,
											"end": 266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 262,
											"end": 263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 244,
											"end": 260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 237,
											"end": 264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14,
											"end": 272,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 277,
											"end": 660,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 277,
											"end": 660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 426,
											"end": 428,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 408,
											"end": 429,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 389,
											"end": 393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 452,
											"end": 465,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 501,
											"end": 507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 474,
											"end": 508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 517,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 576,
											"end": 582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 571,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 569,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 556,
											"end": 574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 553,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 543,
											"end": 549,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 539,
											"end": 554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 517,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 517,
											"end": 583,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 517,
											"end": 583,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 517,
											"end": 583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 644,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 623,
											"end": 638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 619,
											"end": 648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 604,
											"end": 649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 604,
											"end": 649,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 604,
											"end": 649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 604,
											"end": 649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 651,
											"end": 653,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 600,
											"end": 654,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 277,
											"end": 660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 277,
											"end": 660,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 665,
											"end": 838,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 665,
											"end": 838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 733,
											"end": 753,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 733,
											"end": 753,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 782,
											"end": 813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 782,
											"end": 813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 772,
											"end": 814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 772,
											"end": 814,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 762,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 762,
											"end": 832,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 828,
											"end": 829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 818,
											"end": 830,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 832,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 762,
											"end": 832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 665,
											"end": 838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 665,
											"end": 838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 665,
											"end": 838,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 843,
											"end": 1097,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 843,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 911,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 972,
											"end": 974,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 951,
											"end": 958,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 947,
											"end": 970,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 943,
											"end": 975,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 940,
											"end": 992,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 940,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 940,
											"end": 992,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 988,
											"end": 989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 990,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 940,
											"end": 992,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 940,
											"end": 992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 1030,
											"end": 1039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1040,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1091,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1091,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 843,
											"end": 1097,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1476,
											"end": 1662,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1476,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1574,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1586,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1591,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1608,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 1556,
											"end": 1608,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1602,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1606,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1608,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 1556,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 1646,
											"end": 1655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 1627,
											"end": 1656,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1991,
											"end": 2319,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1991,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2157,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 2105,
											"end": 2157,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2151,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2155,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2157,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 2105,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 2195,
											"end": 2204,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 2176,
											"end": 2205,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2176,
											"end": 2205,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 2176,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2205,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 2258,
											"end": 2260,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2247,
											"end": 2256,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2243,
											"end": 2261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2298,
											"end": 2307,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2313,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2319,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2319,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2319,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2319,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2513,
											"end": 2693,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2513,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2627,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2613,
											"end": 2622,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2604,
											"end": 2611,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2623,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2628,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2645,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 2593,
											"end": 2645,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2641,
											"end": 2642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2643,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2645,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 2593,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2664,
											"end": 2687,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2687,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 2693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2513,
											"end": 2693,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3128,
											"end": 3388,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3128,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3245,
											"end": 3254,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3255,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3260,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3271,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 3315,
											"end": 3324,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 3296,
											"end": 3325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3296,
											"end": 3325,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 3296,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3325,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 3378,
											"end": 3380,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 3344,
											"end": 3382,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3344,
											"end": 3382,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 3344,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3388,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3388,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3388,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3393,
											"end": 3511,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 3393,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3485,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3486,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3487,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3445,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3445,
											"end": 3505,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3503,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3757,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3516,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3625,
											"end": 3627,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3613,
											"end": 3622,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3604,
											"end": 3611,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3623,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3628,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3645,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 3593,
											"end": 3645,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3643,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3645,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 3593,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3690,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 3721,
											"end": 3726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 3699,
											"end": 3727,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 4142,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3762,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3837,
											"end": 3849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 3849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 3849,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 3849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 3896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 3896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 3896,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 3905,
											"end": 3966,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 3951,
											"end": 3957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 3964,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 3964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 3966,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 3905,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4004,
											"end": 4010,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4015,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 3999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4016,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4136,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 3975,
											"end": 4136,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4068,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4053,
											"end": 4056,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4049,
											"end": 4069,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4097,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4090,
											"end": 4091,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4083,
											"end": 4098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4121,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4118,
											"end": 4119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4126,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 3975,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 4142,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 4142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 4142,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 4142,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4147,
											"end": 4274,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 4147,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4218,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4203,
											"end": 4206,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4199,
											"end": 4219,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4189,
											"end": 4220,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4243,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4236,
											"end": 4237,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4229,
											"end": 4244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4267,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4260,
											"end": 4261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4253,
											"end": 4268,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4407,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 4279,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4346,
											"end": 4352,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4343,
											"end": 4344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4353,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4356,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 4356,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 4356,
											"end": 4374,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4356,
											"end": 4374,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 4356,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4392,
											"end": 4401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4401,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4407,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4412,
											"end": 4596,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4412,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4482,
											"end": 4488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4555,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 4503,
											"end": 4555,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4553,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4555,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 4503,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4412,
											"end": 4596,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5575,
											"end": 5820,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 5575,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 5697,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5683,
											"end": 5692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5681,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5670,
											"end": 5693,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5666,
											"end": 5698,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5715,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 5663,
											"end": 5715,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5708,
											"end": 5709,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5713,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5715,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 5663,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5737,
											"end": 5753,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5784,
											"end": 5789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 5762,
											"end": 5790,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9188,
											"end": 9313,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 9188,
											"end": 9313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9256,
											"end": 9257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9250,
											"end": 9258,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9261,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 9261,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 9261,
											"end": 9279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9261,
											"end": 9279,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 9261,
											"end": 9279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9298,
											"end": 9307,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9298,
											"end": 9307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9313,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12059,
											"end": 12227,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 12059,
											"end": 12227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12099,
											"end": 12106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12165,
											"end": 12166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12161,
											"end": 12162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12157,
											"end": 12163,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12153,
											"end": 12167,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12150,
											"end": 12151,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12147,
											"end": 12168,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12142,
											"end": 12143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12135,
											"end": 12144,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12128,
											"end": 12145,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12124,
											"end": 12169,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12172,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 12172,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 12172,
											"end": 12190,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12172,
											"end": 12190,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 12172,
											"end": 12190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12212,
											"end": 12221,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12059,
											"end": 12227,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12232,
											"end": 12449,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 12232,
											"end": 12449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12272,
											"end": 12273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12298,
											"end": 12299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 12288,
											"end": 12420,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12342,
											"end": 12352,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 12337,
											"end": 12340,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 12333,
											"end": 12353,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12323,
											"end": 12354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12377,
											"end": 12381,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 12374,
											"end": 12375,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12367,
											"end": 12382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12405,
											"end": 12409,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12402,
											"end": 12403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12395,
											"end": 12410,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12420,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 12288,
											"end": 12420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12434,
											"end": 12443,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12434,
											"end": 12443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12232,
											"end": 12449,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14370,
											"end": 14644,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 14370,
											"end": 14644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14499,
											"end": 14502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14537,
											"end": 14543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14531,
											"end": 14544,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14553,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 14599,
											"end": 14605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14594,
											"end": 14597,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14587,
											"end": 14591,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14579,
											"end": 14585,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14575,
											"end": 14592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14553,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 14553,
											"end": 14606,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14553,
											"end": 14606,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 14553,
											"end": 14606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14622,
											"end": 14638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14622,
											"end": 14638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14622,
											"end": 14638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14622,
											"end": 14638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14622,
											"end": 14638,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14370,
											"end": 14644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14370,
											"end": 14644,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"USDC()": "89a30271",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"claim()": "4e71d92d",
							"claimableTokens(address)": "84d24226",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"mintCap()": "76c71ca1",
							"mintOpen()": "24bbd049",
							"mintPrice()": "6817c76c",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"recoverTreasuryTokens()": "4e274514",
							"remainingMintableTokens()": "e2e5c15c",
							"remainingVestedTime()": "20f203d9",
							"renounceOwnership()": "715018a6",
							"setMintCap(uint256)": "4070a0c9",
							"setMintPrice(uint256)": "f4a0a528",
							"setOpenMint(bool)": "e2af30f4",
							"setVestingPeriod(uint256)": "40bee0ed",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"userInfo(address)": "1959a002",
							"vestingPeriod()": "7313ee5a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"claimableTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recoverTreasuryTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingMintableTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingVestedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mintCap\",\"type\":\"uint256\"}],\"name\":\"setMintCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mintPrice\",\"type\":\"uint256\"}],\"name\":\"setMintPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_mintOpen\",\"type\":\"bool\"}],\"name\":\"setOpenMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"setVestingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalMinted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastInteractionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"VestPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GMD_flat.sol\":\"GMD\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GMD_flat.sol\":{\"keccak256\":\"0x9f58f774b08b0fb154ee27a7c4bd598806cc666bf3c2289ab083f5fd3880ba54\",\"urls\":[\"bzz-raw://a6cc7c50e87d8fba13c9c7701d219795015b4efceedec5071d63128ec7207370\",\"dweb:/ipfs/QmPRHCdRnRbqcqK5RXD3p9eGhi3rnwSDVXkVEVyWa3uFPg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1200,
								"contract": "GMD_flat.sol:GMD",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1206,
								"contract": "GMD_flat.sol:GMD",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1208,
								"contract": "GMD_flat.sol:GMD",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1210,
								"contract": "GMD_flat.sol:GMD",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1212,
								"contract": "GMD_flat.sol:GMD",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 706,
								"contract": "GMD_flat.sol:GMD",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 10,
								"contract": "GMD_flat.sol:GMD",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1813,
								"contract": "GMD_flat.sol:GMD",
								"label": "userInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_struct(UserInfo)1808_storage)"
							},
							{
								"astId": 1816,
								"contract": "GMD_flat.sol:GMD",
								"label": "mintPrice",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1819,
								"contract": "GMD_flat.sol:GMD",
								"label": "mintCap",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1822,
								"contract": "GMD_flat.sol:GMD",
								"label": "vestingPeriod",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1825,
								"contract": "GMD_flat.sol:GMD",
								"label": "mintOpen",
								"offset": 0,
								"slot": "11",
								"type": "t_bool"
							},
							{
								"astId": 1831,
								"contract": "GMD_flat.sol:GMD",
								"label": "USDC",
								"offset": 1,
								"slot": "11",
								"type": "t_contract(IERC20)888"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)888": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(UserInfo)1808_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct GMD.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1808_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(UserInfo)1808_storage": {
								"encoding": "inplace",
								"label": "struct GMD.UserInfo",
								"members": [
									{
										"astId": 1803,
										"contract": "GMD_flat.sol:GMD",
										"label": "totalMinted",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1805,
										"contract": "GMD_flat.sol:GMD",
										"label": "lastInteractionTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1807,
										"contract": "GMD_flat.sol:GMD",
										"label": "VestPeriod",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GMD_flat.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GMD_flat.sol\":{\"keccak256\":\"0x9f58f774b08b0fb154ee27a7c4bd598806cc666bf3c2289ab083f5fd3880ba54\",\"urls\":[\"bzz-raw://a6cc7c50e87d8fba13c9c7701d219795015b4efceedec5071d63128ec7207370\",\"dweb:/ipfs/QmPRHCdRnRbqcqK5RXD3p9eGhi3rnwSDVXkVEVyWa3uFPg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GMD_flat.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GMD_flat.sol\":{\"keccak256\":\"0x9f58f774b08b0fb154ee27a7c4bd598806cc666bf3c2289ab083f5fd3880ba54\",\"urls\":[\"bzz-raw://a6cc7c50e87d8fba13c9c7701d219795015b4efceedec5071d63128ec7207370\",\"dweb:/ipfs/QmPRHCdRnRbqcqK5RXD3p9eGhi3rnwSDVXkVEVyWa3uFPg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GMD_flat.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GMD_flat.sol\":{\"keccak256\":\"0x9f58f774b08b0fb154ee27a7c4bd598806cc666bf3c2289ab083f5fd3880ba54\",\"urls\":[\"bzz-raw://a6cc7c50e87d8fba13c9c7701d219795015b4efceedec5071d63128ec7207370\",\"dweb:/ipfs/QmPRHCdRnRbqcqK5RXD3p9eGhi3rnwSDVXkVEVyWa3uFPg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GMD_flat.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GMD_flat.sol\":{\"keccak256\":\"0x9f58f774b08b0fb154ee27a7c4bd598806cc666bf3c2289ab083f5fd3880ba54\",\"urls\":[\"bzz-raw://a6cc7c50e87d8fba13c9c7701d219795015b4efceedec5071d63128ec7207370\",\"dweb:/ipfs/QmPRHCdRnRbqcqK5RXD3p9eGhi3rnwSDVXkVEVyWa3uFPg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 706,
								"contract": "GMD_flat.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GMD_flat.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GMD_flat.sol\":{\"keccak256\":\"0x9f58f774b08b0fb154ee27a7c4bd598806cc666bf3c2289ab083f5fd3880ba54\",\"urls\":[\"bzz-raw://a6cc7c50e87d8fba13c9c7701d219795015b4efceedec5071d63128ec7207370\",\"dweb:/ipfs/QmPRHCdRnRbqcqK5RXD3p9eGhi3rnwSDVXkVEVyWa3uFPg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "GMD_flat.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GMD_flat.sol\":27046:30794  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"GMD_flat.sol\":27046:30794  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201233eeff853d0ac86826398e4ec56eebca0ca7d72104549c66722c54cb5e7baa64736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201233eeff853d0ac86826398e4ec56eebca0ca7d72104549c66722c54cb5e7baa64736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT CALLER 0xEE SELFDESTRUCT DUP6 RETURNDATASIZE EXP 0xC8 PUSH9 0x26398E4EC56EEBCA0C 0xA7 0xD7 0x21 DIV SLOAD SWAP13 PUSH7 0x722C54CB5E7BAA PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "27046:3748:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;27046:3748:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201233eeff853d0ac86826398e4ec56eebca0ca7d72104549c66722c54cb5e7baa64736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT CALLER 0xEE SELFDESTRUCT DUP6 RETURNDATASIZE EXP 0xC8 PUSH9 0x26398E4EC56EEBCA0C 0xA7 0xD7 0x21 DIV SLOAD SWAP13 PUSH7 0x722C54CB5E7BAA PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "27046:3748:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27046,
									"end": 30794,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 30794,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201233eeff853d0ac86826398e4ec56eebca0ca7d72104549c66722c54cb5e7baa64736f6c634300080c0033",
									".code": [
										{
											"begin": 27046,
											"end": 30794,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 27046,
											"end": 30794,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 27046,
											"end": 30794,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27046,
											"end": 30794,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27046,
											"end": 30794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27046,
											"end": 30794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27046,
											"end": 30794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27046,
											"end": 30794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27046,
											"end": 30794,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GMD_flat.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GMD_flat.sol\":{\"keccak256\":\"0x9f58f774b08b0fb154ee27a7c4bd598806cc666bf3c2289ab083f5fd3880ba54\",\"urls\":[\"bzz-raw://a6cc7c50e87d8fba13c9c7701d219795015b4efceedec5071d63128ec7207370\",\"dweb:/ipfs/QmPRHCdRnRbqcqK5RXD3p9eGhi3rnwSDVXkVEVyWa3uFPg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GMD_flat.sol\":3203:9503  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"GMD_flat.sol\":3203:9503  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d9256a9620d4e1fa17d2e8ce5695dd2ef6c7a12348a446d9c796d6702cf405cf64736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9256a9620d4e1fa17d2e8ce5695dd2ef6c7a12348a446d9c796d6702cf405cf64736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0x25 PUSH11 0x9620D4E1FA17D2E8CE5695 0xDD 0x2E 0xF6 0xC7 LOG1 0x23 BASEFEE LOG4 CHAINID 0xD9 0xC7 SWAP7 0xD6 PUSH17 0x2CF405CF64736F6C634300080C00330000 ",
							"sourceMap": "3203:6300:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;3203:6300:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9256a9620d4e1fa17d2e8ce5695dd2ef6c7a12348a446d9c796d6702cf405cf64736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0x25 PUSH11 0x9620D4E1FA17D2E8CE5695 0xDD 0x2E 0xF6 0xC7 LOG1 0x23 BASEFEE LOG4 CHAINID 0xD9 0xC7 SWAP7 0xD6 PUSH17 0x2CF405CF64736F6C634300080C00330000 ",
							"sourceMap": "3203:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3203,
									"end": 9503,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3203,
									"end": 9503,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d9256a9620d4e1fa17d2e8ce5695dd2ef6c7a12348a446d9c796d6702cf405cf64736f6c634300080c0033",
									".code": [
										{
											"begin": 3203,
											"end": 9503,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3203,
											"end": 9503,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3203,
											"end": 9503,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3203,
											"end": 9503,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3203,
											"end": 9503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3203,
											"end": 9503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3203,
											"end": 9503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 9503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3203,
											"end": 9503,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GMD_flat.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GMD_flat.sol\":{\"keccak256\":\"0x9f58f774b08b0fb154ee27a7c4bd598806cc666bf3c2289ab083f5fd3880ba54\",\"urls\":[\"bzz-raw://a6cc7c50e87d8fba13c9c7701d219795015b4efceedec5071d63128ec7207370\",\"dweb:/ipfs/QmPRHCdRnRbqcqK5RXD3p9eGhi3rnwSDVXkVEVyWa3uFPg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> GMD_flat.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "GMD_flat.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"GMD_flat.sol": {
				"ast": {
					"absolutePath": "GMD_flat.sol",
					"exportedSymbols": {
						"Address": [
							644
						],
						"Context": [
							700
						],
						"ERC20": [
							1770
						],
						"GMD": [
							2265
						],
						"IERC20": [
							888
						],
						"IERC20Metadata": [
							1188
						],
						"IERC20Permit": [
							679
						],
						"Ownable": [
							811
						],
						"ReentrancyGuard": [
							39
						],
						"SafeERC20": [
							1165
						],
						"SafeMath": [
							350
						]
					},
					"id": 2266,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "130:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "155:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "ReentrancyGuard",
							"nameLocation": "924:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1719:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1694:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1694:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1734:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1766:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1741:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1741:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1777:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1801:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1785:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1785:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1829:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1839:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1849:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1839:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1839:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1826:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1829:0:0"
									},
									"scope": 39,
									"src": "1815:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2269:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 22,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2358:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 23,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2369:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2358:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2350:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2350:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2350:63:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2488:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2498:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2488:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "2488:18:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "2517:1:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2661:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 34,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2671:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2661:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2661:22:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1874:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 38,
									"name": "nonReentrant",
									"nameLocation": "2254:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2266:2:0"
									},
									"src": "2245:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2266,
							"src": "906:1786:0",
							"usedErrors": []
						},
						{
							"id": 40,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2828:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 41,
								"nodeType": "StructuredDocumentation",
								"src": "3006:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 350,
							"linearizedBaseContracts": [
								350
							],
							"name": "SafeMath",
							"nameLocation": "3211:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "3438:140:0",
										"statements": [
											{
												"id": 71,
												"nodeType": "UncheckedBlock",
												"src": "3448:124:0",
												"statements": [
													{
														"assignments": [
															54
														],
														"declarations": [
															{
																"constant": false,
																"id": 54,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "3480:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 71,
																"src": "3472:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 53,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3472:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 58,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 55,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "3484:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 56,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "3488:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3484:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3472:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 59,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "3507:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 60,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "3511:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3507:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 66,
														"nodeType": "IfStatement",
														"src": "3503:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 62,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3522:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3529:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 64,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3521:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 52,
															"id": 65,
															"nodeType": "Return",
															"src": "3514:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 67,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3553:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 68,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "3559:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 69,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3552:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 52,
														"id": 70,
														"nodeType": "Return",
														"src": "3545:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "3226:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "3371:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3386:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3378:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3397:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3389:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:22:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3423:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3423:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3429:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3422:15:0"
									},
									"scope": 350,
									"src": "3362:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3799:113:0",
										"statements": [
											{
												"id": 99,
												"nodeType": "UncheckedBlock",
												"src": "3809:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "3837:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 86,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "3841:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3837:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 92,
														"nodeType": "IfStatement",
														"src": "3833:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 88,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3852:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 89,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3859:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 90,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3851:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 84,
															"id": 91,
															"nodeType": "Return",
															"src": "3844:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3883:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 94,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 76,
																		"src": "3889:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 95,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 78,
																		"src": "3893:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3889:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 97,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3882:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 84,
														"id": 98,
														"nodeType": "Return",
														"src": "3875:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "3584:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "3732:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3747:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3739:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3758:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3750:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:22:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3784:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 80,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3784:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3783:15:0"
									},
									"scope": 350,
									"src": "3723:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "4136:417:0",
										"statements": [
											{
												"id": 141,
												"nodeType": "UncheckedBlock",
												"src": "4146:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 113,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "4404:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4409:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4404:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 120,
														"nodeType": "IfStatement",
														"src": "4400:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4420:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4426:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 118,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4419:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 112,
															"id": 119,
															"nodeType": "Return",
															"src": "4412:16:0"
														}
													},
													{
														"assignments": [
															122
														],
														"declarations": [
															{
																"constant": false,
																"id": 122,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "4450:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 141,
																"src": "4442:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 121,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4442:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 126,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "4454:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "4458:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4454:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4442:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 127,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "4477:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 128,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "4481:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4477:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 130,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "4486:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4477:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 136,
														"nodeType": "IfStatement",
														"src": "4473:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4497:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4504:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 134,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4496:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 112,
															"id": 135,
															"nodeType": "Return",
															"src": "4489:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4528:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 138,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "4534:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 139,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4527:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 112,
														"id": 140,
														"nodeType": "Return",
														"src": "4520:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "3918:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "4069:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4084:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "4076:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4095:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "4087:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:22:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "4121:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4121:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "4127:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4120:15:0"
									},
									"scope": 350,
									"src": "4060:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "4778:114:0",
										"statements": [
											{
												"id": 169,
												"nodeType": "UncheckedBlock",
												"src": "4788:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 155,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "4816:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4821:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4816:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 162,
														"nodeType": "IfStatement",
														"src": "4812:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4832:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4839:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4831:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 154,
															"id": 161,
															"nodeType": "Return",
															"src": "4824:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4863:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 164,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4869:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 165,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 148,
																		"src": "4873:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4869:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 167,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4862:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 154,
														"id": 168,
														"nodeType": "Return",
														"src": "4855:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "4559:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "4711:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4726:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4718:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4737:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4729:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:22:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4763:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4763:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4769:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4762:15:0"
									},
									"scope": 350,
									"src": "4702:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5127:114:0",
										"statements": [
											{
												"id": 197,
												"nodeType": "UncheckedBlock",
												"src": "5137:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 183,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "5165:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5170:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5165:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 190,
														"nodeType": "IfStatement",
														"src": "5161:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5181:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5188:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 188,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5180:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 182,
															"id": 189,
															"nodeType": "Return",
															"src": "5173:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 192,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "5218:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 193,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 176,
																		"src": "5222:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5218:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 195,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5211:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 182,
														"id": 196,
														"nodeType": "Return",
														"src": "5204:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "4898:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "5060:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5075:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5067:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5067:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5086:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5078:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5066:22:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5112:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 178,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5112:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5118:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5118:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5111:15:0"
									},
									"scope": 350,
									"src": "5051:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "5543:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 209,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "5560:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 210,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "5564:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5560:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 208,
												"id": 212,
												"nodeType": "Return",
												"src": "5553:12:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5247:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5485:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "5489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5508:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "5500:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5500:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5488:22:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "5534:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5533:9:0"
									},
									"scope": 350,
									"src": "5476:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "5910:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 224,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "5927:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 225,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "5931:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5927:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 227,
												"nodeType": "Return",
												"src": "5920:12:0"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "5578:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5852:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5864:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "5856:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5875:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "5867:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5855:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "5901:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5900:9:0"
									},
									"scope": 350,
									"src": "5843:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "6253:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 239,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "6270:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 240,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "6274:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6270:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 238,
												"id": 242,
												"nodeType": "Return",
												"src": "6263:12:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "5945:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "6195:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6207:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6199:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6218:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6210:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:22:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6244:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6244:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6243:9:0"
									},
									"scope": 350,
									"src": "6186:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "6638:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 254,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "6655:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 255,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "6659:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6655:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 253,
												"id": 257,
												"nodeType": "Return",
												"src": "6648:12:0"
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "6288:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "6580:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6592:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "6584:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6603:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "6595:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6583:22:0"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "6629:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6628:9:0"
									},
									"scope": 350,
									"src": "6571:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "7187:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 269,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "7204:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 270,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "7208:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7204:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 268,
												"id": 272,
												"nodeType": "Return",
												"src": "7197:12:0"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "6673:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "7129:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7141:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "7133:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7152:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "7144:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7132:22:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "7178:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7177:9:0"
									},
									"scope": 350,
									"src": "7120:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "7805:106:0",
										"statements": [
											{
												"id": 297,
												"nodeType": "UncheckedBlock",
												"src": "7815:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 287,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 279,
																		"src": "7847:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 288,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 277,
																		"src": "7852:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7847:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 290,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "7855:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 286,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "7839:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7839:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 292,
														"nodeType": "ExpressionStatement",
														"src": "7839:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 293,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "7889:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 294,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 279,
																"src": "7893:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7889:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 285,
														"id": 296,
														"nodeType": "Return",
														"src": "7882:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "7222:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "7689:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7710:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "7702:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7729:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "7721:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7754:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "7740:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 280,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7740:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7692:80:0"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "7796:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7795:9:0"
									},
									"scope": 350,
									"src": "7680:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "8520:105:0",
										"statements": [
											{
												"id": 322,
												"nodeType": "UncheckedBlock",
												"src": "8530:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 312,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "8562:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8566:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "8562:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 315,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "8569:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 311,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "8554:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8554:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 317,
														"nodeType": "ExpressionStatement",
														"src": "8554:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "8603:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 319,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "8607:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8603:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 310,
														"id": 321,
														"nodeType": "Return",
														"src": "8596:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "7917:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "8404:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8425:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "8417:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8444:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "8436:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8469:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "8455:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 305,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8455:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8407:80:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "8511:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8510:9:0"
									},
									"scope": 350,
									"src": "8395:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "9396:105:0",
										"statements": [
											{
												"id": 347,
												"nodeType": "UncheckedBlock",
												"src": "9406:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 337,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "9438:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9442:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9438:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 340,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "9445:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 336,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "9430:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9430:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 342,
														"nodeType": "ExpressionStatement",
														"src": "9430:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 343,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "9479:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 344,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "9483:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9479:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 335,
														"id": 346,
														"nodeType": "Return",
														"src": "9472:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "8631:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "9280:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9301:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "9293:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9320:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "9312:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9345:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "9331:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 330,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9331:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9283:80:0"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "9387:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9386:9:0"
									},
									"scope": 350,
									"src": "9271:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2266,
							"src": "3203:6300:0",
							"usedErrors": []
						},
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "9627:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 352,
								"nodeType": "StructuredDocumentation",
								"src": "9652:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 644,
							"linearizedBaseContracts": [
								644
							],
							"name": "Address",
							"nameLocation": "9728:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "10767:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 360,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "10991:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "10991:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10991:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11013:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10991:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 359,
												"id": 365,
												"nodeType": "Return",
												"src": "10984:30:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "9742:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "10710:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10729:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "10721:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10721:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10720:17:0"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "10761:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10761:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:6:0"
									},
									"scope": 644,
									"src": "10701:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "12009:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 378,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12035:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$644",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$644",
																				"typeString": "library Address"
																			}
																		],
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12027:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 376,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12027:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12027:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "12027:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 381,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "12052:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12027:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12060:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 375,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12019:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12019:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "12019:73:0"
											},
											{
												"assignments": [
													387,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "12109:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 400,
														"src": "12104:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 386,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12104:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 394,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12152:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 388,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "12122:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "12122:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 390,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "12144:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "12122:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12122:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12103:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 396,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "12173:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12182:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 395,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12165:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "12165:78:0"
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "11027:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "11947:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "11973:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "11957:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11957:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11992:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "11984:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11956:43:0"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12009:0:0"
									},
									"scope": 644,
									"src": "11938:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "13081:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 412,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "13111:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 413,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "13119:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13125:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 411,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															418,
															438
														],
														"referencedDeclaration": 438,
														"src": "13098:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13098:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 410,
												"id": 416,
												"nodeType": "Return",
												"src": "13091:67:0"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "12256:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "13001:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13022:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "13014:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13043:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "13030:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13030:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13013:35:0"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "13067:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 408,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13067:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13066:14:0"
									},
									"scope": 644,
									"src": "12992:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "13534:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 431,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "13573:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 432,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "13581:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13587:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 434,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "13590:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 430,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															458,
															508
														],
														"referencedDeclaration": 508,
														"src": "13551:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13551:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 429,
												"id": 436,
												"nodeType": "Return",
												"src": "13544:59:0"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "13171:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "13396:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13426:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "13418:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13455:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "13442:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 422,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13442:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13483:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "13469:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 424,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13469:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13408:93:0"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "13520:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 427,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13520:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13519:14:0"
									},
									"scope": 644,
									"src": "13387:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "14115:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 451,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "14154:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 452,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "14162:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 453,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "14168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14175:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 450,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															458,
															508
														],
														"referencedDeclaration": 508,
														"src": "14132:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14132:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 449,
												"id": 456,
												"nodeType": "Return",
												"src": "14125:94:0"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "13616:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "13981:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14020:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "14012:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14012:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14049:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "14036:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 442,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14036:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14071:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "14063:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14002:80:0"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "14101:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 447,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14101:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14100:14:0"
									},
									"scope": 644,
									"src": "13972:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "14653:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 475,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "14679:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$644",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$644",
																				"typeString": "library Address"
																			}
																		],
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14671:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 473,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14671:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14671:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "14671:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 478,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "14696:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14671:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14703:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14663:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14663:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "14663:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 485,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "14773:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 484,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "14762:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14762:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14782:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14754:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14754:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "14754:60:0"
											},
											{
												"assignments": [
													491,
													493
												],
												"declarations": [
													{
														"constant": false,
														"id": 491,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14831:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 507,
														"src": "14826:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 490,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14826:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 493,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "14853:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 507,
														"src": "14840:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 492,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14840:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 500,
												"initialValue": {
													"arguments": [
														{
															"id": 498,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "14893:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 494,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "14867:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "14867:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 496,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "14886:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "14867:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14867:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14825:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 502,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "14932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 503,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "14941:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 504,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "14953:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 501,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "14915:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14915:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 471,
												"id": 506,
												"nodeType": "Return",
												"src": "14908:58:0"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "14232:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "14483:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14522:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "14514:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14551:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "14538:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14538:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14573:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "14565:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14602:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "14588:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 466,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14588:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14504:116:0"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "14639:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14639:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14638:14:0"
									},
									"scope": 644,
									"src": "14474:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "15250:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 519,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "15286:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "15294:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15300:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 518,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															525,
															560
														],
														"referencedDeclaration": 560,
														"src": "15267:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15267:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 517,
												"id": 523,
												"nodeType": "Return",
												"src": "15260:80:0"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "14979:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "15159:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "15186:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "15178:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15178:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "15194:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 512,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15194:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15177:35:0"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "15236:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15236:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15235:14:0"
									},
									"scope": 644,
									"src": "15150:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "15689:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 539,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "15718:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 538,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "15707:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15707:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15727:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 537,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15699:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15699:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "15699:67:0"
											},
											{
												"assignments": [
													545,
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15783:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 559,
														"src": "15778:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 544,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15778:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "15805:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 559,
														"src": "15792:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 546,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15792:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 552,
												"initialValue": {
													"arguments": [
														{
															"id": 550,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "15837:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 548,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "15819:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "15819:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15819:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15777:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 554,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "15876:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 555,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "15885:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 556,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "15897:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 553,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "15859:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15859:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 536,
												"id": 558,
												"nodeType": "Return",
												"src": "15852:58:0"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "15353:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "15540:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "15576:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "15568:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15605:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "15592:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15592:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "15633:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "15619:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 531,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15619:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15558:93:0"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "15675:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15675:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15674:14:0"
									},
									"scope": 644,
									"src": "15531:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "16193:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 571,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "16231:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "16239:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16245:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 570,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															577,
															612
														],
														"referencedDeclaration": 612,
														"src": "16210:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16210:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 569,
												"id": 575,
												"nodeType": "Return",
												"src": "16203:84:0"
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "15923:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "16105:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "16134:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "16126:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16155:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "16142:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16142:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16125:35:0"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "16179:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16179:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16178:14:0"
									},
									"scope": 644,
									"src": "16096:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "16635:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 591,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "16664:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 590,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "16653:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16653:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16673:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16645:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16645:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "16645:69:0"
											},
											{
												"assignments": [
													597,
													599
												],
												"declarations": [
													{
														"constant": false,
														"id": 597,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16731:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 611,
														"src": "16726:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 596,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16726:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 599,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "16753:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 611,
														"src": "16740:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 598,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16740:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 604,
												"initialValue": {
													"arguments": [
														{
															"id": 602,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "16787:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 600,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "16767:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "16767:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16767:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16725:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 606,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "16826:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 607,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "16835:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 608,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "16847:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 605,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "16809:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16809:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 588,
												"id": 610,
												"nodeType": "Return",
												"src": "16802:58:0"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "16300:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "16489:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "16527:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "16519:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16519:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16556:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "16543:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16543:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "16584:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "16570:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 583,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16570:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16509:93:0"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "16621:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16621:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16620:14:0"
									},
									"scope": 644,
									"src": "16480:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "17247:582:0",
										"statements": [
											{
												"condition": {
													"id": 624,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 615,
													"src": "17261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 640,
													"nodeType": "Block",
													"src": "17318:505:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "17402:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "17402:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17422:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17402:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 638,
																"nodeType": "Block",
																"src": "17760:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 635,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 619,
																					"src": "17785:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 634,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "17778:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17778:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 637,
																		"nodeType": "ExpressionStatement",
																		"src": "17778:20:0"
																	}
																]
															},
															"id": 639,
															"nodeType": "IfStatement",
															"src": "17398:415:0",
															"trueBody": {
																"id": 633,
																"nodeType": "Block",
																"src": "17425:329:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "17595:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "17617:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "17646:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "17640:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17640:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "17621:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "17689:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "17693:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "17685:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "17685:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "17706:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "17678:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17678:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "17678:44:0"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 617,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "17646:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 617,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "17693:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 632,
																		"nodeType": "InlineAssembly",
																		"src": "17586:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 641,
												"nodeType": "IfStatement",
												"src": "17257:566:0",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "17270:42:0",
													"statements": [
														{
															"expression": {
																"id": 625,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "17291:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 623,
															"id": 626,
															"nodeType": "Return",
															"src": "17284:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "16873:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "17096:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "17127:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "17122:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17122:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "17157:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "17144:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 616,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17144:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "17191:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "17177:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 618,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17177:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17112:97:0"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "17233:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17233:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17232:14:0"
									},
									"scope": 644,
									"src": "17087:742:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2266,
							"src": "9720:8111:0",
							"usedErrors": []
						},
						{
							"id": 645,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17996:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 646,
								"nodeType": "StructuredDocumentation",
								"src": "18021:480:0",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 679,
							"linearizedBaseContracts": [
								679
							],
							"name": "IERC20Permit",
							"nameLocation": "18512:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "18531:792:0",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "19337:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19361:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "19353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19384:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "19376:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19409:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "19401:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "19432:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "19424:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "19456:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "19450:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 656,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "19450:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "19475:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "19467:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 658,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "19494:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "19486:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 660,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19343:158:0"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19510:0:0"
									},
									"scope": 679,
									"src": "19328:183:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "19517:294:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "19825:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19840:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "19832:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19831:15:0"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "19870:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19869:9:0"
									},
									"scope": 679,
									"src": "19816:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "19885:128:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "20080:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20096:2:0"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "20122:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 675,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20121:9:0"
									},
									"scope": 679,
									"src": "20071:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2266,
							"src": "18502:1631:0",
							"usedErrors": []
						},
						{
							"id": 680,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "20242:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 681,
								"nodeType": "StructuredDocumentation",
								"src": "20267:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 700,
							"linearizedBaseContracts": [
								700
							],
							"name": "Context",
							"nameLocation": "20782:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "20858:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 686,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "20875:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "20875:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 685,
												"id": 688,
												"nodeType": "Return",
												"src": "20868:17:0"
											}
										]
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "20805:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20815:2:0"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "20849:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20848:9:0"
									},
									"scope": 700,
									"src": "20796:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "20965:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 695,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "20982:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "20982:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 694,
												"id": 697,
												"nodeType": "Return",
												"src": "20975:15:0"
											}
										]
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "20907:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20915:2:0"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "20949:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20949:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20948:16:0"
									},
									"scope": 700,
									"src": "20898:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2266,
							"src": "20764:235:0",
							"usedErrors": []
						},
						{
							"id": 701,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "21125:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 703,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 700,
										"src": "21675:7:0"
									},
									"id": 704,
									"nodeType": "InheritanceSpecifier",
									"src": "21675:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 702,
								"nodeType": "StructuredDocumentation",
								"src": "21151:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 811,
							"linearizedBaseContracts": [
								811,
								700
							],
							"name": "Ownable",
							"nameLocation": "21664:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 706,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "21705:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 811,
									"src": "21689:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 705,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "21689:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 712,
									"name": "OwnershipTransferred",
									"nameLocation": "21724:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "21761:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "21745:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21792:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "21776:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21744:57:0"
									},
									"src": "21718:84:0"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "21918:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 717,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "21947:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21947:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 716,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "21928:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21928:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "21928:32:0"
											}
										]
									},
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "21808:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 722,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21915:2:0"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21918:0:0"
									},
									"scope": 811,
									"src": "21904:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "22076:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 725,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "22086:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22086:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "22086:13:0"
											},
											{
												"id": 728,
												"nodeType": "PlaceholderStatement",
												"src": "22109:1:0"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21973:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 730,
									"name": "onlyOwner",
									"nameLocation": "22064:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22073:2:0"
									},
									"src": "22055:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "22248:30:0",
										"statements": [
											{
												"expression": {
													"id": 736,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 706,
													"src": "22265:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 735,
												"id": 737,
												"nodeType": "Return",
												"src": "22258:13:0"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "22123:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "22202:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22207:2:0"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "22239:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22238:9:0"
									},
									"scope": 811,
									"src": "22193:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "22396:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 744,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "22414:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22414:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 746,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "22425:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22425:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "22414:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22439:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 743,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22406:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22406:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "22406:68:0"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "22284:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "22360:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22371:2:0"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22396:0:0"
									},
									"scope": 811,
									"src": "22351:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "22877:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22914:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22906:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 760,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22906:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22906:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 759,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "22887:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22887:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "22887:30:0"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "22487:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 757,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 756,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 730,
												"src": "22867:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22867:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "22832:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22849:2:0"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22877:0:0"
									},
									"scope": 811,
									"src": "22823:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "23143:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 776,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "23161:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23181:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23173:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 777,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "23173:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23173:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "23161:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23185:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 775,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23153:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23153:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "23153:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 786,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "23255:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 785,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "23236:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23236:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "23236:28:0"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "22930:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 773,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 772,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 730,
												"src": "23133:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23133:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "23082:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "23108:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "23100:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23099:18:0"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23143:0:0"
									},
									"scope": 811,
									"src": "23073:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "23488:124:0",
										"statements": [
											{
												"assignments": [
													797
												],
												"declarations": [
													{
														"constant": false,
														"id": 797,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "23506:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 809,
														"src": "23498:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 796,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23498:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 799,
												"initialValue": {
													"id": 798,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 706,
													"src": "23517:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23498:25:0"
											},
											{
												"expression": {
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 800,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "23533:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 801,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "23542:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23533:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "23533:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 805,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "23586:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "23596:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 804,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "23565:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23565:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "EmitStatement",
												"src": "23560:45:0"
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "23277:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "23434:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "23461:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "23453:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23452:18:0"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23488:0:0"
									},
									"scope": 811,
									"src": "23425:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2266,
							"src": "21646:1968:0",
							"usedErrors": []
						},
						{
							"id": 812,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "23748:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 813,
								"nodeType": "StructuredDocumentation",
								"src": "23773:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 888,
							"linearizedBaseContracts": [
								888
							],
							"name": "IERC20",
							"nameLocation": "23854:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "23867:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 822,
									"name": "Transfer",
									"nameLocation": "24036:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24061:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "24045:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24045:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24083:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "24067:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24067:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24095:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "24087:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24044:57:0"
									},
									"src": "24030:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "24108:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 831,
									"name": "Approval",
									"nameLocation": "24267:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "24292:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "24276:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "24315:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "24299:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24299:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24332:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "24324:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24275:63:0"
									},
									"src": "24261:78:0"
								},
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "24345:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "24425:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24436:2:0"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "24462:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24461:9:0"
									},
									"scope": 888,
									"src": "24416:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "24477:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "24563:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "24581:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "24573:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24572:17:0"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "24613:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24612:9:0"
									},
									"scope": 888,
									"src": "24554:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "24628:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 855,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "24844:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24861:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "24853:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24853:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24873:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "24865:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:28:0"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "24899:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 852,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24899:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24898:6:0"
									},
									"scope": 888,
									"src": "24835:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "24911:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 865,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "25189:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "25207:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "25199:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25222:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "25214:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25214:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25198:32:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "25254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25253:9:0"
									},
									"scope": 888,
									"src": "25180:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "25269:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 875,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "25925:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25941:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "25933:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25933:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25958:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "25950:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25932:33:0"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "25984:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 872,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25984:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25983:6:0"
									},
									"scope": 888,
									"src": "25916:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "25996:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 887,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "26297:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26327:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "26319:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26319:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26349:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "26341:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26369:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "26361:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26309:72:0"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "26400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 884,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26399:6:0"
									},
									"scope": 888,
									"src": "26288:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2266,
							"src": "23844:2564:0",
							"usedErrors": []
						},
						{
							"id": 889,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "26560:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 890,
								"nodeType": "StructuredDocumentation",
								"src": "26588:457:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1165,
							"linearizedBaseContracts": [
								1165
							],
							"name": "SafeERC20",
							"nameLocation": "27054:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 893,
									"libraryName": {
										"id": 891,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 644,
										"src": "27076:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "27070:26:0",
									"typeName": {
										"id": 892,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "27088:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "27204:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "27234:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 907,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 896,
																			"src": "27264:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$888",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 855,
																		"src": "27264:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "27264:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 910,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "27289:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 911,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "27293:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 905,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "27241:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "27241:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27241:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 903,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "27214:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$888_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27214:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "27214:86:0"
											}
										]
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "27111:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "27140:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "27133:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$888",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 895,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 894,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "27133:6:0"
													},
													"referencedDeclaration": 888,
													"src": "27133:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$888",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27163:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "27155:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27155:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27183:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "27175:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27123:71:0"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27204:0:0"
									},
									"scope": 1165,
									"src": "27102:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "27441:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "27471:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 932,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 919,
																			"src": "27501:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$888",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 887,
																		"src": "27501:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "27501:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 935,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "27530:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 936,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "27536:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 937,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "27540:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 930,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "27478:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "27478:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27478:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 928,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "27451:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$888_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27451:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "27451:96:0"
											}
										]
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "27322:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "27355:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "27348:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$888",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 918,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 917,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "27348:6:0"
													},
													"referencedDeclaration": 888,
													"src": "27348:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$888",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27378:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "27370:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27400:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "27392:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27420:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "27412:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27338:93:0"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27441:0:0"
									},
									"scope": 1165,
									"src": "27313:241:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "27920:497:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 954,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 950,
																			"src": "28169:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28178:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "28169:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 957,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "28168:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 962,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "28209:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1165",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1165",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 961,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "28201:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 960,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "28201:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 963,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28201:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 964,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 948,
																					"src": "28216:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 958,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 946,
																					"src": "28185:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$888",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 959,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 865,
																				"src": "28185:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28185:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28228:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "28185:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 968,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "28184:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "28168:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28244:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28147:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28147:163:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "28147:163:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 974,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "28340:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 977,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "28370:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$888",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 875,
																		"src": "28370:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "28370:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 980,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "28394:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 981,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "28403:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 975,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "28347:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "28347:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28347:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 973,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "28320:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$888_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28320:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "28320:90:0"
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "27560:249:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "27823:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "27851:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "27844:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$888",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 944,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "27844:6:0"
													},
													"referencedDeclaration": 888,
													"src": "27844:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$888",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "27874:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "27866:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27899:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "27891:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27834:76:0"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27920:0:0"
									},
									"scope": 1165,
									"src": "27814:603:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "28539:194:0",
										"statements": [
											{
												"assignments": [
													997
												],
												"declarations": [
													{
														"constant": false,
														"id": 997,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "28557:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "28549:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 996,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28549:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1008,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1002,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "28596:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1165",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1165",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28588:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28588:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28588:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1004,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 991,
																"src": "28603:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 998,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "28572:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$888",
																	"typeString": "contract IERC20"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 865,
															"src": "28572:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28572:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1006,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "28614:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28572:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28549:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1010,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "28649:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1013,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 989,
																			"src": "28679:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$888",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 875,
																		"src": "28679:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "28679:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1016,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 991,
																	"src": "28703:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1017,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "28712:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1011,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "28656:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "28656:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28656:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1009,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "28629:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$888_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28629:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "28629:97:0"
											}
										]
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "28432:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "28470:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "28463:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$888",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 988,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 987,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "28463:6:0"
													},
													"referencedDeclaration": 888,
													"src": "28463:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$888",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "28493:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "28485:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28518:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "28510:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28453:76:0"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28539:0:0"
									},
									"scope": 1165,
									"src": "28423:310:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "28855:370:0",
										"statements": [
											{
												"id": 1068,
												"nodeType": "UncheckedBlock",
												"src": "28865:354:0",
												"statements": [
													{
														"assignments": [
															1033
														],
														"declarations": [
															{
																"constant": false,
																"id": 1033,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "28897:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 1068,
																"src": "28889:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1032,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28889:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1042,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1038,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "28936:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1165",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1165",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "28928:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1036,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "28928:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28928:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1040,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "28943:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1034,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "28912:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$888",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 865,
																"src": "28912:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28912:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "28889:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1044,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1033,
																		"src": "28973:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1045,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "28989:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "28973:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28996:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1043,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "28965:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28965:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1049,
														"nodeType": "ExpressionStatement",
														"src": "28965:75:0"
													},
													{
														"assignments": [
															1051
														],
														"declarations": [
															{
																"constant": false,
																"id": 1051,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "29062:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 1068,
																"src": "29054:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1050,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29054:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1055,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1052,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "29077:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1053,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "29092:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29077:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29054:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1057,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "29131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$888",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1060,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "29161:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$888",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1061,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 875,
																				"src": "29161:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "29161:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1063,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1027,
																			"src": "29185:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1064,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "29194:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1058,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "29138:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "29138:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29138:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$888",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1056,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "29111:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$888_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29111:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1067,
														"nodeType": "ExpressionStatement",
														"src": "29111:97:0"
													}
												]
											}
										]
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "28748:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "28786:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "28779:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$888",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1024,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1023,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "28779:6:0"
													},
													"referencedDeclaration": 888,
													"src": "28779:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$888",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "28809:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "28801:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28801:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28834:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "28826:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28769:76:0"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28855:0:0"
									},
									"scope": 1165,
									"src": "28739:486:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "29446:257:0",
										"statements": [
											{
												"assignments": [
													1091
												],
												"declarations": [
													{
														"constant": false,
														"id": 1091,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "29464:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1125,
														"src": "29456:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1090,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29456:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"arguments": [
														{
															"id": 1094,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "29491:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1092,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "29478:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$679",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 672,
														"src": "29478:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29478:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29456:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1100,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "29520:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1101,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "29527:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1102,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "29536:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1103,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "29543:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1104,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "29553:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1105,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "29556:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1106,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "29559:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1097,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "29507:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$679",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 664,
														"src": "29507:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29507:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "29507:54:0"
											},
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "29579:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1125,
														"src": "29571:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29571:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1115,
												"initialValue": {
													"arguments": [
														{
															"id": 1113,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "29605:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1111,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "29592:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$679",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 672,
														"src": "29592:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29592:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29571:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1117,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "29629:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1118,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "29643:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29657:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "29643:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29629:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29660:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 1116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29621:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29621:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "29621:75:0"
											}
										]
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "29240:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "29273:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "29260:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$679",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 1072,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1071,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 679,
														"src": "29260:12:0"
													},
													"referencedDeclaration": 679,
													"src": "29260:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$679",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "29296:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "29288:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "29319:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "29311:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29344:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "29336:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "29367:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "29359:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "29391:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "29385:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1082,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "29385:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "29410:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "29402:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1084,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "29402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "29429:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "29421:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1086,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "29421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29250:186:0"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29446:0:0"
									},
									"scope": 1165,
									"src": "29231:472:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "30156:636:0",
										"statements": [
											{
												"assignments": [
													1136
												],
												"declarations": [
													{
														"constant": false,
														"id": 1136,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "30518:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "30505:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1135,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "30505:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1145,
												"initialValue": {
													"arguments": [
														{
															"id": 1142,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "30559:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30565:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1139,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1130,
																	"src": "30539:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$888",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$888",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30531:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30531:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30531:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 438,
														"src": "30531:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30531:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30505:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1146,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "30614:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "30614:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30634:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30614:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1162,
												"nodeType": "IfStatement",
												"src": "30610:176:0",
												"trueBody": {
													"id": 1161,
													"nodeType": "Block",
													"src": "30637:149:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1153,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1136,
																				"src": "30709:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1155,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "30722:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1154,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "30722:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1156,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "30721:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1151,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "30698:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "30698:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30698:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30730:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1150,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "30690:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30690:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1160,
															"nodeType": "ExpressionStatement",
															"src": "30690:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "29709:372:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "30095:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "30122:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "30115:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$888",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1129,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1128,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "30115:6:0"
													},
													"referencedDeclaration": 888,
													"src": "30115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$888",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "30142:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "30129:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1131,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30129:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30114:33:0"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30156:0:0"
									},
									"scope": 1165,
									"src": "30086:706:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2266,
							"src": "27046:3748:0",
							"usedErrors": []
						},
						{
							"id": 1166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "30951:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1168,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 888,
										"src": "31122:6:0"
									},
									"id": 1169,
									"nodeType": "InheritanceSpecifier",
									"src": "31122:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1167,
								"nodeType": "StructuredDocumentation",
								"src": "30977:116:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1188,
							"linearizedBaseContracts": [
								1188,
								888
							],
							"name": "IERC20Metadata",
							"nameLocation": "31104:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "31135:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "31203:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31207:2:0"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "31233:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1172,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "31233:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31232:15:0"
									},
									"scope": 1188,
									"src": "31194:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "31254:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "31324:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31330:2:0"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "31356:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1178,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "31356:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31355:15:0"
									},
									"scope": 1188,
									"src": "31315:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "31377:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "31456:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31464:2:0"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "31490:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1184,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "31490:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31489:7:0"
									},
									"scope": 1188,
									"src": "31447:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2266,
							"src": "31094:405:0",
							"usedErrors": []
						},
						{
							"id": 1189,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31631:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1191,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 700,
										"src": "32850:7:0"
									},
									"id": 1192,
									"nodeType": "InheritanceSpecifier",
									"src": "32850:7:0"
								},
								{
									"baseName": {
										"id": 1193,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 888,
										"src": "32859:6:0"
									},
									"id": 1194,
									"nodeType": "InheritanceSpecifier",
									"src": "32859:6:0"
								},
								{
									"baseName": {
										"id": 1195,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1188,
										"src": "32867:14:0"
									},
									"id": 1196,
									"nodeType": "InheritanceSpecifier",
									"src": "32867:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1190,
								"nodeType": "StructuredDocumentation",
								"src": "31659:1172:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1770,
							"linearizedBaseContracts": [
								1770,
								1188,
								888,
								700
							],
							"name": "ERC20",
							"nameLocation": "32841:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1200,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "32924:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1770,
									"src": "32888:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1199,
										"keyType": {
											"id": 1197,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "32896:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "32888:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1198,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "32907:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1206,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "32996:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1770,
									"src": "32940:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1205,
										"keyType": {
											"id": 1201,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "32948:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "32940:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1204,
											"keyType": {
												"id": 1202,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "32967:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "32959:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1203,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "32978:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1208,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "33030:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1770,
									"src": "33014:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1207,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "33014:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1210,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "33064:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1770,
									"src": "33049:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1209,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "33049:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1212,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "33090:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1770,
									"src": "33075:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1211,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "33075:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "33463:57:0",
										"statements": [
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1220,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "33473:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "33481:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "33473:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "33473:13:0"
											},
											{
												"expression": {
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1224,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "33496:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1225,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "33506:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "33496:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "33496:17:0"
											}
										]
									},
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "33104:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1229,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "33433:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "33419:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "33419:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "33454:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "33440:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "33440:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33418:44:0"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33463:0:0"
									},
									"scope": 1770,
									"src": "33407:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1175
									],
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "33654:29:0",
										"statements": [
											{
												"expression": {
													"id": 1236,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1210,
													"src": "33671:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1235,
												"id": 1237,
												"nodeType": "Return",
												"src": "33664:12:0"
											}
										]
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "33526:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "33594:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1232,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "33621:8:0"
									},
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33598:2:0"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "33639:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "33639:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33638:15:0"
									},
									"scope": 1770,
									"src": "33585:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1181
									],
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "33867:31:0",
										"statements": [
											{
												"expression": {
													"id": 1246,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1212,
													"src": "33884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1245,
												"id": 1247,
												"nodeType": "Return",
												"src": "33877:14:0"
											}
										]
									},
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "33689:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "33805:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1242,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "33834:8:0"
									},
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33811:2:0"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "33852:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1243,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "33852:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33851:15:0"
									},
									"scope": 1770,
									"src": "33796:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "34587:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "34604:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 1255,
												"id": 1257,
												"nodeType": "Return",
												"src": "34597:9:0"
											}
										]
									},
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "33904:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "34531:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1252,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "34562:8:0"
									},
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34539:2:0"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "34580:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1253,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "34580:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34579:7:0"
									},
									"scope": 1770,
									"src": "34522:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										837
									],
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "34743:36:0",
										"statements": [
											{
												"expression": {
													"id": 1266,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1208,
													"src": "34760:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1265,
												"id": 1267,
												"nodeType": "Return",
												"src": "34753:19:0"
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "34619:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "34682:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1262,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "34716:8:0"
									},
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34693:2:0"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "34734:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34734:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34733:9:0"
									},
									"scope": 1770,
									"src": "34673:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										845
									],
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "34920:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1278,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "34937:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1280,
													"indexExpression": {
														"id": 1279,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "34947:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34937:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1277,
												"id": 1281,
												"nodeType": "Return",
												"src": "34930:25:0"
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "34785:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "34846:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1274,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "34893:8:0"
									},
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "34864:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "34856:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34856:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34855:17:0"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "34911:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34910:9:0"
									},
									"scope": 1770,
									"src": "34837:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										855
									],
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "35243:104:0",
										"statements": [
											{
												"assignments": [
													1295
												],
												"declarations": [
													{
														"constant": false,
														"id": 1295,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "35261:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "35253:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1294,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35253:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1298,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1296,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "35269:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35269:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35253:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1300,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "35301:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "35308:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "35312:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1299,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1531,
														"src": "35291:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35291:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "35291:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "35336:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1293,
												"id": 1306,
												"nodeType": "Return",
												"src": "35329:11:0"
											}
										]
									},
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "34968:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "35167:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1290,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35219:8:0"
									},
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35184:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "35176:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "35196:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "35188:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35175:28:0"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "35237:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35237:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35236:6:0"
									},
									"scope": 1770,
									"src": "35158:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										865
									],
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "35503:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1319,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "35520:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1321,
														"indexExpression": {
															"id": 1320,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "35532:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "35520:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1323,
													"indexExpression": {
														"id": 1322,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "35539:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35520:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1318,
												"id": 1324,
												"nodeType": "Return",
												"src": "35513:34:0"
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "35353:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "35414:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1315,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35476:8:0"
									},
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "35432:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "35424:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "35447:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "35439:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35423:32:0"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "35494:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35493:9:0"
									},
									"scope": 1770,
									"src": "35405:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										875
									],
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "35951:108:0",
										"statements": [
											{
												"assignments": [
													1338
												],
												"declarations": [
													{
														"constant": false,
														"id": 1338,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "35969:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1350,
														"src": "35961:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1337,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35961:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1341,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1339,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "35977:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35977:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35961:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1343,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "36008:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1344,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "36015:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1345,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "36024:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1342,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1704,
														"src": "35999:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35999:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1347,
												"nodeType": "ExpressionStatement",
												"src": "35999:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "36048:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1336,
												"id": 1349,
												"nodeType": "Return",
												"src": "36041:11:0"
											}
										]
									},
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "35560:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "35871:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1333,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35927:8:0"
									},
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "35887:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "35879:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "35904:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "35896:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35878:33:0"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "35945:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35945:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35944:6:0"
									},
									"scope": 1770,
									"src": "35862:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										887
									],
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "36754:153:0",
										"statements": [
											{
												"assignments": [
													1365
												],
												"declarations": [
													{
														"constant": false,
														"id": 1365,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "36772:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1383,
														"src": "36764:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1364,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36764:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1368,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1366,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "36782:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36782:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36764:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1370,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "36820:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1371,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "36826:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1372,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "36835:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1369,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1747,
														"src": "36804:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36804:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1374,
												"nodeType": "ExpressionStatement",
												"src": "36804:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1376,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "36862:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1377,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "36868:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1378,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "36872:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1375,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1531,
														"src": "36852:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36852:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "36852:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "36896:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1363,
												"id": 1382,
												"nodeType": "Return",
												"src": "36889:11:0"
											}
										]
									},
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "36065:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "36630:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1360,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "36730:8:0"
									},
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "36660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "36652:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36682:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "36674:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "36702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "36694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36642:72:0"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "36748:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36748:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36747:6:0"
									},
									"scope": 1770,
									"src": "36621:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "37396:140:0",
										"statements": [
											{
												"assignments": [
													1395
												],
												"declarations": [
													{
														"constant": false,
														"id": 1395,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "37414:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1412,
														"src": "37406:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1394,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "37406:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1398,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1396,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "37422:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37422:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37406:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1400,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "37453:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1401,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "37460:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1403,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1395,
																		"src": "37479:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1404,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1387,
																		"src": "37486:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1402,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1326,
																	"src": "37469:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37469:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1406,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "37497:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37469:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1399,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1704,
														"src": "37444:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37444:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "37444:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "37525:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1393,
												"id": 1411,
												"nodeType": "Return",
												"src": "37518:11:0"
											}
										]
									},
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "36913:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "37311:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "37337:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "37329:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37329:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "37354:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "37346:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37328:37:0"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "37390:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37390:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37389:6:0"
									},
									"scope": 1770,
									"src": "37302:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1453,
										"nodeType": "Block",
										"src": "38122:328:0",
										"statements": [
											{
												"assignments": [
													1424
												],
												"declarations": [
													{
														"constant": false,
														"id": 1424,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "38140:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1453,
														"src": "38132:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1423,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "38132:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1427,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1425,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "38148:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38148:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38132:28:0"
											},
											{
												"assignments": [
													1429
												],
												"declarations": [
													{
														"constant": false,
														"id": 1429,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "38178:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1453,
														"src": "38170:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1428,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38170:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1434,
												"initialValue": {
													"arguments": [
														{
															"id": 1431,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "38207:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1432,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "38214:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1430,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "38197:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38197:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38170:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1436,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1429,
																"src": "38240:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1437,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "38260:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38240:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38277:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 1435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "38232:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38232:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "38232:85:0"
											},
											{
												"id": 1450,
												"nodeType": "UncheckedBlock",
												"src": "38327:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1443,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "38360:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1444,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "38367:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1445,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1429,
																		"src": "38376:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1446,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "38395:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "38376:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1442,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "38351:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38351:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1449,
														"nodeType": "ExpressionStatement",
														"src": "38351:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "38439:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1422,
												"id": 1452,
												"nodeType": "Return",
												"src": "38432:11:0"
											}
										]
									},
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "37542:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 1454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "38032:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "38058:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "38050:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38050:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "38075:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "38067:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38067:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38049:42:0"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "38116:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38116:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38115:6:0"
									},
									"scope": 1770,
									"src": "38023:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "39012:543:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1465,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "39030:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "39046:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "39038:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1466,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "39038:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39038:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "39030:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39050:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1464,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "39022:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39022:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1473,
												"nodeType": "ExpressionStatement",
												"src": "39022:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1475,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1459,
																"src": "39108:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "39122:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "39114:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1476,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "39114:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39114:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "39108:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39126:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1474,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "39100:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39100:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "39100:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1485,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "39196:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1486,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "39202:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1487,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "39206:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1484,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "39175:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39175:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "39175:38:0"
											},
											{
												"assignments": [
													1491
												],
												"declarations": [
													{
														"constant": false,
														"id": 1491,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "39232:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1530,
														"src": "39224:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "39224:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1495,
												"initialValue": {
													"baseExpression": {
														"id": 1492,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "39246:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1494,
													"indexExpression": {
														"id": 1493,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "39256:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "39246:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39224:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1497,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "39279:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1498,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "39294:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39279:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39302:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 1496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "39271:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39271:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "39271:72:0"
											},
											{
												"id": 1511,
												"nodeType": "UncheckedBlock",
												"src": "39353:73:0",
												"statements": [
													{
														"expression": {
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1503,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "39377:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1505,
																"indexExpression": {
																	"id": 1504,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "39387:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "39377:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1506,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1491,
																	"src": "39395:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1507,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1461,
																	"src": "39409:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "39395:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39377:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1510,
														"nodeType": "ExpressionStatement",
														"src": "39377:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1512,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "39435:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1514,
														"indexExpression": {
															"id": 1513,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "39445:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "39435:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1515,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "39452:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39435:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1517,
												"nodeType": "ExpressionStatement",
												"src": "39435:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1519,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "39483:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1520,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "39489:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1521,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "39493:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1518,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "39474:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39474:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1523,
												"nodeType": "EmitStatement",
												"src": "39469:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1525,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "39531:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1526,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "39537:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1527,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "39541:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1524,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "39511:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39511:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1529,
												"nodeType": "ExpressionStatement",
												"src": "39511:37:0"
											}
										]
									},
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "38456:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "38913:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38940:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "38932:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38962:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "38954:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "38982:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "38974:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38974:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38922:72:0"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39012:0:0"
									},
									"scope": 1770,
									"src": "38904:651:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "39896:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1540,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1534,
																"src": "39914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "39933:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "39925:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1541,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "39925:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39925:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "39914:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39937:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "39906:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39906:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1548,
												"nodeType": "ExpressionStatement",
												"src": "39906:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40011:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40003:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1550,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "40003:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40003:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1554,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "40015:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1555,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "40024:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1549,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "39982:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39982:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "39982:49:0"
											},
											{
												"expression": {
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1558,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "40042:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1559,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "40058:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40042:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1561,
												"nodeType": "ExpressionStatement",
												"src": "40042:22:0"
											},
											{
												"expression": {
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1562,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "40074:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1564,
														"indexExpression": {
															"id": 1563,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "40084:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "40074:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1565,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "40096:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40074:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1567,
												"nodeType": "ExpressionStatement",
												"src": "40074:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40134:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40126:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1569,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "40126:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40126:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1573,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "40138:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1574,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "40147:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1568,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "40117:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40117:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1576,
												"nodeType": "EmitStatement",
												"src": "40112:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40193:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40185:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1578,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "40185:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40185:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1582,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "40197:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1583,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "40206:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1577,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "40165:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40165:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "40165:48:0"
											}
										]
									},
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "39561:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "39840:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "39854:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "39846:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "39871:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "39863:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39845:33:0"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39896:0:0"
									},
									"scope": 1770,
									"src": "39831:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "40605:511:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1596,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "40623:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "40642:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "40634:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1597,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "40634:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40634:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "40623:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40646:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1595,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "40615:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40615:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1604,
												"nodeType": "ExpressionStatement",
												"src": "40615:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "40714:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40731:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40723:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1607,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "40723:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40723:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1611,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "40735:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1605,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "40693:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40693:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1613,
												"nodeType": "ExpressionStatement",
												"src": "40693:49:0"
											},
											{
												"assignments": [
													1615
												],
												"declarations": [
													{
														"constant": false,
														"id": 1615,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "40761:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "40753:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1614,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "40753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1619,
												"initialValue": {
													"baseExpression": {
														"id": 1616,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "40778:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1618,
													"indexExpression": {
														"id": 1617,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "40788:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "40778:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40753:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1621,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "40814:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1622,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "40832:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40814:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40840:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 1620,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "40806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40806:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1626,
												"nodeType": "ExpressionStatement",
												"src": "40806:71:0"
											},
											{
												"id": 1635,
												"nodeType": "UncheckedBlock",
												"src": "40887:79:0",
												"statements": [
													{
														"expression": {
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1627,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "40911:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1629,
																"indexExpression": {
																	"id": 1628,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1590,
																	"src": "40921:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "40911:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1630,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1615,
																	"src": "40932:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1631,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "40949:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "40932:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40911:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1634,
														"nodeType": "ExpressionStatement",
														"src": "40911:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1636,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "40975:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1637,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "40991:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40975:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1639,
												"nodeType": "ExpressionStatement",
												"src": "40975:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1641,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "41022:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "41039:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "41031:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1642,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "41031:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41031:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1646,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "41043:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1640,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "41013:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41013:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1648,
												"nodeType": "EmitStatement",
												"src": "41008:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1650,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "41081:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "41098:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "41090:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1651,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "41090:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41090:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1655,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "41102:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1649,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "41061:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41061:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1657,
												"nodeType": "ExpressionStatement",
												"src": "41061:48:0"
											}
										]
									},
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "40226:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "40549:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "40563:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "40555:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "40580:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "40572:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40554:33:0"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40605:0:0"
									},
									"scope": 1770,
									"src": "40540:576:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "41652:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1670,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1662,
																"src": "41670:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "41687:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "41679:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1671,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "41679:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41679:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "41670:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41691:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41662:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41662:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "41662:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1680,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "41748:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "41767:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "41759:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1681,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "41759:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41759:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "41748:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41771:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1679,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41740:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41740:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1688,
												"nodeType": "ExpressionStatement",
												"src": "41740:68:0"
											},
											{
												"expression": {
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1689,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1206,
																"src": "41819:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1692,
															"indexExpression": {
																"id": 1690,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1662,
																"src": "41831:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "41819:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1693,
														"indexExpression": {
															"id": 1691,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "41838:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "41819:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1694,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "41849:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41819:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "41819:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1698,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "41879:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1699,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "41886:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1700,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "41895:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1697,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "41870:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41870:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1702,
												"nodeType": "EmitStatement",
												"src": "41865:37:0"
											}
										]
									},
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "41122:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "41548:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "41574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "41566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "41597:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "41589:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41589:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "41622:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "41614:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41556:78:0"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41652:0:0"
									},
									"scope": 1770,
									"src": "41539:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1746,
										"nodeType": "Block",
										"src": "42310:321:0",
										"statements": [
											{
												"assignments": [
													1715
												],
												"declarations": [
													{
														"constant": false,
														"id": 1715,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "42328:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1746,
														"src": "42320:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1714,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "42320:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1720,
												"initialValue": {
													"arguments": [
														{
															"id": 1717,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "42357:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1718,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "42364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1716,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "42347:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42347:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42320:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1721,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "42386:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "42411:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1723,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "42411:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1722,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "42406:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42406:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "42406:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "42386:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1745,
												"nodeType": "IfStatement",
												"src": "42382:243:0",
												"trueBody": {
													"id": 1744,
													"nodeType": "Block",
													"src": "42425:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1729,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1715,
																			"src": "42447:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1730,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1711,
																			"src": "42467:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "42447:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "42475:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 1728,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "42439:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42439:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1734,
															"nodeType": "ExpressionStatement",
															"src": "42439:68:0"
														},
														{
															"id": 1743,
															"nodeType": "UncheckedBlock",
															"src": "42521:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1736,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1707,
																				"src": "42558:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1737,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1709,
																				"src": "42565:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1740,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1738,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1715,
																					"src": "42574:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1739,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1711,
																					"src": "42593:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "42574:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1735,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1704,
																			"src": "42549:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42549:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1742,
																	"nodeType": "ExpressionStatement",
																	"src": "42549:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1705,
										"nodeType": "StructuredDocumentation",
										"src": "41915:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 1747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "42199:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "42232:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "42224:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42224:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "42255:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "42247:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "42280:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "42272:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42214:78:0"
									},
									"returnParameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42310:0:0"
									},
									"scope": 1770,
									"src": "42190:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1757,
										"nodeType": "Block",
										"src": "43334:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "42637:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "43224:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "43262:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "43254:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43254:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43284:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "43276:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "43304:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "43296:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43244:72:0"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43334:0:0"
									},
									"scope": 1770,
									"src": "43215:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1768,
										"nodeType": "Block",
										"src": "44042:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1759,
										"nodeType": "StructuredDocumentation",
										"src": "43342:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "43933:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "43970:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "43962:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43992:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "43984:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "44012:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "44004:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43952:72:0"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44042:0:0"
									},
									"scope": 1770,
									"src": "43924:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2266,
							"src": "32832:11214:0",
							"usedErrors": []
						},
						{
							"id": 1771,
							"literals": [
								"solidity",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "44084:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"hexValue": "474d44",
											"id": 1773,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "44136:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_717c35953c6bf99c8e18b4fc8ab157eb1aa6d8a42ba1b118ce264c03e5dd2bab",
												"typeString": "literal_string \"GMD\""
											},
											"value": "GMD"
										},
										{
											"hexValue": "474d44",
											"id": 1774,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "44143:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_717c35953c6bf99c8e18b4fc8ab157eb1aa6d8a42ba1b118ce264c03e5dd2bab",
												"typeString": "literal_string \"GMD\""
											},
											"value": "GMD"
										}
									],
									"baseName": {
										"id": 1772,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1770,
										"src": "44130:5:0"
									},
									"id": 1775,
									"nodeType": "InheritanceSpecifier",
									"src": "44130:19:0"
								},
								{
									"baseName": {
										"id": 1776,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "44151:7:0"
									},
									"id": 1777,
									"nodeType": "InheritanceSpecifier",
									"src": "44151:7:0"
								},
								{
									"baseName": {
										"id": 1778,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 39,
										"src": "44161:15:0"
									},
									"id": 1779,
									"nodeType": "InheritanceSpecifier",
									"src": "44161:15:0"
								}
							],
							"canonicalName": "GMD",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2265,
							"linearizedBaseContracts": [
								2265,
								39,
								811,
								1770,
								1188,
								888,
								700
							],
							"name": "GMD",
							"nameLocation": "44123:3:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "44198:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1783,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "44214:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "44214:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3530303030",
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44226:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50000_by_1",
																	"typeString": "int_const 50000"
																},
																"value": "50000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44234:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1787,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "44240:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "44240:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "44234:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44226:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1782,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "44208:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44208:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1792,
												"nodeType": "ExpressionStatement",
												"src": "44208:43:0"
											}
										]
									},
									"id": 1794,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44195:2:0"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44198:0:0"
									},
									"scope": 2265,
									"src": "44184:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"id": 1798,
									"libraryName": {
										"id": 1795,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1165,
										"src": "44269:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "44263:27:0",
									"typeName": {
										"id": 1797,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1796,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 888,
											"src": "44283:6:0"
										},
										"referencedDeclaration": 888,
										"src": "44283:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$888",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 1801,
									"libraryName": {
										"id": 1799,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 350,
										"src": "44301:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "44295:27:0",
									"typeName": {
										"id": 1800,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "44314:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "GMD.UserInfo",
									"id": 1808,
									"members": [
										{
											"constant": false,
											"id": 1803,
											"mutability": "mutable",
											"name": "totalMinted",
											"nameLocation": "44363:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 1808,
											"src": "44355:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1802,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "44355:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1805,
											"mutability": "mutable",
											"name": "lastInteractionTime",
											"nameLocation": "44392:19:0",
											"nodeType": "VariableDeclaration",
											"scope": 1808,
											"src": "44384:27:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1804,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "44384:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1807,
											"mutability": "mutable",
											"name": "VestPeriod",
											"nameLocation": "44429:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 1808,
											"src": "44421:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1806,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "44421:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "44335:8:0",
									"nodeType": "StructDefinition",
									"scope": 2265,
									"src": "44328:118:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1959a002",
									"id": 1813,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "44488:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2265,
									"src": "44452:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
										"typeString": "mapping(address => struct GMD.UserInfo)"
									},
									"typeName": {
										"id": 1812,
										"keyType": {
											"id": 1809,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "44460:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "44452:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
											"typeString": "mapping(address => struct GMD.UserInfo)"
										},
										"valueType": {
											"id": 1811,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1810,
												"name": "UserInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1808,
												"src": "44471:8:0"
											},
											"referencedDeclaration": 1808,
											"src": "44471:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$1808_storage_ptr",
												"typeString": "struct GMD.UserInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6817c76c",
									"id": 1816,
									"mutability": "mutable",
									"name": "mintPrice",
									"nameLocation": "44518:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2265,
									"src": "44503:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1814,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "44503:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 1815,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "44530:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "76c71ca1",
									"id": 1819,
									"mutability": "mutable",
									"name": "mintCap",
									"nameLocation": "44555:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2265,
									"src": "44540:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1817,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "44540:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1818,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "44565:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7313ee5a",
									"id": 1822,
									"mutability": "mutable",
									"name": "vestingPeriod",
									"nameLocation": "44587:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2265,
									"src": "44572:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1820,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "44572:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 1821,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "44603:6:0",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_432000_by_1",
											"typeString": "int_const 432000"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "24bbd049",
									"id": 1825,
									"mutability": "mutable",
									"name": "mintOpen",
									"nameLocation": "44627:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2265,
									"src": "44615:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1823,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "44615:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1824,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "44638:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89a30271",
									"id": 1831,
									"mutability": "mutable",
									"name": "USDC",
									"nameLocation": "44663:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 2265,
									"src": "44649:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$888",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1827,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1826,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 888,
											"src": "44649:6:0"
										},
										"referencedDeclaration": 888,
										"src": "44649:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$888",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307846463937304136314130346231634131343833344134336635644534353333654244444235434338",
												"id": 1829,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "44677:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1828,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 888,
											"src": "44670:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$888_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 1830,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "44670:50:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$888",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "44769:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1837,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "44785:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "44785:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1839,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "44797:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1836,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "44779:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44779:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1841,
												"nodeType": "ExpressionStatement",
												"src": "44779:26:0"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "44737:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "44750:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "44742:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44741:17:0"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44769:0:0"
									},
									"scope": 2265,
									"src": "44728:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "44875:35:0",
										"statements": [
											{
												"expression": {
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1850,
														"name": "mintCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1819,
														"src": "44885:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1851,
														"name": "_mintCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1845,
														"src": "44895:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "44885:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1853,
												"nodeType": "ExpressionStatement",
												"src": "44885:18:0"
											}
										]
									},
									"functionSelector": "4070a0c9",
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1848,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1847,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 730,
												"src": "44865:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "44865:9:0"
										}
									],
									"name": "setMintCap",
									"nameLocation": "44827:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "_mintCap",
												"nameLocation": "44846:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "44838:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44837:18:0"
									},
									"returnParameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44875:0:0"
									},
									"scope": 2265,
									"src": "44818:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1873,
										"nodeType": "Block",
										"src": "44982:114:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1863,
																"name": "_mintPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1857,
																"src": "45000:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1864,
																"name": "mintPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1816,
																"src": "45014:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "45000:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e2774206265206c6f776572207468616e206c617374206d696e74",
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45025:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_173f5feae1ad54da66e240442a86ada85e55dadd22acc085c5bb9acab9398b89",
																"typeString": "literal_string \"can't be lower than last mint\""
															},
															"value": "can't be lower than last mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_173f5feae1ad54da66e240442a86ada85e55dadd22acc085c5bb9acab9398b89",
																"typeString": "literal_string \"can't be lower than last mint\""
															}
														],
														"id": 1862,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "44992:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44992:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "44992:65:0"
											},
											{
												"expression": {
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1869,
														"name": "mintPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "45067:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1870,
														"name": "_mintPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "45079:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "45067:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1872,
												"nodeType": "ExpressionStatement",
												"src": "45067:22:0"
											}
										]
									},
									"functionSelector": "f4a0a528",
									"id": 1874,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1860,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1859,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 730,
												"src": "44972:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "44972:9:0"
										}
									],
									"name": "setMintPrice",
									"nameLocation": "44930:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "_mintPrice",
												"nameLocation": "44951:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "44943:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44942:20:0"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44982:0:0"
									},
									"scope": 2265,
									"src": "44921:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "45164:40:0",
										"statements": [
											{
												"expression": {
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1881,
														"name": "vestingPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1822,
														"src": "45174:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1882,
														"name": "_period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1876,
														"src": "45190:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "45174:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1884,
												"nodeType": "ExpressionStatement",
												"src": "45174:23:0"
											}
										]
									},
									"functionSelector": "40bee0ed",
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1879,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1878,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 730,
												"src": "45154:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "45154:9:0"
										}
									],
									"name": "setVestingPeriod",
									"nameLocation": "45111:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "_period",
												"nameLocation": "45136:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "45128:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45127:17:0"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45164:0:0"
									},
									"scope": 2265,
									"src": "45102:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1942,
										"nodeType": "Block",
										"src": "45284:402:0",
										"statements": [
											{
												"assignments": [
													1894
												],
												"declarations": [
													{
														"constant": false,
														"id": 1894,
														"mutability": "mutable",
														"name": "timePass",
														"nameLocation": "45302:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1942,
														"src": "45294:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1893,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "45294:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1903,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1898,
																	"name": "userInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "45333:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																		"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																	}
																},
																"id": 1900,
																"indexExpression": {
																	"id": 1899,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1888,
																	"src": "45342:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "45333:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																	"typeString": "struct GMD.UserInfo storage ref"
																}
															},
															"id": 1901,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastInteractionTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1805,
															"src": "45333:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1895,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "45313:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "45313:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 229,
														"src": "45313:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45313:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45294:78:0"
											},
											{
												"assignments": [
													1905
												],
												"declarations": [
													{
														"constant": false,
														"id": 1905,
														"mutability": "mutable",
														"name": "claimable",
														"nameLocation": "45390:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1942,
														"src": "45382:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1904,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "45382:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1906,
												"nodeType": "VariableDeclarationStatement",
												"src": "45382:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1907,
														"name": "timePass",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "45413:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1908,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "45425:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																	"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																}
															},
															"id": 1911,
															"indexExpression": {
																"expression": {
																	"id": 1909,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "45434:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "45434:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "45425:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																"typeString": "struct GMD.UserInfo storage ref"
															}
														},
														"id": 1912,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "VestPeriod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1807,
														"src": "45425:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "45413:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1938,
													"nodeType": "Block",
													"src": "45538:116:0",
													"statements": [
														{
															"expression": {
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1922,
																	"name": "claimable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1905,
																	"src": "45552:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 1931,
																					"name": "userInfo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1813,
																					"src": "45613:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																						"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																					}
																				},
																				"id": 1933,
																				"indexExpression": {
																					"id": 1932,
																					"name": "_address",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1888,
																					"src": "45622:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "45613:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																					"typeString": "struct GMD.UserInfo storage ref"
																				}
																			},
																			"id": 1934,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "VestPeriod",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1807,
																			"src": "45613:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1928,
																					"name": "timePass",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1894,
																					"src": "45599:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"baseExpression": {
																							"id": 1923,
																							"name": "userInfo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1813,
																							"src": "45564:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																								"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																							}
																						},
																						"id": 1925,
																						"indexExpression": {
																							"id": 1924,
																							"name": "_address",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1888,
																							"src": "45573:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "45564:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																							"typeString": "struct GMD.UserInfo storage ref"
																						}
																					},
																					"id": 1926,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "totalMinted",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1803,
																					"src": "45564:30:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 244,
																				"src": "45564:34:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "45564:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 259,
																		"src": "45564:48:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "45564:79:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "45552:91:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1937,
															"nodeType": "ExpressionStatement",
															"src": "45552:91:0"
														}
													]
												},
												"id": 1939,
												"nodeType": "IfStatement",
												"src": "45409:245:0",
												"trueBody": {
													"id": 1921,
													"nodeType": "Block",
													"src": "45457:67:0",
													"statements": [
														{
															"expression": {
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1914,
																	"name": "claimable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1905,
																	"src": "45471:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1915,
																			"name": "userInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1813,
																			"src": "45483:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																				"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																			}
																		},
																		"id": 1917,
																		"indexExpression": {
																			"id": 1916,
																			"name": "_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1888,
																			"src": "45492:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "45483:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																			"typeString": "struct GMD.UserInfo storage ref"
																		}
																	},
																	"id": 1918,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalMinted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1803,
																	"src": "45483:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "45471:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1920,
															"nodeType": "ExpressionStatement",
															"src": "45471:42:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1940,
													"name": "claimable",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1905,
													"src": "45670:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1892,
												"id": 1941,
												"nodeType": "Return",
												"src": "45663:16:0"
											}
										]
									},
									"functionSelector": "84d24226",
									"id": 1943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimableTokens",
									"nameLocation": "45219:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "45243:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "45235:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45234:18:0"
									},
									"returnParameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "45275:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45274:9:0"
									},
									"scope": 2265,
									"src": "45210:476:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1954,
										"nodeType": "Block",
										"src": "45749:37:0",
										"statements": [
											{
												"expression": {
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1950,
														"name": "mintOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1825,
														"src": "45759:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1951,
														"name": "_mintOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1945,
														"src": "45770:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "45759:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1953,
												"nodeType": "ExpressionStatement",
												"src": "45759:20:0"
											}
										]
									},
									"functionSelector": "e2af30f4",
									"id": 1955,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1948,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1947,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 730,
												"src": "45739:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "45739:9:0"
										}
									],
									"name": "setOpenMint",
									"nameLocation": "45702:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "_mintOpen",
												"nameLocation": "45719:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "45714:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1944,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "45714:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45713:16:0"
									},
									"returnParameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45749:0:0"
									},
									"scope": 2265,
									"src": "45693:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1974,
										"nodeType": "Block",
										"src": "45844:74:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1963,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "45872:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45872:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1969,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "45904:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_GMD_$2265",
																				"typeString": "contract GMD"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_GMD_$2265",
																				"typeString": "contract GMD"
																			}
																		],
																		"id": 1968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "45896:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1967,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "45896:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "45896:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1965,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "45881:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$888",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 845,
																"src": "45881:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45881:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1960,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "45854:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															}
														},
														"id": 1962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 916,
														"src": "45854:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$888_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$888_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45854:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1973,
												"nodeType": "ExpressionStatement",
												"src": "45854:57:0"
											}
										]
									},
									"functionSelector": "4e274514",
									"id": 1975,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1958,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1957,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 730,
												"src": "45834:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "45834:9:0"
										}
									],
									"name": "recoverTreasuryTokens",
									"nameLocation": "45801:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45822:2:0"
									},
									"returnParameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45844:0:0"
									},
									"scope": 2265,
									"src": "45792:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2088,
										"nodeType": "Block",
										"src": "45978:726:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1983,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1977,
																"src": "45997:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "32303030303030303030",
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46008:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2000000000_by_1",
																	"typeString": "int_const 2000000000"
																},
																"value": "2000000000"
															},
															"src": "45997:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d61782032303030207573646320706572207478",
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "46020:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83a2624d4982eca65d4a331a6673af179dc8008dcc96f17edd65b4a6824be790",
																"typeString": "literal_string \"max 2000 usdc per tx\""
															},
															"value": "max 2000 usdc per tx"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83a2624d4982eca65d4a331a6673af179dc8008dcc96f17edd65b4a6824be790",
																"typeString": "literal_string \"max 2000 usdc per tx\""
															}
														],
														"id": 1982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "45989:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45989:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1988,
												"nodeType": "ExpressionStatement",
												"src": "45989:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1990,
															"name": "mintOpen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "46061:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d696e74206e6f74206f70656e6564",
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "46071:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f42ca80ca1cf7fc7c375d12ec6453aa191e43dda19c1fca59ba268e8930d40c",
																"typeString": "literal_string \"mint not opened\""
															},
															"value": "mint not opened"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f42ca80ca1cf7fc7c375d12ec6453aa191e43dda19c1fca59ba268e8930d40c",
																"typeString": "literal_string \"mint not opened\""
															}
														],
														"id": 1989,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "46053:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46053:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1993,
												"nodeType": "ExpressionStatement",
												"src": "46053:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1997,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "46122:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "46122:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1995,
																		"name": "USDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1831,
																		"src": "46107:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$888",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 845,
																	"src": "46107:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46107:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2000,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1977,
																"src": "46137:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46107:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "555344432062616c616e636520746f6f206c6f77",
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "46146:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bda22120a305673ec0011c53a79c93beb6c43153d45e10cc02b94d43563bbc9",
																"typeString": "literal_string \"USDC balance too low\""
															},
															"value": "USDC balance too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bda22120a305673ec0011c53a79c93beb6c43153d45e10cc02b94d43563bbc9",
																"typeString": "literal_string \"USDC balance too low\""
															}
														],
														"id": 1994,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "46099:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46099:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2004,
												"nodeType": "ExpressionStatement",
												"src": "46099:70:0"
											},
											{
												"assignments": [
													2006
												],
												"declarations": [
													{
														"constant": false,
														"id": 2006,
														"mutability": "mutable",
														"name": "_amountin",
														"nameLocation": "46187:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2088,
														"src": "46179:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2005,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "46179:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2013,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46211:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3132",
																"id": 2010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46215:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"src": "46211:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															}
														],
														"expression": {
															"id": 2007,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "46199:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 244,
														"src": "46199:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46199:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46179:39:0"
											},
											{
												"assignments": [
													2015
												],
												"declarations": [
													{
														"constant": false,
														"id": 2015,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "46236:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2088,
														"src": "46228:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2014,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "46228:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2023,
												"initialValue": {
													"arguments": [
														{
															"id": 2021,
															"name": "mintPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "46272:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31303030",
																	"id": 2018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46262:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"expression": {
																	"id": 2016,
																	"name": "_amountin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2006,
																	"src": "46248:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 244,
																"src": "46248:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46248:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 259,
														"src": "46248:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46248:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46228:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2029,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2015,
																		"src": "46332:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 2025,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "46309:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_GMD_$2265",
																					"typeString": "contract GMD"
																				}
																			},
																			"id": 2026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1269,
																			"src": "46309:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																				"typeString": "function () view external returns (uint256)"
																			}
																		},
																		"id": 2027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46309:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 214,
																	"src": "46309:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46309:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2031,
																"name": "mintCap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "46346:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46309:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f766572206d696e7420636170",
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "46355:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e25561c5247b699ff6d2ec1fa3fd74ec2bd4ff755d0f0f85538b311c73d9a436",
																"typeString": "literal_string \"over mint cap\""
															},
															"value": "over mint cap"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e25561c5247b699ff6d2ec1fa3fd74ec2bd4ff755d0f0f85538b311c73d9a436",
																"typeString": "literal_string \"over mint cap\""
															}
														],
														"id": 2024,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "46301:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46301:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2035,
												"nodeType": "ExpressionStatement",
												"src": "46301:70:0"
											},
											{
												"expression": {
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2036,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "46381:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																	"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																}
															},
															"id": 2039,
															"indexExpression": {
																"expression": {
																	"id": 2037,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "46390:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "46390:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "46381:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																"typeString": "struct GMD.UserInfo storage ref"
															}
														},
														"id": 2040,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalMinted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1803,
														"src": "46381:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2047,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "46453:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 2041,
																		"name": "userInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1813,
																		"src": "46416:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																			"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																		}
																	},
																	"id": 2044,
																	"indexExpression": {
																		"expression": {
																			"id": 2042,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "46425:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "46425:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "46416:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																		"typeString": "struct GMD.UserInfo storage ref"
																	}
																},
																"id": 2045,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalMinted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1803,
																"src": "46416:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 214,
															"src": "46416:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46416:47:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46381:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2050,
												"nodeType": "ExpressionStatement",
												"src": "46381:82:0"
											},
											{
												"expression": {
													"id": 2058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2051,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "46473:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																	"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																}
															},
															"id": 2054,
															"indexExpression": {
																"expression": {
																	"id": 2052,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "46482:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "46482:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "46473:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																"typeString": "struct GMD.UserInfo storage ref"
															}
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastInteractionTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1805,
														"src": "46473:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2056,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "46516:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "46516:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46473:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2059,
												"nodeType": "ExpressionStatement",
												"src": "46473:58:0"
											},
											{
												"expression": {
													"id": 2066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2060,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "46541:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																	"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																}
															},
															"id": 2063,
															"indexExpression": {
																"expression": {
																	"id": 2061,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "46550:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "46550:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "46541:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																"typeString": "struct GMD.UserInfo storage ref"
															}
														},
														"id": 2064,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "VestPeriod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1807,
														"src": "46541:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2065,
														"name": "vestingPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1822,
														"src": "46575:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46541:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2067,
												"nodeType": "ExpressionStatement",
												"src": "46541:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2071,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "46613:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GMD_$2265",
																		"typeString": "contract GMD"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GMD_$2265",
																		"typeString": "contract GMD"
																	}
																],
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46605:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2069,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "46605:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46605:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2073,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "46620:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2068,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "46599:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46599:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2075,
												"nodeType": "ExpressionStatement",
												"src": "46599:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2079,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "46662:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "46662:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2083,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "46682:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GMD_$2265",
																		"typeString": "contract GMD"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GMD_$2265",
																		"typeString": "contract GMD"
																	}
																],
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46674:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2081,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "46674:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46674:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2085,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "46689:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2076,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "46640:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															}
														},
														"id": 2078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 942,
														"src": "46640:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$888_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$888_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46640:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2087,
												"nodeType": "ExpressionStatement",
												"src": "46640:57:0"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 2089,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1980,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1979,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "45965:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "45965:12:0"
										}
									],
									"name": "mint",
									"nameLocation": "45934:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "45947:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "45939:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45939:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45938:17:0"
									},
									"returnParameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45978:0:0"
									},
									"scope": 2265,
									"src": "45925:779:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2211,
										"nodeType": "Block",
										"src": "46749:813:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2095,
																		"name": "userInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1813,
																		"src": "46768:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																			"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																		}
																	},
																	"id": 2098,
																	"indexExpression": {
																		"expression": {
																			"id": 2096,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "46777:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "46777:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "46768:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																		"typeString": "struct GMD.UserInfo storage ref"
																	}
																},
																"id": 2099,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalMinted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1803,
																"src": "46768:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46803:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "46768:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f206d696e74",
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "46806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fc0609bdede0b3c78d03850c6be1ea4de01b0f46fe7303a1b9fe01bbd756db3",
																"typeString": "literal_string \"no mint\""
															},
															"value": "no mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fc0609bdede0b3c78d03850c6be1ea4de01b0f46fe7303a1b9fe01bbd756db3",
																"typeString": "literal_string \"no mint\""
															}
														],
														"id": 2094,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "46760:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46760:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2104,
												"nodeType": "ExpressionStatement",
												"src": "46760:56:0"
											},
											{
												"assignments": [
													2106
												],
												"declarations": [
													{
														"constant": false,
														"id": 2106,
														"mutability": "mutable",
														"name": "timePass",
														"nameLocation": "46834:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2211,
														"src": "46826:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "46826:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2116,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 2110,
																	"name": "userInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "46865:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																		"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																	}
																},
																"id": 2113,
																"indexExpression": {
																	"expression": {
																		"id": 2111,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "46874:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "46874:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "46865:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																	"typeString": "struct GMD.UserInfo storage ref"
																}
															},
															"id": 2114,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastInteractionTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1805,
															"src": "46865:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2107,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "46845:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "46845:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 229,
														"src": "46845:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46845:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46826:80:0"
											},
											{
												"assignments": [
													2118
												],
												"declarations": [
													{
														"constant": false,
														"id": 2118,
														"mutability": "mutable",
														"name": "claimable",
														"nameLocation": "46924:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2211,
														"src": "46916:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2117,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "46916:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2119,
												"nodeType": "VariableDeclarationStatement",
												"src": "46916:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2120,
														"name": "timePass",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2106,
														"src": "46947:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 2121,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "46959:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																	"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																}
															},
															"id": 2124,
															"indexExpression": {
																"expression": {
																	"id": 2122,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "46968:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "46968:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "46959:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																"typeString": "struct GMD.UserInfo storage ref"
															}
														},
														"id": 2125,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "VestPeriod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1807,
														"src": "46959:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46947:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2177,
													"nodeType": "Block",
													"src": "47123:226:0",
													"statements": [
														{
															"expression": {
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2144,
																	"name": "claimable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2118,
																	"src": "47137:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 2154,
																					"name": "userInfo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1813,
																					"src": "47200:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																						"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																					}
																				},
																				"id": 2157,
																				"indexExpression": {
																					"expression": {
																						"id": 2155,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "47209:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2156,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "47209:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "47200:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																					"typeString": "struct GMD.UserInfo storage ref"
																				}
																			},
																			"id": 2158,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "VestPeriod",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1807,
																			"src": "47200:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2151,
																					"name": "timePass",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2106,
																					"src": "47186:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"baseExpression": {
																							"id": 2145,
																							"name": "userInfo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1813,
																							"src": "47149:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																								"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																							}
																						},
																						"id": 2148,
																						"indexExpression": {
																							"expression": {
																								"id": 2146,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "47158:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 2147,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "47158:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "47149:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																							"typeString": "struct GMD.UserInfo storage ref"
																						}
																					},
																					"id": 2149,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "totalMinted",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1803,
																					"src": "47149:32:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2150,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 244,
																				"src": "47149:36:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "47149:46:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 259,
																		"src": "47149:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "47149:83:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "47137:95:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2161,
															"nodeType": "ExpressionStatement",
															"src": "47137:95:0"
														},
														{
															"expression": {
																"id": 2175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 2162,
																			"name": "userInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1813,
																			"src": "47246:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																				"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																			}
																		},
																		"id": 2165,
																		"indexExpression": {
																			"expression": {
																				"id": 2163,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "47255:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "47255:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "47246:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																			"typeString": "struct GMD.UserInfo storage ref"
																		}
																	},
																	"id": 2166,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "VestPeriod",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1807,
																	"src": "47246:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2173,
																			"name": "timePass",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2106,
																			"src": "47316:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"baseExpression": {
																					"id": 2167,
																					"name": "userInfo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1813,
																					"src": "47280:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																						"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																					}
																				},
																				"id": 2170,
																				"indexExpression": {
																					"expression": {
																						"id": 2168,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "47289:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2169,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "47289:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "47280:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																					"typeString": "struct GMD.UserInfo storage ref"
																				}
																			},
																			"id": 2171,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "VestPeriod",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1807,
																			"src": "47280:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 229,
																		"src": "47280:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "47280:45:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "47246:79:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2176,
															"nodeType": "ExpressionStatement",
															"src": "47246:79:0"
														}
													]
												},
												"id": 2178,
												"nodeType": "IfStatement",
												"src": "46943:406:0",
												"trueBody": {
													"id": 2143,
													"nodeType": "Block",
													"src": "46991:118:0",
													"statements": [
														{
															"expression": {
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2127,
																	"name": "claimable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2118,
																	"src": "47005:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 2128,
																			"name": "userInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1813,
																			"src": "47017:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																				"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																			}
																		},
																		"id": 2131,
																		"indexExpression": {
																			"expression": {
																				"id": 2129,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "47026:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "47026:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "47017:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																			"typeString": "struct GMD.UserInfo storage ref"
																		}
																	},
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalMinted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1803,
																	"src": "47017:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "47005:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2134,
															"nodeType": "ExpressionStatement",
															"src": "47005:44:0"
														},
														{
															"expression": {
																"id": 2141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 2135,
																			"name": "userInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1813,
																			"src": "47063:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																				"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																			}
																		},
																		"id": 2138,
																		"indexExpression": {
																			"expression": {
																				"id": 2136,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "47072:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "47072:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "47063:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																			"typeString": "struct GMD.UserInfo storage ref"
																		}
																	},
																	"id": 2139,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "VestPeriod",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1807,
																	"src": "47063:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47097:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "47063:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2142,
															"nodeType": "ExpressionStatement",
															"src": "47063:35:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2179,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "47358:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																	"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																}
															},
															"id": 2182,
															"indexExpression": {
																"expression": {
																	"id": 2180,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "47367:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "47367:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "47358:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																"typeString": "struct GMD.UserInfo storage ref"
															}
														},
														"id": 2183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalMinted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1803,
														"src": "47358:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2190,
																"name": "claimable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "47430:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 2184,
																		"name": "userInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1813,
																		"src": "47393:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																			"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																		}
																	},
																	"id": 2187,
																	"indexExpression": {
																		"expression": {
																			"id": 2185,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "47402:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "47402:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "47393:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																		"typeString": "struct GMD.UserInfo storage ref"
																	}
																},
																"id": 2188,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalMinted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1803,
																"src": "47393:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 229,
															"src": "47393:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47393:47:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "47358:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2193,
												"nodeType": "ExpressionStatement",
												"src": "47358:82:0"
											},
											{
												"expression": {
													"id": 2201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2194,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "47450:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																	"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																}
															},
															"id": 2197,
															"indexExpression": {
																"expression": {
																	"id": 2195,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "47459:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "47459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "47450:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																"typeString": "struct GMD.UserInfo storage ref"
															}
														},
														"id": 2198,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastInteractionTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1805,
														"src": "47450:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2199,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "47493:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "47493:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "47450:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2202,
												"nodeType": "ExpressionStatement",
												"src": "47450:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2206,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "47533:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "47533:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2208,
															"name": "claimable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "47545:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2203,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "47519:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GMD_$2265",
																"typeString": "contract GMD"
															}
														},
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1308,
														"src": "47519:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47519:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2210,
												"nodeType": "ExpressionStatement",
												"src": "47519:36:0"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 2212,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2092,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2091,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "46736:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "46736:12:0"
										}
									],
									"name": "claim",
									"nameLocation": "46719:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46724:2:0"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46749:0:0"
									},
									"scope": 2265,
									"src": "46710:852:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2224,
										"nodeType": "Block",
										"src": "47633:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2219,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "47671:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GMD_$2265",
																		"typeString": "contract GMD"
																	}
																},
																"id": 2220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalSupply",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1269,
																"src": "47671:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47671:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2217,
															"name": "mintCap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "47659:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 229,
														"src": "47659:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47659:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2216,
												"id": 2223,
												"nodeType": "Return",
												"src": "47652:38:0"
											}
										]
									},
									"functionSelector": "e2e5c15c",
									"id": 2225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remainingMintableTokens",
									"nameLocation": "47577:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47600:2:0"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "47625:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47624:9:0"
									},
									"scope": 2265,
									"src": "47568:129:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2263,
										"nodeType": "Block",
										"src": "47764:287:0",
										"statements": [
											{
												"assignments": [
													2231
												],
												"declarations": [
													{
														"constant": false,
														"id": 2231,
														"mutability": "mutable",
														"name": "timePass",
														"nameLocation": "47782:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2263,
														"src": "47774:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2230,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "47774:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2241,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 2235,
																	"name": "userInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "47813:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																		"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																	}
																},
																"id": 2238,
																"indexExpression": {
																	"expression": {
																		"id": 2236,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "47822:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "47822:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "47813:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																	"typeString": "struct GMD.UserInfo storage ref"
																}
															},
															"id": 2239,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastInteractionTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1805,
															"src": "47813:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2232,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "47793:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "47793:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 229,
														"src": "47793:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47793:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47774:80:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2242,
														"name": "timePass",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2231,
														"src": "47868:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 2243,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "47880:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																	"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																}
															},
															"id": 2246,
															"indexExpression": {
																"expression": {
																	"id": 2244,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "47889:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "47889:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "47880:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																"typeString": "struct GMD.UserInfo storage ref"
															}
														},
														"id": 2247,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "VestPeriod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1807,
														"src": "47880:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "47868:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2261,
													"nodeType": "Block",
													"src": "47959:77:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2258,
																		"name": "timePass",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2231,
																		"src": "48016:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2252,
																				"name": "userInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1813,
																				"src": "47980:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1808_storage_$",
																					"typeString": "mapping(address => struct GMD.UserInfo storage ref)"
																				}
																			},
																			"id": 2255,
																			"indexExpression": {
																				"expression": {
																					"id": 2253,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "47989:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "47989:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "47980:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1808_storage",
																				"typeString": "struct GMD.UserInfo storage ref"
																			}
																		},
																		"id": 2256,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "VestPeriod",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1807,
																		"src": "47980:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 229,
																	"src": "47980:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47980:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2229,
															"id": 2260,
															"nodeType": "Return",
															"src": "47973:52:0"
														}
													]
												},
												"id": 2262,
												"nodeType": "IfStatement",
												"src": "47864:172:0",
												"trueBody": {
													"id": 2251,
													"nodeType": "Block",
													"src": "47912:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47933:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2229,
															"id": 2250,
															"nodeType": "Return",
															"src": "47926:8:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "20f203d9",
									"id": 2264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remainingVestedTime",
									"nameLocation": "47712:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47731:2:0"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "47756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47755:9:0"
									},
									"scope": 2265,
									"src": "47703:348:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2266,
							"src": "44114:3940:0",
							"usedErrors": []
						}
					],
					"src": "130:47924:0"
				},
				"id": 0
			}
		}
	}
}