{
	"id": "b17e103011cdbae7cce6d9c8922ac441",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.12",
	"solcLongVersion": "0.8.12+commit.f00d7308",
	"input": {
		"language": "Solidity",
		"sources": {
			"gmdBTC_flat.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/math/SafeMath.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n\n// File: contracts/final/gmdBTC.sol\n\n\n\npragma solidity 0.8.12;\n\n\n\n\n\ncontract gmdBTC is ERC20(\"gmdBTC\", \"gmdBTC\"), Ownable {\n    using SafeMath for uint256;\n \n    function burn(address _from, uint256 _amount) external onlyOwner  {\n        _burn(_from, _amount);\n    }\n\n    function mint(address recipient, uint256 _amount) external onlyOwner {\n        _mint(recipient, _amount);\n\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"gmdBTC_flat.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gmdBTC_flat.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"gmdBTC_flat.sol\":{\"keccak256\":\"0xf13247a966d7cd8449f3fb7613d6eec2586597b71d67e86b6e4e4a8d4454c81f\",\"urls\":[\"bzz-raw://8740e6f9c99b3bde486db89bb9e2e38eaaf1e5eb1bce9b2d1198510ab8189bf1\",\"dweb:/ipfs/QmUBmsp7RKaRt7ctyU8AZNvVQG6aW7vQBZWneuQhEbWLjK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"gmdBTC_flat.sol\":15123:26337  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"gmdBTC_flat.sol\":15698:15811  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"gmdBTC_flat.sol\":15764:15777  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"gmdBTC_flat.sol\":15764:15769  _name */\n  0x03\n  swap1\n    /* \"gmdBTC_flat.sol\":15764:15777  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"gmdBTC_flat.sol\":15787:15804  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"gmdBTC_flat.sol\":15787:15794  _symbol */\n  0x04\n  swap1\n    /* \"gmdBTC_flat.sol\":15787:15804  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"gmdBTC_flat.sol\":15698:15811  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"gmdBTC_flat.sol\":15123:26337  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_37:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_38:\n    /* \"#utility.yul\":1354:1415   */\n  tag_39\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_41\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_11:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_43:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  eq\n    /* \"#utility.yul\":1816:1977   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"gmdBTC_flat.sol\":15123:26337  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"gmdBTC_flat.sol\":15123:26337  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"gmdBTC_flat.sol\":15876:15974  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gmdBTC_flat.sol\":18153:18350  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"gmdBTC_flat.sol\":18153:18350  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"gmdBTC_flat.sol\":16964:17070  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"gmdBTC_flat.sol\":17051:17063  _totalSupply */\n      sload(0x02)\n        /* \"gmdBTC_flat.sol\":16964:17070  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"gmdBTC_flat.sol\":16964:17070  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"gmdBTC_flat.sol\":18912:19198  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":16813:16904  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"gmdBTC_flat.sol\":16895:16897  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"gmdBTC_flat.sol\":16813:16904  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"gmdBTC_flat.sol\":19593:19827  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":17128:17253  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":17228:17246  _balances[account] */\n      and\n        /* \"gmdBTC_flat.sol\":17202:17209  uint256 */\n      0x00\n        /* \"gmdBTC_flat.sol\":17228:17246  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"gmdBTC_flat.sol\":17128:17253  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"gmdBTC_flat.sol\":16087:16189  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":20314:20741  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":17449:17638  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":17696:17845  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":15876:15974  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"gmdBTC_flat.sol\":15930:15943  string memory */\n      0x60\n        /* \"gmdBTC_flat.sol\":15962:15967  _name */\n      0x03\n        /* \"gmdBTC_flat.sol\":15955:15967  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"gmdBTC_flat.sol\":15876:15974  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"gmdBTC_flat.sol\":18153:18350  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"gmdBTC_flat.sol\":18236:18240  bool */\n      0x00\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      caller\n        /* \"gmdBTC_flat.sol\":18290:18322  _approve(owner, spender, amount) */\n      tag_73\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      dup2\n        /* \"gmdBTC_flat.sol\":18306:18313  spender */\n      dup6\n        /* \"gmdBTC_flat.sol\":18315:18321  amount */\n      dup6\n        /* \"gmdBTC_flat.sol\":18290:18298  _approve */\n      tag_74\n        /* \"gmdBTC_flat.sol\":18290:18322  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"gmdBTC_flat.sol\":18339:18343  true */\n      0x01\n      swap4\n        /* \"gmdBTC_flat.sol\":18153:18350  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gmdBTC_flat.sol\":18912:19198  function transferFrom(... */\n    tag_32:\n        /* \"gmdBTC_flat.sol\":19039:19043  bool */\n      0x00\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      caller\n        /* \"gmdBTC_flat.sol\":19095:19133  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"gmdBTC_flat.sol\":19111:19115  from */\n      dup6\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      dup3\n        /* \"gmdBTC_flat.sol\":19126:19132  amount */\n      dup6\n        /* \"gmdBTC_flat.sol\":19095:19110  _spendAllowance */\n      tag_79\n        /* \"gmdBTC_flat.sol\":19095:19133  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"gmdBTC_flat.sol\":19143:19170  _transfer(from, to, amount) */\n      tag_80\n        /* \"gmdBTC_flat.sol\":19153:19157  from */\n      dup6\n        /* \"gmdBTC_flat.sol\":19159:19161  to */\n      dup6\n        /* \"gmdBTC_flat.sol\":19163:19169  amount */\n      dup6\n        /* \"gmdBTC_flat.sol\":19143:19152  _transfer */\n      tag_81\n        /* \"gmdBTC_flat.sol\":19143:19170  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"gmdBTC_flat.sol\":19187:19191  true */\n      0x01\n      swap5\n        /* \"gmdBTC_flat.sol\":18912:19198  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gmdBTC_flat.sol\":19593:19827  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"gmdBTC_flat.sol\":19681:19685  bool */\n      0x00\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      caller\n        /* \"gmdBTC_flat.sol\":19735:19799  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      dup2\n        /* \"gmdBTC_flat.sol\":19751:19758  spender */\n      dup6\n        /* \"gmdBTC_flat.sol\":19788:19798  addedValue */\n      dup6\n        /* \"gmdBTC_flat.sol\":19760:19785  allowance(owner, spender) */\n      tag_86\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      dup4\n        /* \"gmdBTC_flat.sol\":19751:19758  spender */\n      dup4\n        /* \"gmdBTC_flat.sol\":19760:19769  allowance */\n      tag_61\n        /* \"gmdBTC_flat.sol\":19760:19785  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"gmdBTC_flat.sol\":19760:19798  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"gmdBTC_flat.sol\":19735:19743  _approve */\n      tag_74\n        /* \"gmdBTC_flat.sol\":19735:19799  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":16087:16189  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"gmdBTC_flat.sol\":16143:16156  string memory */\n      0x60\n        /* \"gmdBTC_flat.sol\":16175:16182  _symbol */\n      0x04\n        /* \"gmdBTC_flat.sol\":16168:16182  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":20314:20741  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"gmdBTC_flat.sol\":20407:20411  bool */\n      0x00\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      caller\n        /* \"gmdBTC_flat.sol\":20407:20411  bool */\n      dup2\n        /* \"gmdBTC_flat.sol\":20488:20513  allowance(owner, spender) */\n      tag_98\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      dup3\n        /* \"gmdBTC_flat.sol\":20505:20512  spender */\n      dup7\n        /* \"gmdBTC_flat.sol\":20488:20497  allowance */\n      tag_61\n        /* \"gmdBTC_flat.sol\":20488:20513  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"gmdBTC_flat.sol\":20461:20513  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"gmdBTC_flat.sol\":20551:20566  subtractedValue */\n      dup4\n        /* \"gmdBTC_flat.sol\":20531:20547  currentAllowance */\n      dup2\n        /* \"gmdBTC_flat.sol\":20531:20566  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"gmdBTC_flat.sol\":20523:20608  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"gmdBTC_flat.sol\":20523:20608  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3204:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x25\n        /* \"#utility.yul\":3241:3259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3234:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3334   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3280:3298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3273:3335   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3351:3369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3344:3379   */\n      mstore\n        /* \"#utility.yul\":3396:3415   */\n      0x84\n      add\n        /* \"gmdBTC_flat.sol\":20523:20608  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"gmdBTC_flat.sol\":20642:20702  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"gmdBTC_flat.sol\":20651:20656  owner */\n      dup3\n        /* \"gmdBTC_flat.sol\":20658:20665  spender */\n      dup7\n        /* \"gmdBTC_flat.sol\":20686:20701  subtractedValue */\n      dup7\n        /* \"gmdBTC_flat.sol\":20667:20683  currentAllowance */\n      dup5\n        /* \"gmdBTC_flat.sol\":20667:20701  currentAllowance - subtractedValue */\n      sub\n        /* \"gmdBTC_flat.sol\":20642:20650  _approve */\n      tag_74\n        /* \"gmdBTC_flat.sol\":20642:20702  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":17449:17638  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"gmdBTC_flat.sol\":17528:17532  bool */\n      0x00\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      caller\n        /* \"gmdBTC_flat.sol\":17582:17610  _transfer(owner, to, amount) */\n      tag_73\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      dup2\n        /* \"gmdBTC_flat.sol\":17599:17601  to */\n      dup6\n        /* \"gmdBTC_flat.sol\":17603:17609  amount */\n      dup6\n        /* \"gmdBTC_flat.sol\":17582:17591  _transfer */\n      tag_81\n        /* \"gmdBTC_flat.sol\":17582:17610  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":17696:17845  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":17811:17829  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"gmdBTC_flat.sol\":17785:17792  uint256 */\n      0x00\n        /* \"gmdBTC_flat.sol\":17811:17829  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"gmdBTC_flat.sol\":17811:17822  _allowances */\n      0x01\n        /* \"gmdBTC_flat.sol\":17811:17829  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"gmdBTC_flat.sol\":17811:17838  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"gmdBTC_flat.sol\":17696:17845  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"gmdBTC_flat.sol\":23830:24200  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":23961:23980  owner != address(0) */\n      dup4\n      and\n        /* \"gmdBTC_flat.sol\":23953:24021  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"gmdBTC_flat.sol\":23953:24021  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3610:3631   */\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x24\n        /* \"#utility.yul\":3647:3665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3640:3670   */\n      mstore\n        /* \"#utility.yul\":3706:3740   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3686:3704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3679:3741   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3757:3775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3750:3784   */\n      mstore\n        /* \"#utility.yul\":3801:3820   */\n      0x84\n      add\n        /* \"gmdBTC_flat.sol\":23953:24021  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3426:3826   */\n      jump\n        /* \"gmdBTC_flat.sol\":23953:24021  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":24039:24060  spender != address(0) */\n      dup3\n      and\n        /* \"gmdBTC_flat.sol\":24031:24099  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"gmdBTC_flat.sol\":24031:24099  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4015:4036   */\n      mstore\n        /* \"#utility.yul\":4072:4074   */\n      0x22\n        /* \"#utility.yul\":4052:4070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4045:4075   */\n      mstore\n        /* \"#utility.yul\":4111:4145   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4091:4109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4084:4146   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4162:4180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4155:4187   */\n      mstore\n        /* \"#utility.yul\":4204:4223   */\n      0x84\n      add\n        /* \"gmdBTC_flat.sol\":24031:24099  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3831:4229   */\n      jump\n        /* \"gmdBTC_flat.sol\":24031:24099  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":24110:24128  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"gmdBTC_flat.sol\":24110:24121  _allowances */\n      0x01\n        /* \"gmdBTC_flat.sol\":24110:24128  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"gmdBTC_flat.sol\":24110:24137  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"gmdBTC_flat.sol\":24110:24146  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"gmdBTC_flat.sol\":24161:24193  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"gmdBTC_flat.sol\":24161:24193  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"gmdBTC_flat.sol\":24161:24193  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"gmdBTC_flat.sol\":23830:24200  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gmdBTC_flat.sol\":24481:24922  function _spendAllowance(... */\n    tag_79:\n        /* \"gmdBTC_flat.sol\":24611:24635  uint256 currentAllowance */\n      0x00\n        /* \"gmdBTC_flat.sol\":24638:24663  allowance(owner, spender) */\n      tag_117\n        /* \"gmdBTC_flat.sol\":24648:24653  owner */\n      dup5\n        /* \"gmdBTC_flat.sol\":24655:24662  spender */\n      dup5\n        /* \"gmdBTC_flat.sol\":24638:24647  allowance */\n      tag_61\n        /* \"gmdBTC_flat.sol\":24638:24663  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"gmdBTC_flat.sol\":24611:24663  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"gmdBTC_flat.sol\":24677:24693  currentAllowance */\n      dup2\n        /* \"gmdBTC_flat.sol\":24677:24714  currentAllowance != type(uint256).max */\n      eq\n        /* \"gmdBTC_flat.sol\":24673:24916  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"gmdBTC_flat.sol\":24758:24764  amount */\n      dup2\n        /* \"gmdBTC_flat.sol\":24738:24754  currentAllowance */\n      dup2\n        /* \"gmdBTC_flat.sol\":24738:24764  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"gmdBTC_flat.sol\":24730:24798  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"gmdBTC_flat.sol\":24730:24798  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4418:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x1d\n        /* \"#utility.yul\":4455:4473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4448:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4545   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4494:4512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4487:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"gmdBTC_flat.sol\":24730:24798  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4234:4587   */\n      jump\n        /* \"gmdBTC_flat.sol\":24730:24798  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"gmdBTC_flat.sol\":24840:24891  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"gmdBTC_flat.sol\":24849:24854  owner */\n      dup5\n        /* \"gmdBTC_flat.sol\":24856:24863  spender */\n      dup5\n        /* \"gmdBTC_flat.sol\":24884:24890  amount */\n      dup5\n        /* \"gmdBTC_flat.sol\":24865:24881  currentAllowance */\n      dup5\n        /* \"gmdBTC_flat.sol\":24865:24890  currentAllowance - amount */\n      sub\n        /* \"gmdBTC_flat.sol\":24840:24848  _approve */\n      tag_74\n        /* \"gmdBTC_flat.sol\":24840:24891  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"gmdBTC_flat.sol\":24601:24922  {... */\n      pop\n        /* \"gmdBTC_flat.sol\":24481:24922  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gmdBTC_flat.sol\":21195:21846  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":21321:21339  from != address(0) */\n      dup4\n      and\n        /* \"gmdBTC_flat.sol\":21313:21381  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"gmdBTC_flat.sol\":21313:21381  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4776:4797   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x25\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4806:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4906   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4852:4870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4845:4907   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4923:4941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4916:4951   */\n      mstore\n        /* \"#utility.yul\":4968:4987   */\n      0x84\n      add\n        /* \"gmdBTC_flat.sol\":21313:21381  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4592:4993   */\n      jump\n        /* \"gmdBTC_flat.sol\":21313:21381  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":21399:21415  to != address(0) */\n      dup3\n      and\n        /* \"gmdBTC_flat.sol\":21391:21455  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"gmdBTC_flat.sol\":21391:21455  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5182:5203   */\n      mstore\n        /* \"#utility.yul\":5239:5241   */\n      0x23\n        /* \"#utility.yul\":5219:5237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5212:5242   */\n      mstore\n        /* \"#utility.yul\":5278:5312   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5258:5276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5251:5313   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5329:5347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5322:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"gmdBTC_flat.sol\":21391:21455  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4998:5397   */\n      jump\n        /* \"gmdBTC_flat.sol\":21391:21455  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":21537:21552  _balances[from] */\n      dup4\n      and\n        /* \"gmdBTC_flat.sol\":21515:21534  uint256 fromBalance */\n      0x00\n        /* \"gmdBTC_flat.sol\":21537:21552  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"gmdBTC_flat.sol\":21570:21591  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"gmdBTC_flat.sol\":21562:21634  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"gmdBTC_flat.sol\":21562:21634  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5586:5607   */\n      mstore\n        /* \"#utility.yul\":5643:5645   */\n      0x26\n        /* \"#utility.yul\":5623:5641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5616:5646   */\n      mstore\n        /* \"#utility.yul\":5682:5716   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5717   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5733:5751   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5779:5798   */\n      0x84\n      add\n        /* \"gmdBTC_flat.sol\":21562:21634  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5402:5804   */\n      jump\n        /* \"gmdBTC_flat.sol\":21562:21634  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":21668:21683  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"gmdBTC_flat.sol\":21668:21677  _balances */\n      0x00\n        /* \"gmdBTC_flat.sol\":21668:21683  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"gmdBTC_flat.sol\":21686:21706  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"gmdBTC_flat.sol\":21668:21706  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"gmdBTC_flat.sol\":21726:21739  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"gmdBTC_flat.sol\":21726:21749  _balances[to] += amount */\n      dup1\n      sload\n        /* \"gmdBTC_flat.sol\":21700:21706  amount */\n      dup5\n      swap3\n        /* \"gmdBTC_flat.sol\":21668:21677  _balances */\n      swap1\n        /* \"gmdBTC_flat.sol\":21726:21749  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"gmdBTC_flat.sol\":21700:21706  amount */\n      dup5\n      swap1\n        /* \"gmdBTC_flat.sol\":21726:21749  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gmdBTC_flat.sol\":21780:21782  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":21765:21791  Transfer(from, to, amount) */\n      and\n        /* \"gmdBTC_flat.sol\":21774:21778  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":21765:21791  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"gmdBTC_flat.sol\":21784:21790  amount */\n      dup5\n        /* \"gmdBTC_flat.sol\":21765:21791  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"gmdBTC_flat.sol\":21765:21791  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"gmdBTC_flat.sol\":21802:21839  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"gmdBTC_flat.sol\":25506:25627  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_141:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_149:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_151:\n        /* \"#utility.yul\":962:991   */\n      tag_152\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_141\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_156:\n        /* \"#utility.yul\":1612:1641   */\n      tag_157\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_158\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_161:\n        /* \"#utility.yul\":2100:2129   */\n      tag_162\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_164:\n        /* \"#utility.yul\":2308:2337   */\n      tag_165\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_141\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_166\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_141\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_168:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      eq\n        /* \"#utility.yul\":2618:2779   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_169:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3015   */\n    tag_88:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2863   */\n      not\n        /* \"#utility.yul\":2854:2855   */\n      dup3\n        /* \"#utility.yul\":2851:2864   */\n      gt\n        /* \"#utility.yul\":2848:2984   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2906:2916   */\n      0x4e487b71\n        /* \"#utility.yul\":2901:2904   */\n      0xe0\n        /* \"#utility.yul\":2897:2917   */\n      shl\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2918   */\n      mstore\n        /* \"#utility.yul\":2941:2945   */\n      0x11\n        /* \"#utility.yul\":2938:2939   */\n      0x04\n        /* \"#utility.yul\":2931:2946   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2848:2984   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":3000:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2790:3015   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207acf5c4fa3dbbfed33fe2b3f3a64923b74107fbc1d670bc423246a23c8503f0964736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:1"
															},
															"nodeType": "YulIf",
															"src": "220:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:1"
															},
															"nodeType": "YulIf",
															"src": "353:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:1"
															},
															"nodeType": "YulIf",
															"src": "536:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:1"
															},
															"nodeType": "YulIf",
															"src": "698:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:1",
																"statements": []
															},
															"src": "779:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:1"
															},
															"nodeType": "YulIf",
															"src": "921:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:885:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:1"
															},
															"nodeType": "YulIf",
															"src": "1164:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:1"
															},
															"nodeType": "YulIf",
															"src": "1301:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:1"
															},
															"nodeType": "YulIf",
															"src": "1474:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:1",
														"type": ""
													}
												],
												"src": "1036:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:1"
															},
															"nodeType": "YulIf",
															"src": "1746:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:1"
															},
															"nodeType": "YulIf",
															"src": "1816:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:1",
														"type": ""
													}
												],
												"src": "1603:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b1938038062000b198339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b61088780620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212207acf5c4fa3dbbfed33fe2b3f3a64923b74107fbc1d670bc423246a23c8503f0964736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB19 CODESIZE SUB DUP1 PUSH3 0xB19 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x887 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x825 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xCF5C4FA3DBBFED33FE2B3F3A64923B74107FBC1D670BC423246A23 0xC8 POP EXTCODEHASH MULMOD PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "15123:11214:0:-:0;;;15698:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15764:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;15787:17:0;;;;:7;;:17;;;;;:::i;:::-;;15698:113;;15123:11214;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15123:11214:0;;;-1:-1:-1;15123:11214:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:1:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:1;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;15123:11214:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1124": {
									"entryPoint": null,
									"id": 1124,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1059": {
									"entryPoint": 856,
									"id": 1059,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1113": {
									"entryPoint": null,
									"id": 1113,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_322": {
									"entryPoint": null,
									"id": 322,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1102": {
									"entryPoint": 1148,
									"id": 1102,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_886": {
									"entryPoint": 1270,
									"id": 886,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_681": {
									"entryPoint": 813,
									"id": 681,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_706": {
									"entryPoint": 562,
									"id": 706,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_638": {
									"entryPoint": null,
									"id": 638,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_614": {
									"entryPoint": null,
									"id": 614,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_809": {
									"entryPoint": 671,
									"id": 809,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_768": {
									"entryPoint": 622,
									"id": 768,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_594": {
									"entryPoint": 416,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_604": {
									"entryPoint": 656,
									"id": 604,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_624": {
									"entryPoint": null,
									"id": 624,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_739": {
									"entryPoint": 586,
									"id": 739,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_663": {
									"entryPoint": 799,
									"id": 663,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:1"
															},
															"nodeType": "YulIf",
															"src": "443:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:1"
															},
															"nodeType": "YulIf",
															"src": "713:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:1",
														"type": ""
													}
												],
												"src": "616:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:1"
															},
															"nodeType": "YulIf",
															"src": "891:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:1",
														"type": ""
													}
												],
												"src": "794:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:1",
														"type": ""
													}
												],
												"src": "1053:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:1",
														"type": ""
													}
												],
												"src": "1245:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:1"
															},
															"nodeType": "YulIf",
															"src": "1541:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:1",
														"type": ""
													}
												],
												"src": "1427:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:1",
														"type": ""
													}
												],
												"src": "1760:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:1"
															},
															"nodeType": "YulIf",
															"src": "2029:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:1",
														"type": ""
													}
												],
												"src": "1949:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:1"
															},
															"nodeType": "YulIf",
															"src": "2237:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:1",
														"type": ""
													}
												],
												"src": "2140:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:1"
															},
															"nodeType": "YulIf",
															"src": "2548:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:1"
															},
															"nodeType": "YulIf",
															"src": "2618:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:1",
														"type": ""
													}
												],
												"src": "2405:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2901:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2897:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2966:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2959:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2959:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2861:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2851:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:13:1"
															},
															"nodeType": "YulIf",
															"src": "2848:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3007:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2821:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2824:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2830:3:1",
														"type": ""
													}
												],
												"src": "2790:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3371:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:1",
														"type": ""
													}
												],
												"src": "3020:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3600:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3701:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3706:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3777:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3577:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:1",
														"type": ""
													}
												],
												"src": "3426:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4095:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4106:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4084:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3996:4:1",
														"type": ""
													}
												],
												"src": "3831:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4514:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4385:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:1",
														"type": ""
													}
												],
												"src": "4234:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4757:4:1",
														"type": ""
													}
												],
												"src": "4592:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5239:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5278:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5349:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:1",
														"type": ""
													}
												],
												"src": "4998:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5682:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:1",
														"type": ""
													}
												],
												"src": "5402:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212207acf5c4fa3dbbfed33fe2b3f3a64923b74107fbc1d670bc423246a23c8503f0964736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x825 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xCF5C4FA3DBBFED33FE2B3F3A64923B74107FBC1D670BC423246A23 0xC8 POP EXTCODEHASH MULMOD PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "15123:11214:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15876:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18153:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;18153:197:0;1053:187:1;16964:106:0;17051:12;;16964:106;;;1391:25:1;;;1379:2;1364:18;16964:106:0;1245:177:1;18912:286:0;;;;;;:::i;:::-;;:::i;16813:91::-;;;16895:2;1902:36:1;;1890:2;1875:18;16813:91:0;1760:184:1;19593:234:0;;;;;;:::i;:::-;;:::i;17128:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;17228:18:0;17202:7;17228:18;;;;;;;;;;;;17128:125;16087:102;;;:::i;20314:427::-;;;;;;:::i;:::-;;:::i;17449:189::-;;;;;;:::i;:::-;;:::i;17696:149::-;;;;;;:::i;:::-;;:::i;15876:98::-;15930:13;15962:5;15955:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15876:98;:::o;18153:197::-;18236:4;7552:10;18290:32;7552:10;18306:7;18315:6;18290:8;:32::i;:::-;-1:-1:-1;18339:4:0;;18153:197;-1:-1:-1;;;18153:197:0:o;18912:286::-;19039:4;7552:10;19095:38;19111:4;7552:10;19126:6;19095:15;:38::i;:::-;19143:27;19153:4;19159:2;19163:6;19143:9;:27::i;:::-;-1:-1:-1;19187:4:0;;18912:286;-1:-1:-1;;;;18912:286:0:o;19593:234::-;19681:4;7552:10;19735:64;7552:10;19751:7;19788:10;19760:25;7552:10;19751:7;19760:9;:25::i;:::-;:38;;;;:::i;:::-;19735:8;:64::i;16087:102::-;16143:13;16175:7;16168:14;;;;;:::i;20314:427::-;20407:4;7552:10;20407:4;20488:25;7552:10;20505:7;20488:9;:25::i;:::-;20461:52;;20551:15;20531:16;:35;;20523:85;;;;-1:-1:-1;;;20523:85:0;;3222:2:1;20523:85:0;;;3204:21:1;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:1;;;3344:35;3396:19;;20523:85:0;;;;;;;;;20642:60;20651:5;20658:7;20686:15;20667:16;:34;20642:8;:60::i;17449:189::-;17528:4;7552:10;17582:28;7552:10;17599:2;17603:6;17582:9;:28::i;17696:149::-;-1:-1:-1;;;;;17811:18:0;;;17785:7;17811:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;17696:149::o;23830:370::-;-1:-1:-1;;;;;23961:19:0;;23953:68;;;;-1:-1:-1;;;23953:68:0;;3628:2:1;23953:68:0;;;3610:21:1;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:1;;;3750:34;3801:19;;23953:68:0;3426:400:1;23953:68:0;-1:-1:-1;;;;;24039:21:0;;24031:68;;;;-1:-1:-1;;;24031:68:0;;4033:2:1;24031:68:0;;;4015:21:1;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:1;;;4155:32;4204:19;;24031:68:0;3831:398:1;24031:68:0;-1:-1:-1;;;;;24110:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;24161:32;;1391:25:1;;;24161:32:0;;1364:18:1;24161:32:0;;;;;;;23830:370;;;:::o;24481:441::-;24611:24;24638:25;24648:5;24655:7;24638:9;:25::i;:::-;24611:52;;-1:-1:-1;;24677:16:0;:37;24673:243;;24758:6;24738:16;:26;;24730:68;;;;-1:-1:-1;;;24730:68:0;;4436:2:1;24730:68:0;;;4418:21:1;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;24730:68:0;4234:353:1;24730:68:0;24840:51;24849:5;24856:7;24884:6;24865:16;:25;24840:8;:51::i;:::-;24601:321;24481:441;;;:::o;21195:651::-;-1:-1:-1;;;;;21321:18:0;;21313:68;;;;-1:-1:-1;;;21313:68:0;;4794:2:1;21313:68:0;;;4776:21:1;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:1;;;4916:35;4968:19;;21313:68:0;4592:401:1;21313:68:0;-1:-1:-1;;;;;21399:16:0;;21391:64;;;;-1:-1:-1;;;21391:64:0;;5200:2:1;21391:64:0;;;5182:21:1;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:1;;;5322:33;5372:19;;21391:64:0;4998:399:1;21391:64:0;-1:-1:-1;;;;;21537:15:0;;21515:19;21537:15;;;;;;;;;;;21570:21;;;;21562:72;;;;-1:-1:-1;;;21562:72:0;;5604:2:1;21562:72:0;;;5586:21:1;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:1;;;5726:36;5779:19;;21562:72:0;5402:402:1;21562:72:0;-1:-1:-1;;;;;21668:15:0;;;:9;:15;;;;;;;;;;;21686:20;;;21668:38;;21726:13;;;;;;;;:23;;21700:6;;21668:9;21726:23;;21700:6;;21726:23;:::i;:::-;;;;;;;;21780:2;-1:-1:-1;;;;;21765:26:0;21774:4;-1:-1:-1;;;;;21765:26:0;;21784:6;21765:26;;;;1391:25:1;;1379:2;1364:18;;1245:177;21765:26:0;;;;;;;;21802:37;25506:121;14:597:1;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:1:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:1;;2790:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "436600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51270",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15764,
									"end": 15769,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 15764,
									"end": 15769,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15787,
									"end": 15794,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 15787,
									"end": 15794,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15123,
									"end": 26337,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207acf5c4fa3dbbfed33fe2b3f3a64923b74107fbc1d670bc423246a23c8503f0964736f6c634300080c0033",
									".code": [
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 26337,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16964,
											"end": 17070,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16964,
											"end": 17070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17051,
											"end": 17063,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17051,
											"end": 17063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16964,
											"end": 17070,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 16964,
											"end": 17070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16964,
											"end": 17070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16964,
											"end": 17070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16964,
											"end": 17070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16813,
											"end": 16904,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16813,
											"end": 16904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16904,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16813,
											"end": 16904,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16897,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16813,
											"end": 16904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17202,
											"end": 17209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16189,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 16087,
											"end": 16189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 16087,
											"end": 16189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 16087,
											"end": 16189,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 15943,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15962,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18236,
											"end": 18240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18290,
											"end": 18322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18306,
											"end": 18313,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18315,
											"end": 18321,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18290,
											"end": 18298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 18290,
											"end": 18322,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18290,
											"end": 18322,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 18290,
											"end": 18322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18339,
											"end": 18343,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18339,
											"end": 18343,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19039,
											"end": 19043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19095,
											"end": 19133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 19111,
											"end": 19115,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19126,
											"end": 19132,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19095,
											"end": 19110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 19095,
											"end": 19133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19095,
											"end": 19133,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 19095,
											"end": 19133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19143,
											"end": 19170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19153,
											"end": 19157,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19161,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19163,
											"end": 19169,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19143,
											"end": 19152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 19143,
											"end": 19170,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19143,
											"end": 19170,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19143,
											"end": 19170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19187,
											"end": 19191,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19187,
											"end": 19191,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19681,
											"end": 19685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19735,
											"end": 19799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19751,
											"end": 19758,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19788,
											"end": 19798,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19760,
											"end": 19785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19751,
											"end": 19758,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19760,
											"end": 19769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 19760,
											"end": 19785,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19760,
											"end": 19785,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 19760,
											"end": 19785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19760,
											"end": 19798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 19760,
											"end": 19798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19760,
											"end": 19798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19760,
											"end": 19798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 19760,
											"end": 19798,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19760,
											"end": 19798,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 19760,
											"end": 19798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19735,
											"end": 19743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 19735,
											"end": 19799,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16087,
											"end": 16189,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 16087,
											"end": 16189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16143,
											"end": 16156,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16175,
											"end": 16182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16168,
											"end": 16182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16182,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 16168,
											"end": 16182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 16168,
											"end": 16182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20488,
											"end": 20513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20505,
											"end": 20512,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20488,
											"end": 20497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 20488,
											"end": 20513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20488,
											"end": 20513,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 20488,
											"end": 20513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20461,
											"end": 20513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20461,
											"end": 20513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20566,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20531,
											"end": 20547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20531,
											"end": 20566,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20531,
											"end": 20566,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3334,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20642,
											"end": 20702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 20651,
											"end": 20656,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20658,
											"end": 20665,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20686,
											"end": 20701,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20667,
											"end": 20683,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20667,
											"end": 20701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20642,
											"end": 20650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 20642,
											"end": 20702,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17528,
											"end": 17532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17582,
											"end": 17610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17599,
											"end": 17601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17603,
											"end": 17609,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17582,
											"end": 17591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 17582,
											"end": 17610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17785,
											"end": 17792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17822,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23830,
											"end": 24200,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 23830,
											"end": 24200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23961,
											"end": 23980,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23961,
											"end": 23980,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3706,
											"end": 3740,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3826,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24039,
											"end": 24060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24039,
											"end": 24060,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4145,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3831,
											"end": 4229,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24121,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24146,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24146,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 23830,
											"end": 24200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23830,
											"end": 24200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23830,
											"end": 24200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23830,
											"end": 24200,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24481,
											"end": 24922,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 24481,
											"end": 24922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24611,
											"end": 24635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24638,
											"end": 24663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 24648,
											"end": 24653,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24655,
											"end": 24662,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24638,
											"end": 24647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 24638,
											"end": 24663,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24638,
											"end": 24663,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 24638,
											"end": 24663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24611,
											"end": 24663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24611,
											"end": 24663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24677,
											"end": 24693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24677,
											"end": 24714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24673,
											"end": 24916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 24673,
											"end": 24916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24758,
											"end": 24764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24738,
											"end": 24754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24738,
											"end": 24764,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24738,
											"end": 24764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4545,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4234,
											"end": 4587,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24840,
											"end": 24891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 24849,
											"end": 24854,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24856,
											"end": 24863,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24890,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24865,
											"end": 24881,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24865,
											"end": 24890,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24840,
											"end": 24848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 24840,
											"end": 24891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24840,
											"end": 24891,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 24840,
											"end": 24891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24601,
											"end": 24922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24922,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21195,
											"end": 21846,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 21195,
											"end": 21846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21321,
											"end": 21339,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4592,
											"end": 4993,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21399,
											"end": 21415,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21399,
											"end": 21415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5182,
											"end": 5203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5312,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4998,
											"end": 5397,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21591,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21591,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5402,
											"end": 5804,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21686,
											"end": 21706,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21686,
											"end": 21706,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21686,
											"end": 21706,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21706,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21739,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21739,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21700,
											"end": 21706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21700,
											"end": 21706,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21700,
											"end": 21706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21700,
											"end": 21706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21780,
											"end": 21782,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21774,
											"end": 21778,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 21784,
											"end": 21790,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21802,
											"end": 21839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 25506,
											"end": 25627,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2897,
											"end": 2917,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gmdBTC_flat.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"gmdBTC_flat.sol\":{\"keccak256\":\"0xf13247a966d7cd8449f3fb7613d6eec2586597b71d67e86b6e4e4a8d4454c81f\",\"urls\":[\"bzz-raw://8740e6f9c99b3bde486db89bb9e2e38eaaf1e5eb1bce9b2d1198510ab8189bf1\",\"dweb:/ipfs/QmUBmsp7RKaRt7ctyU8AZNvVQG6aW7vQBZWneuQhEbWLjK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 555,
								"contract": "gmdBTC_flat.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 561,
								"contract": "gmdBTC_flat.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 563,
								"contract": "gmdBTC_flat.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 565,
								"contract": "gmdBTC_flat.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 567,
								"contract": "gmdBTC_flat.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gmdBTC_flat.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"gmdBTC_flat.sol\":{\"keccak256\":\"0xf13247a966d7cd8449f3fb7613d6eec2586597b71d67e86b6e4e4a8d4454c81f\",\"urls\":[\"bzz-raw://8740e6f9c99b3bde486db89bb9e2e38eaaf1e5eb1bce9b2d1198510ab8189bf1\",\"dweb:/ipfs/QmUBmsp7RKaRt7ctyU8AZNvVQG6aW7vQBZWneuQhEbWLjK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gmdBTC_flat.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"gmdBTC_flat.sol\":{\"keccak256\":\"0xf13247a966d7cd8449f3fb7613d6eec2586597b71d67e86b6e4e4a8d4454c81f\",\"urls\":[\"bzz-raw://8740e6f9c99b3bde486db89bb9e2e38eaaf1e5eb1bce9b2d1198510ab8189bf1\",\"dweb:/ipfs/QmUBmsp7RKaRt7ctyU8AZNvVQG6aW7vQBZWneuQhEbWLjK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gmdBTC_flat.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"gmdBTC_flat.sol\":{\"keccak256\":\"0xf13247a966d7cd8449f3fb7613d6eec2586597b71d67e86b6e4e4a8d4454c81f\",\"urls\":[\"bzz-raw://8740e6f9c99b3bde486db89bb9e2e38eaaf1e5eb1bce9b2d1198510ab8189bf1\",\"dweb:/ipfs/QmUBmsp7RKaRt7ctyU8AZNvVQG6aW7vQBZWneuQhEbWLjK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 338,
								"contract": "gmdBTC_flat.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"gmdBTC_flat.sol\":510:6810  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"gmdBTC_flat.sol\":510:6810  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122008002d73ec70ac401b7a6d015860c13607fd4690424e8a93ccb28b340067749864736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122008002d73ec70ac401b7a6d015860c13607fd4690424e8a93ccb28b340067749864736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD STOP 0x2D PUSH20 0xEC70AC401B7A6D015860C13607FD4690424E8A93 0xCC 0xB2 DUP12 CALLVALUE STOP PUSH8 0x749864736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "510:6300:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;510:6300:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122008002d73ec70ac401b7a6d015860c13607fd4690424e8a93ccb28b340067749864736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD STOP 0x2D PUSH20 0xEC70AC401B7A6D015860C13607FD4690424E8A93 0xCC 0xB2 DUP12 CALLVALUE STOP PUSH8 0x749864736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "510:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008002d73ec70ac401b7a6d015860c13607fd4690424e8a93ccb28b340067749864736f6c634300080c0033",
									".code": [
										{
											"begin": 510,
											"end": 6810,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6810,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6810,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 510,
											"end": 6810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 6810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 6810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6810,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gmdBTC_flat.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"gmdBTC_flat.sol\":{\"keccak256\":\"0xf13247a966d7cd8449f3fb7613d6eec2586597b71d67e86b6e4e4a8d4454c81f\",\"urls\":[\"bzz-raw://8740e6f9c99b3bde486db89bb9e2e38eaaf1e5eb1bce9b2d1198510ab8189bf1\",\"dweb:/ipfs/QmUBmsp7RKaRt7ctyU8AZNvVQG6aW7vQBZWneuQhEbWLjK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"gmdBTC": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"gmdBTC_flat.sol\":26407:26726  contract gmdBTC is ERC20(\"gmdBTC\", \"gmdBTC\"), Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"gmdBTC_flat.sol\":15698:15811  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x06\n  dup1\n  dup3\n  mstore\n  shl(0xd0, 0x676d64425443)\n  0x20\n  dup1\n  dup5\n  add\n  dup3\n  dup2\n  mstore\n  dup6\n  mload\n  dup1\n  dup8\n  add\n  swap1\n  swap7\n  mstore\n  swap3\n  dup6\n  mstore\n  dup5\n  add\n  mstore\n    /* \"gmdBTC_flat.sol\":15764:15777  _name = name_ */\n  dup2\n  mload\n    /* \"gmdBTC_flat.sol\":15698:15811  constructor(string memory name_, string memory symbol_) {... */\n  swap2\n  swap3\n  swap2\n    /* \"gmdBTC_flat.sol\":15764:15777  _name = name_ */\n  tag_5\n  swap2\n    /* \"gmdBTC_flat.sol\":15764:15769  _name */\n  0x03\n  swap2\n    /* \"gmdBTC_flat.sol\":15764:15777  _name = name_ */\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"gmdBTC_flat.sol\":15787:15804  _symbol = symbol_ */\n  dup1\n  mload\n  tag_7\n  swap1\n    /* \"gmdBTC_flat.sol\":15787:15794  _symbol */\n  0x04\n  swap1\n    /* \"gmdBTC_flat.sol\":15787:15804  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"gmdBTC_flat.sol\":15698:15811  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"gmdBTC_flat.sol\":8605:8637  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"gmdBTC_flat.sol\":8624:8636  _msgSender() */\n  tag_10\n    /* \"gmdBTC_flat.sol\":8624:8634  _msgSender */\n  shl(0x20, tag_11)\n    /* \"gmdBTC_flat.sol\":8624:8636  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"gmdBTC_flat.sol\":8605:8623  _transferOwnership */\n  tag_12\n    /* \"gmdBTC_flat.sol\":8605:8637  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_9:\n    /* \"gmdBTC_flat.sol\":26407:26726  contract gmdBTC is ERC20(\"gmdBTC\", \"gmdBTC\"), Ownable {... */\n  jump(tag_27)\n    /* \"gmdBTC_flat.sol\":7473:7569  function _msgSender() internal view virtual returns (address) {... */\ntag_11:\n    /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n  caller\n  swap1\n    /* \"gmdBTC_flat.sol\":7473:7569  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"gmdBTC_flat.sol\":10102:10289  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"gmdBTC_flat.sol\":10194:10200  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"gmdBTC_flat.sol\":10210:10227  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"gmdBTC_flat.sol\":10242:10282  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"gmdBTC_flat.sol\":10194:10200  _owner */\n  swap2\n  and\n  swap2\n    /* \"gmdBTC_flat.sol\":10210:10227  _owner = newOwner */\n  swap1\n    /* \"gmdBTC_flat.sol\":10194:10200  _owner */\n  dup3\n  swap1\n    /* \"gmdBTC_flat.sol\":10242:10282  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"gmdBTC_flat.sol\":10175:10191  address oldOwner */\n  0x00\n  swap1\n    /* \"gmdBTC_flat.sol\":10242:10282  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"gmdBTC_flat.sol\":10165:10289  {... */\n  pop\n    /* \"gmdBTC_flat.sol\":10102:10289  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"gmdBTC_flat.sol\":26407:26726  contract gmdBTC is ERC20(\"gmdBTC\", \"gmdBTC\"), Ownable {... */\ntag_6:\n  dup3\n  dup1\n  sload\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_19\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_22)\ntag_19:\n  dup3\n  0x1f\n  lt\n  tag_20\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_22\n  jumpi\n  swap2\n  dup3\n  add\ntag_21:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_22\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_21)\ntag_22:\n  pop\n  tag_23\n  swap3\n  swap2\n  pop\n  tag_24\n  jump\t// in\ntag_23:\n  pop\n  swap1\n  jump\t// out\ntag_24:\ntag_25:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_25)\n    /* \"#utility.yul\":14:394   */\ntag_17:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_29:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  eq\n    /* \"#utility.yul\":227:388   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_30:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_27:\n    /* \"gmdBTC_flat.sol\":26407:26726  contract gmdBTC is ERC20(\"gmdBTC\", \"gmdBTC\"), Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"gmdBTC_flat.sol\":26407:26726  contract gmdBTC is ERC20(\"gmdBTC\", \"gmdBTC\"), Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"gmdBTC_flat.sol\":15876:15974  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gmdBTC_flat.sol\":18153:18350  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"gmdBTC_flat.sol\":18153:18350  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_24\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"gmdBTC_flat.sol\":16964:17070  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"gmdBTC_flat.sol\":17051:17063  _totalSupply */\n      sload(0x02)\n        /* \"gmdBTC_flat.sol\":16964:17070  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"gmdBTC_flat.sol\":16964:17070  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"gmdBTC_flat.sol\":18912:19198  function transferFrom(... */\n    tag_6:\n      tag_26\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":16813:16904  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"gmdBTC_flat.sol\":16895:16897  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"gmdBTC_flat.sol\":16813:16904  function decimals() public view virtual override returns (uint8) {... */\n      tag_24\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"gmdBTC_flat.sol\":19593:19827  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_26\n      tag_46\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":26611:26723  function mint(address recipient, uint256 _amount) external onlyOwner {... */\n    tag_9:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"gmdBTC_flat.sol\":17128:17253  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_32\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":17228:17246  _balances[account] */\n      and\n        /* \"gmdBTC_flat.sol\":17202:17209  uint256 */\n      0x00\n        /* \"gmdBTC_flat.sol\":17228:17246  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"gmdBTC_flat.sol\":17128:17253  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"gmdBTC_flat.sol\":9500:9601  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_49\n      tag_58\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":8870:8955  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"gmdBTC_flat.sol\":8942:8948  _owner */\n      sload(0x05)\n        /* \"gmdBTC_flat.sol\":8870:8955  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":8942:8948  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2286:2337   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2274:2276   */\n      0x20\n        /* \"#utility.yul\":2259:2277   */\n      add\n        /* \"gmdBTC_flat.sol\":8870:8955  function owner() public view virtual returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":2140:2343   */\n      jump\n        /* \"gmdBTC_flat.sol\":16087:16189  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_22\n      tag_64\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":26501:26605  function burn(address _from, uint256 _amount) external onlyOwner  {... */\n    tag_14:\n      tag_49\n      tag_67\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":20314:20741  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_15:\n      tag_26\n      tag_70\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":17449:17638  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_16:\n      tag_26\n      tag_74\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":17696:17845  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_17:\n      tag_32\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":9750:9948  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_49\n      tag_83\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":15876:15974  function name() public view virtual override returns (string memory) {... */\n    tag_23:\n        /* \"gmdBTC_flat.sol\":15930:15943  string memory */\n      0x60\n        /* \"gmdBTC_flat.sol\":15962:15967  _name */\n      0x03\n        /* \"gmdBTC_flat.sol\":15955:15967  return _name */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"gmdBTC_flat.sol\":15876:15974  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"gmdBTC_flat.sol\":18153:18350  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_29:\n        /* \"gmdBTC_flat.sol\":18236:18240  bool */\n      0x00\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      caller\n        /* \"gmdBTC_flat.sol\":18290:18322  _approve(owner, spender, amount) */\n      tag_95\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      dup2\n        /* \"gmdBTC_flat.sol\":18306:18313  spender */\n      dup6\n        /* \"gmdBTC_flat.sol\":18315:18321  amount */\n      dup6\n        /* \"gmdBTC_flat.sol\":18290:18298  _approve */\n      tag_96\n        /* \"gmdBTC_flat.sol\":18290:18322  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_95:\n      pop\n        /* \"gmdBTC_flat.sol\":18339:18343  true */\n      0x01\n      swap4\n        /* \"gmdBTC_flat.sol\":18153:18350  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gmdBTC_flat.sol\":18912:19198  function transferFrom(... */\n    tag_39:\n        /* \"gmdBTC_flat.sol\":19039:19043  bool */\n      0x00\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      caller\n        /* \"gmdBTC_flat.sol\":19095:19133  _spendAllowance(from, spender, amount) */\n      tag_100\n        /* \"gmdBTC_flat.sol\":19111:19115  from */\n      dup6\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      dup3\n        /* \"gmdBTC_flat.sol\":19126:19132  amount */\n      dup6\n        /* \"gmdBTC_flat.sol\":19095:19110  _spendAllowance */\n      tag_101\n        /* \"gmdBTC_flat.sol\":19095:19133  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_100:\n        /* \"gmdBTC_flat.sol\":19143:19170  _transfer(from, to, amount) */\n      tag_102\n        /* \"gmdBTC_flat.sol\":19153:19157  from */\n      dup6\n        /* \"gmdBTC_flat.sol\":19159:19161  to */\n      dup6\n        /* \"gmdBTC_flat.sol\":19163:19169  amount */\n      dup6\n        /* \"gmdBTC_flat.sol\":19143:19152  _transfer */\n      tag_103\n        /* \"gmdBTC_flat.sol\":19143:19170  _transfer(from, to, amount) */\n      jump\t// in\n    tag_102:\n      pop\n        /* \"gmdBTC_flat.sol\":19187:19191  true */\n      0x01\n      swap5\n        /* \"gmdBTC_flat.sol\":18912:19198  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gmdBTC_flat.sol\":19593:19827  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_47:\n        /* \"gmdBTC_flat.sol\":19681:19685  bool */\n      0x00\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      caller\n        /* \"gmdBTC_flat.sol\":19735:19799  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_95\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      dup2\n        /* \"gmdBTC_flat.sol\":19751:19758  spender */\n      dup6\n        /* \"gmdBTC_flat.sol\":19788:19798  addedValue */\n      dup6\n        /* \"gmdBTC_flat.sol\":19760:19785  allowance(owner, spender) */\n      tag_108\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      dup4\n        /* \"gmdBTC_flat.sol\":19751:19758  spender */\n      dup4\n        /* \"gmdBTC_flat.sol\":19760:19769  allowance */\n      tag_80\n        /* \"gmdBTC_flat.sol\":19760:19785  allowance(owner, spender) */\n      jump\t// in\n    tag_108:\n        /* \"gmdBTC_flat.sol\":19760:19798  allowance(owner, spender) + addedValue */\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"gmdBTC_flat.sol\":19735:19743  _approve */\n      tag_96\n        /* \"gmdBTC_flat.sol\":19735:19799  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":26611:26723  function mint(address recipient, uint256 _amount) external onlyOwner {... */\n    tag_51:\n        /* \"gmdBTC_flat.sol\":8763:8776  _checkOwner() */\n      tag_112\n        /* \"gmdBTC_flat.sol\":8763:8774  _checkOwner */\n      tag_113\n        /* \"gmdBTC_flat.sol\":8763:8776  _checkOwner() */\n      jump\t// in\n    tag_112:\n        /* \"gmdBTC_flat.sol\":26690:26715  _mint(recipient, _amount) */\n      tag_115\n        /* \"gmdBTC_flat.sol\":26696:26705  recipient */\n      dup3\n        /* \"gmdBTC_flat.sol\":26707:26714  _amount */\n      dup3\n        /* \"gmdBTC_flat.sol\":26690:26695  _mint */\n      tag_116\n        /* \"gmdBTC_flat.sol\":26690:26715  _mint(recipient, _amount) */\n      jump\t// in\n    tag_115:\n        /* \"gmdBTC_flat.sol\":26611:26723  function mint(address recipient, uint256 _amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"gmdBTC_flat.sol\":9500:9601  function renounceOwnership() public virtual onlyOwner {... */\n    tag_58:\n        /* \"gmdBTC_flat.sol\":8763:8776  _checkOwner() */\n      tag_119\n        /* \"gmdBTC_flat.sol\":8763:8774  _checkOwner */\n      tag_113\n        /* \"gmdBTC_flat.sol\":8763:8776  _checkOwner() */\n      jump\t// in\n    tag_119:\n        /* \"gmdBTC_flat.sol\":9564:9594  _transferOwnership(address(0)) */\n      tag_121\n        /* \"gmdBTC_flat.sol\":9591:9592  0 */\n      0x00\n        /* \"gmdBTC_flat.sol\":9564:9582  _transferOwnership */\n      tag_122\n        /* \"gmdBTC_flat.sol\":9564:9594  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_121:\n        /* \"gmdBTC_flat.sol\":9500:9601  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"gmdBTC_flat.sol\":16087:16189  function symbol() public view virtual override returns (string memory) {... */\n    tag_64:\n        /* \"gmdBTC_flat.sol\":16143:16156  string memory */\n      0x60\n        /* \"gmdBTC_flat.sol\":16175:16182  _symbol */\n      0x04\n        /* \"gmdBTC_flat.sol\":16168:16182  return _symbol */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":26501:26605  function burn(address _from, uint256 _amount) external onlyOwner  {... */\n    tag_68:\n        /* \"gmdBTC_flat.sol\":8763:8776  _checkOwner() */\n      tag_131\n        /* \"gmdBTC_flat.sol\":8763:8774  _checkOwner */\n      tag_113\n        /* \"gmdBTC_flat.sol\":8763:8776  _checkOwner() */\n      jump\t// in\n    tag_131:\n        /* \"gmdBTC_flat.sol\":26577:26598  _burn(_from, _amount) */\n      tag_115\n        /* \"gmdBTC_flat.sol\":26583:26588  _from */\n      dup3\n        /* \"gmdBTC_flat.sol\":26590:26597  _amount */\n      dup3\n        /* \"gmdBTC_flat.sol\":26577:26582  _burn */\n      tag_134\n        /* \"gmdBTC_flat.sol\":26577:26598  _burn(_from, _amount) */\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":20314:20741  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_71:\n        /* \"gmdBTC_flat.sol\":20407:20411  bool */\n      0x00\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      caller\n        /* \"gmdBTC_flat.sol\":20407:20411  bool */\n      dup2\n        /* \"gmdBTC_flat.sol\":20488:20513  allowance(owner, spender) */\n      tag_137\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      dup3\n        /* \"gmdBTC_flat.sol\":20505:20512  spender */\n      dup7\n        /* \"gmdBTC_flat.sol\":20488:20497  allowance */\n      tag_80\n        /* \"gmdBTC_flat.sol\":20488:20513  allowance(owner, spender) */\n      jump\t// in\n    tag_137:\n        /* \"gmdBTC_flat.sol\":20461:20513  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"gmdBTC_flat.sol\":20551:20566  subtractedValue */\n      dup4\n        /* \"gmdBTC_flat.sol\":20531:20547  currentAllowance */\n      dup2\n        /* \"gmdBTC_flat.sol\":20531:20566  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"gmdBTC_flat.sol\":20523:20608  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3465:3467   */\n      0x20\n        /* \"gmdBTC_flat.sol\":20523:20608  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3447:3468   */\n      mstore\n        /* \"#utility.yul\":3504:3506   */\n      0x25\n        /* \"#utility.yul\":3484:3502   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3477:3507   */\n      mstore\n        /* \"#utility.yul\":3543:3577   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3523:3541   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3516:3578   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3594:3612   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3587:3622   */\n      mstore\n        /* \"#utility.yul\":3639:3658   */\n      0x84\n      add\n        /* \"gmdBTC_flat.sol\":20523:20608  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"gmdBTC_flat.sol\":20642:20702  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_102\n        /* \"gmdBTC_flat.sol\":20651:20656  owner */\n      dup3\n        /* \"gmdBTC_flat.sol\":20658:20665  spender */\n      dup7\n        /* \"gmdBTC_flat.sol\":20686:20701  subtractedValue */\n      dup7\n        /* \"gmdBTC_flat.sol\":20667:20683  currentAllowance */\n      dup5\n        /* \"gmdBTC_flat.sol\":20667:20701  currentAllowance - subtractedValue */\n      sub\n        /* \"gmdBTC_flat.sol\":20642:20650  _approve */\n      tag_96\n        /* \"gmdBTC_flat.sol\":20642:20702  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":17449:17638  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_75:\n        /* \"gmdBTC_flat.sol\":17528:17532  bool */\n      0x00\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      caller\n        /* \"gmdBTC_flat.sol\":17582:17610  _transfer(owner, to, amount) */\n      tag_95\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      dup2\n        /* \"gmdBTC_flat.sol\":17599:17601  to */\n      dup6\n        /* \"gmdBTC_flat.sol\":17603:17609  amount */\n      dup6\n        /* \"gmdBTC_flat.sol\":17582:17591  _transfer */\n      tag_103\n        /* \"gmdBTC_flat.sol\":17582:17610  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"gmdBTC_flat.sol\":17696:17845  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":17811:17829  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"gmdBTC_flat.sol\":17785:17792  uint256 */\n      0x00\n        /* \"gmdBTC_flat.sol\":17811:17829  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"gmdBTC_flat.sol\":17811:17822  _allowances */\n      0x01\n        /* \"gmdBTC_flat.sol\":17811:17829  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"gmdBTC_flat.sol\":17811:17838  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"gmdBTC_flat.sol\":17696:17845  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"gmdBTC_flat.sol\":9750:9948  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_84:\n        /* \"gmdBTC_flat.sol\":8763:8776  _checkOwner() */\n      tag_147\n        /* \"gmdBTC_flat.sol\":8763:8774  _checkOwner */\n      tag_113\n        /* \"gmdBTC_flat.sol\":8763:8776  _checkOwner() */\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":9838:9860  newOwner != address(0) */\n      dup2\n      and\n        /* \"gmdBTC_flat.sol\":9830:9903  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3871:3873   */\n      0x20\n        /* \"gmdBTC_flat.sol\":9830:9903  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3853:3874   */\n      mstore\n        /* \"#utility.yul\":3910:3912   */\n      0x26\n        /* \"#utility.yul\":3890:3908   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3883:3913   */\n      mstore\n        /* \"#utility.yul\":3949:3983   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3929:3947   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3922:3984   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4000:4018   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3993:4029   */\n      mstore\n        /* \"#utility.yul\":4046:4065   */\n      0x84\n      add\n        /* \"gmdBTC_flat.sol\":9830:9903  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_139\n        /* \"#utility.yul\":3669:4071   */\n      jump\n        /* \"gmdBTC_flat.sol\":9830:9903  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_149:\n        /* \"gmdBTC_flat.sol\":9913:9941  _transferOwnership(newOwner) */\n      tag_152\n        /* \"gmdBTC_flat.sol\":9932:9940  newOwner */\n      dup2\n        /* \"gmdBTC_flat.sol\":9913:9931  _transferOwnership */\n      tag_122\n        /* \"gmdBTC_flat.sol\":9913:9941  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_152:\n        /* \"gmdBTC_flat.sol\":9750:9948  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"gmdBTC_flat.sol\":23830:24200  function _approve(... */\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":23961:23980  owner != address(0) */\n      dup4\n      and\n        /* \"gmdBTC_flat.sol\":23953:24021  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4278:4280   */\n      0x20\n        /* \"gmdBTC_flat.sol\":23953:24021  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4260:4281   */\n      mstore\n        /* \"#utility.yul\":4317:4319   */\n      0x24\n        /* \"#utility.yul\":4297:4315   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4290:4320   */\n      mstore\n        /* \"#utility.yul\":4356:4390   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4336:4354   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4329:4391   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4407:4425   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4400:4434   */\n      mstore\n        /* \"#utility.yul\":4451:4470   */\n      0x84\n      add\n        /* \"gmdBTC_flat.sol\":23953:24021  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_139\n        /* \"#utility.yul\":4076:4476   */\n      jump\n        /* \"gmdBTC_flat.sol\":23953:24021  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":24039:24060  spender != address(0) */\n      dup3\n      and\n        /* \"gmdBTC_flat.sol\":24031:24099  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4683:4685   */\n      0x20\n        /* \"gmdBTC_flat.sol\":24031:24099  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4665:4686   */\n      mstore\n        /* \"#utility.yul\":4722:4724   */\n      0x22\n        /* \"#utility.yul\":4702:4720   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4695:4725   */\n      mstore\n        /* \"#utility.yul\":4761:4795   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4741:4759   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4734:4796   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4812:4830   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4805:4837   */\n      mstore\n        /* \"#utility.yul\":4854:4873   */\n      0x84\n      add\n        /* \"gmdBTC_flat.sol\":24031:24099  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_139\n        /* \"#utility.yul\":4481:4879   */\n      jump\n        /* \"gmdBTC_flat.sol\":24031:24099  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":24110:24128  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"gmdBTC_flat.sol\":24110:24121  _allowances */\n      0x01\n        /* \"gmdBTC_flat.sol\":24110:24128  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"gmdBTC_flat.sol\":24110:24137  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"gmdBTC_flat.sol\":24110:24146  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"gmdBTC_flat.sol\":24161:24193  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"gmdBTC_flat.sol\":24161:24193  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"gmdBTC_flat.sol\":24161:24193  Approval(owner, spender, amount) */\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"gmdBTC_flat.sol\":23830:24200  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gmdBTC_flat.sol\":24481:24922  function _spendAllowance(... */\n    tag_101:\n        /* \"gmdBTC_flat.sol\":24611:24635  uint256 currentAllowance */\n      0x00\n        /* \"gmdBTC_flat.sol\":24638:24663  allowance(owner, spender) */\n      tag_163\n        /* \"gmdBTC_flat.sol\":24648:24653  owner */\n      dup5\n        /* \"gmdBTC_flat.sol\":24655:24662  spender */\n      dup5\n        /* \"gmdBTC_flat.sol\":24638:24647  allowance */\n      tag_80\n        /* \"gmdBTC_flat.sol\":24638:24663  allowance(owner, spender) */\n      jump\t// in\n    tag_163:\n        /* \"gmdBTC_flat.sol\":24611:24663  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"gmdBTC_flat.sol\":24677:24693  currentAllowance */\n      dup2\n        /* \"gmdBTC_flat.sol\":24677:24714  currentAllowance != type(uint256).max */\n      eq\n        /* \"gmdBTC_flat.sol\":24673:24916  if (currentAllowance != type(uint256).max) {... */\n      tag_168\n      jumpi\n        /* \"gmdBTC_flat.sol\":24758:24764  amount */\n      dup2\n        /* \"gmdBTC_flat.sol\":24738:24754  currentAllowance */\n      dup2\n        /* \"gmdBTC_flat.sol\":24738:24764  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"gmdBTC_flat.sol\":24730:24798  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5086:5088   */\n      0x20\n        /* \"gmdBTC_flat.sol\":24730:24798  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5068:5089   */\n      mstore\n        /* \"#utility.yul\":5125:5127   */\n      0x1d\n        /* \"#utility.yul\":5105:5123   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5098:5128   */\n      mstore\n        /* \"#utility.yul\":5164:5195   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":5144:5162   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5137:5196   */\n      mstore\n        /* \"#utility.yul\":5213:5231   */\n      0x64\n      add\n        /* \"gmdBTC_flat.sol\":24730:24798  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_139\n        /* \"#utility.yul\":4884:5237   */\n      jump\n        /* \"gmdBTC_flat.sol\":24730:24798  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_165:\n        /* \"gmdBTC_flat.sol\":24840:24891  _approve(owner, spender, currentAllowance - amount) */\n      tag_168\n        /* \"gmdBTC_flat.sol\":24849:24854  owner */\n      dup5\n        /* \"gmdBTC_flat.sol\":24856:24863  spender */\n      dup5\n        /* \"gmdBTC_flat.sol\":24884:24890  amount */\n      dup5\n        /* \"gmdBTC_flat.sol\":24865:24881  currentAllowance */\n      dup5\n        /* \"gmdBTC_flat.sol\":24865:24890  currentAllowance - amount */\n      sub\n        /* \"gmdBTC_flat.sol\":24840:24848  _approve */\n      tag_96\n        /* \"gmdBTC_flat.sol\":24840:24891  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_168:\n        /* \"gmdBTC_flat.sol\":24601:24922  {... */\n      pop\n        /* \"gmdBTC_flat.sol\":24481:24922  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gmdBTC_flat.sol\":21195:21846  function _transfer(... */\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":21321:21339  from != address(0) */\n      dup4\n      and\n        /* \"gmdBTC_flat.sol\":21313:21381  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5444:5446   */\n      0x20\n        /* \"gmdBTC_flat.sol\":21313:21381  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5426:5447   */\n      mstore\n        /* \"#utility.yul\":5483:5485   */\n      0x25\n        /* \"#utility.yul\":5463:5481   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5456:5486   */\n      mstore\n        /* \"#utility.yul\":5522:5556   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5502:5520   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5495:5557   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5573:5591   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5566:5601   */\n      mstore\n        /* \"#utility.yul\":5618:5637   */\n      0x84\n      add\n        /* \"gmdBTC_flat.sol\":21313:21381  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_139\n        /* \"#utility.yul\":5242:5643   */\n      jump\n        /* \"gmdBTC_flat.sol\":21313:21381  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":21399:21415  to != address(0) */\n      dup3\n      and\n        /* \"gmdBTC_flat.sol\":21391:21455  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5850:5852   */\n      0x20\n        /* \"gmdBTC_flat.sol\":21391:21455  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5832:5853   */\n      mstore\n        /* \"#utility.yul\":5889:5891   */\n      0x23\n        /* \"#utility.yul\":5869:5887   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5862:5892   */\n      mstore\n        /* \"#utility.yul\":5928:5962   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5908:5926   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5901:5963   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5979:5997   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5972:6005   */\n      mstore\n        /* \"#utility.yul\":6022:6041   */\n      0x84\n      add\n        /* \"gmdBTC_flat.sol\":21391:21455  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_139\n        /* \"#utility.yul\":5648:6047   */\n      jump\n        /* \"gmdBTC_flat.sol\":21391:21455  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":21537:21552  _balances[from] */\n      dup4\n      and\n        /* \"gmdBTC_flat.sol\":21515:21534  uint256 fromBalance */\n      0x00\n        /* \"gmdBTC_flat.sol\":21537:21552  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"gmdBTC_flat.sol\":21570:21591  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"gmdBTC_flat.sol\":21562:21634  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6254:6256   */\n      0x20\n        /* \"gmdBTC_flat.sol\":21562:21634  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6236:6257   */\n      mstore\n        /* \"#utility.yul\":6293:6295   */\n      0x26\n        /* \"#utility.yul\":6273:6291   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6266:6296   */\n      mstore\n        /* \"#utility.yul\":6332:6366   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":6312:6330   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6305:6367   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":6383:6401   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6376:6412   */\n      mstore\n        /* \"#utility.yul\":6429:6448   */\n      0x84\n      add\n        /* \"gmdBTC_flat.sol\":21562:21634  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_139\n        /* \"#utility.yul\":6052:6454   */\n      jump\n        /* \"gmdBTC_flat.sol\":21562:21634  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":21668:21683  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"gmdBTC_flat.sol\":21668:21677  _balances */\n      0x00\n        /* \"gmdBTC_flat.sol\":21668:21683  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"gmdBTC_flat.sol\":21686:21706  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"gmdBTC_flat.sol\":21668:21706  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"gmdBTC_flat.sol\":21726:21739  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"gmdBTC_flat.sol\":21726:21749  _balances[to] += amount */\n      dup1\n      sload\n        /* \"gmdBTC_flat.sol\":21700:21706  amount */\n      dup5\n      swap3\n        /* \"gmdBTC_flat.sol\":21668:21677  _balances */\n      swap1\n        /* \"gmdBTC_flat.sol\":21726:21749  _balances[to] += amount */\n      tag_181\n      swap1\n        /* \"gmdBTC_flat.sol\":21700:21706  amount */\n      dup5\n      swap1\n        /* \"gmdBTC_flat.sol\":21726:21749  _balances[to] += amount */\n      tag_110\n      jump\t// in\n    tag_181:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gmdBTC_flat.sol\":21780:21782  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":21765:21791  Transfer(from, to, amount) */\n      and\n        /* \"gmdBTC_flat.sol\":21774:21778  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":21765:21791  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"gmdBTC_flat.sol\":21784:21790  amount */\n      dup5\n        /* \"gmdBTC_flat.sol\":21765:21791  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_182\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"gmdBTC_flat.sol\":21765:21791  Transfer(from, to, amount) */\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"gmdBTC_flat.sol\":21802:21839  _afterTokenTransfer(from, to, amount) */\n      tag_168\n        /* \"gmdBTC_flat.sol\":22831:23407  function _burn(address account, uint256 amount) internal virtual {... */\n      jump\n        /* \"gmdBTC_flat.sol\":9028:9158  function _checkOwner() internal view virtual {... */\n    tag_113:\n        /* \"gmdBTC_flat.sol\":8942:8948  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"gmdBTC_flat.sol\":7552:7562  msg.sender */\n      caller\n        /* \"gmdBTC_flat.sol\":9091:9114  owner() == _msgSender() */\n      eq\n        /* \"gmdBTC_flat.sol\":9083:9151  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6661:6663   */\n      0x20\n        /* \"gmdBTC_flat.sol\":9083:9151  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6643:6664   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6680:6698   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6673:6703   */\n      mstore\n        /* \"#utility.yul\":6739:6773   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6719:6737   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6712:6774   */\n      mstore\n        /* \"#utility.yul\":6791:6809   */\n      0x64\n      add\n        /* \"gmdBTC_flat.sol\":9083:9151  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_139\n        /* \"#utility.yul\":6459:6815   */\n      jump\n        /* \"gmdBTC_flat.sol\":22122:22511  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":22205:22226  account != address(0) */\n      dup3\n      and\n        /* \"gmdBTC_flat.sol\":22197:22262  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7022:7024   */\n      0x20\n        /* \"gmdBTC_flat.sol\":22197:22262  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7004:7025   */\n      mstore\n        /* \"#utility.yul\":7061:7063   */\n      0x1f\n        /* \"#utility.yul\":7041:7059   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7034:7064   */\n      mstore\n        /* \"#utility.yul\":7100:7133   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":7080:7098   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7073:7134   */\n      mstore\n        /* \"#utility.yul\":7151:7169   */\n      0x64\n      add\n        /* \"gmdBTC_flat.sol\":22197:22262  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_139\n        /* \"#utility.yul\":6820:7175   */\n      jump\n        /* \"gmdBTC_flat.sol\":22197:22262  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_192:\n        /* \"gmdBTC_flat.sol\":22349:22355  amount */\n      dup1\n        /* \"gmdBTC_flat.sol\":22333:22345  _totalSupply */\n      0x02\n      0x00\n        /* \"gmdBTC_flat.sol\":22333:22355  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_196\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_196:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":22365:22383  _balances[account] */\n      dup3\n      and\n        /* \"gmdBTC_flat.sol\":22365:22374  _balances */\n      0x00\n        /* \"gmdBTC_flat.sol\":22365:22383  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"gmdBTC_flat.sol\":22365:22393  _balances[account] += amount */\n      dup1\n      sload\n        /* \"gmdBTC_flat.sol\":22387:22393  amount */\n      dup4\n      swap3\n        /* \"gmdBTC_flat.sol\":22365:22374  _balances */\n      swap1\n        /* \"gmdBTC_flat.sol\":22365:22393  _balances[account] += amount */\n      tag_197\n      swap1\n        /* \"gmdBTC_flat.sol\":22387:22393  amount */\n      dup5\n      swap1\n        /* \"gmdBTC_flat.sol\":22365:22393  _balances[account] += amount */\n      tag_110\n      jump\t// in\n    tag_197:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"gmdBTC_flat.sol\":22408:22445  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":22408:22445  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"gmdBTC_flat.sol\":22425:22426  0 */\n      0x00\n      swap1\n        /* \"gmdBTC_flat.sol\":22408:22445  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"gmdBTC_flat.sol\":22408:22445  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"gmdBTC_flat.sol\":26611:26723  function mint(address recipient, uint256 _amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"gmdBTC_flat.sol\":10102:10289  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_122:\n        /* \"gmdBTC_flat.sol\":10194:10200  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":10210:10227  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"gmdBTC_flat.sol\":10242:10282  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"gmdBTC_flat.sol\":10194:10200  _owner */\n      swap2\n      and\n      swap2\n        /* \"gmdBTC_flat.sol\":10210:10227  _owner = newOwner */\n      swap1\n        /* \"gmdBTC_flat.sol\":10194:10200  _owner */\n      dup3\n      swap1\n        /* \"gmdBTC_flat.sol\":10242:10282  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"gmdBTC_flat.sol\":10175:10191  address oldOwner */\n      0x00\n      swap1\n        /* \"gmdBTC_flat.sol\":10242:10282  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"gmdBTC_flat.sol\":10165:10289  {... */\n      pop\n        /* \"gmdBTC_flat.sol\":10102:10289  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"gmdBTC_flat.sol\":22831:23407  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":22914:22935  account != address(0) */\n      dup3\n      and\n        /* \"gmdBTC_flat.sol\":22906:22973  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7382:7384   */\n      0x20\n        /* \"gmdBTC_flat.sol\":22906:22973  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7364:7385   */\n      mstore\n        /* \"#utility.yul\":7421:7423   */\n      0x21\n        /* \"#utility.yul\":7401:7419   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7394:7424   */\n      mstore\n        /* \"#utility.yul\":7460:7494   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":7440:7458   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7433:7495   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":7511:7529   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7504:7535   */\n      mstore\n        /* \"#utility.yul\":7552:7571   */\n      0x84\n      add\n        /* \"gmdBTC_flat.sol\":22906:22973  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_139\n        /* \"#utility.yul\":7180:7577   */\n      jump\n        /* \"gmdBTC_flat.sol\":22906:22973  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":23069:23087  _balances[account] */\n      dup3\n      and\n        /* \"gmdBTC_flat.sol\":23044:23066  uint256 accountBalance */\n      0x00\n        /* \"gmdBTC_flat.sol\":23069:23087  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"gmdBTC_flat.sol\":23105:23129  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"gmdBTC_flat.sol\":23097:23168  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7784:7786   */\n      0x20\n        /* \"gmdBTC_flat.sol\":23097:23168  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7766:7787   */\n      mstore\n        /* \"#utility.yul\":7823:7825   */\n      0x22\n        /* \"#utility.yul\":7803:7821   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7796:7826   */\n      mstore\n        /* \"#utility.yul\":7862:7896   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":7842:7860   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7835:7897   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":7913:7931   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7906:7938   */\n      mstore\n        /* \"#utility.yul\":7955:7974   */\n      0x84\n      add\n        /* \"gmdBTC_flat.sol\":23097:23168  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_139\n        /* \"#utility.yul\":7582:7980   */\n      jump\n        /* \"gmdBTC_flat.sol\":23097:23168  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":23202:23220  _balances[account] */\n      dup4\n      and\n        /* \"gmdBTC_flat.sol\":23202:23211  _balances */\n      0x00\n        /* \"gmdBTC_flat.sol\":23202:23220  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"gmdBTC_flat.sol\":23223:23246  accountBalance - amount */\n      dup4\n      dup4\n      sub\n        /* \"gmdBTC_flat.sol\":23202:23246  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"gmdBTC_flat.sol\":23266:23278  _totalSupply */\n      0x02\n        /* \"gmdBTC_flat.sol\":23266:23288  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"gmdBTC_flat.sol\":23240:23246  amount */\n      dup5\n      swap3\n        /* \"gmdBTC_flat.sol\":23202:23211  _balances */\n      swap1\n        /* \"gmdBTC_flat.sol\":23266:23288  _totalSupply -= amount */\n      tag_209\n      swap1\n        /* \"gmdBTC_flat.sol\":23240:23246  amount */\n      dup5\n      swap1\n        /* \"gmdBTC_flat.sol\":23266:23288  _totalSupply -= amount */\n      tag_210\n      jump\t// in\n    tag_209:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"gmdBTC_flat.sol\":23304:23341  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      dup3\n      dup2\n      mstore\n        /* \"gmdBTC_flat.sol\":23330:23331  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gmdBTC_flat.sol\":23304:23341  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"gmdBTC_flat.sol\":23304:23341  Transfer(account, address(0), amount) */\n      tag_161\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_25:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_219:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_219)\n    tag_221:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_222:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_215:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_224\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_224:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_28:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_226:\n        /* \"#utility.yul\":962:991   */\n      tag_227\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_215\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_38:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_231:\n        /* \"#utility.yul\":1612:1641   */\n      tag_232\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_215\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_233\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_215\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_54:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_236:\n        /* \"#utility.yul\":2100:2129   */\n      tag_237\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_215\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2348:2608   */\n    tag_79:\n        /* \"#utility.yul\":2416:2422   */\n      0x00\n        /* \"#utility.yul\":2424:2430   */\n      dup1\n        /* \"#utility.yul\":2477:2479   */\n      0x40\n        /* \"#utility.yul\":2465:2474   */\n      dup4\n        /* \"#utility.yul\":2456:2463   */\n      dup6\n        /* \"#utility.yul\":2452:2475   */\n      sub\n        /* \"#utility.yul\":2448:2480   */\n      slt\n        /* \"#utility.yul\":2445:2497   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":2493:2494   */\n      0x00\n        /* \"#utility.yul\":2490:2491   */\n      dup1\n        /* \"#utility.yul\":2483:2495   */\n      revert\n        /* \"#utility.yul\":2445:2497   */\n    tag_240:\n        /* \"#utility.yul\":2516:2545   */\n      tag_241\n        /* \"#utility.yul\":2535:2544   */\n      dup4\n        /* \"#utility.yul\":2516:2545   */\n      tag_215\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2506:2545   */\n      swap2\n      pop\n        /* \"#utility.yul\":2564:2602   */\n      tag_242\n        /* \"#utility.yul\":2598:2600   */\n      0x20\n        /* \"#utility.yul\":2587:2596   */\n      dup5\n        /* \"#utility.yul\":2583:2601   */\n      add\n        /* \"#utility.yul\":2564:2602   */\n      tag_215\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2554:2602   */\n      swap1\n      pop\n        /* \"#utility.yul\":2348:2608   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2613:2993   */\n    tag_87:\n        /* \"#utility.yul\":2692:2693   */\n      0x01\n        /* \"#utility.yul\":2688:2700   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2735:2747   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2756:2817   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":2810:2814   */\n      0x7f\n        /* \"#utility.yul\":2802:2808   */\n      dup3\n        /* \"#utility.yul\":2798:2815   */\n      and\n        /* \"#utility.yul\":2788:2815   */\n      swap2\n      pop\n        /* \"#utility.yul\":2756:2817   */\n    tag_244:\n        /* \"#utility.yul\":2863:2865   */\n      0x20\n        /* \"#utility.yul\":2855:2861   */\n      dup3\n        /* \"#utility.yul\":2852:2866   */\n      lt\n        /* \"#utility.yul\":2832:2850   */\n      dup2\n        /* \"#utility.yul\":2829:2867   */\n      eq\n        /* \"#utility.yul\":2826:2987   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":2909:2919   */\n      0x4e487b71\n        /* \"#utility.yul\":2904:2907   */\n      0xe0\n        /* \"#utility.yul\":2900:2920   */\n      shl\n        /* \"#utility.yul\":2897:2898   */\n      0x00\n        /* \"#utility.yul\":2890:2921   */\n      mstore\n        /* \"#utility.yul\":2944:2948   */\n      0x22\n        /* \"#utility.yul\":2941:2942   */\n      0x04\n        /* \"#utility.yul\":2934:2949   */\n      mstore\n        /* \"#utility.yul\":2972:2976   */\n      0x24\n        /* \"#utility.yul\":2969:2970   */\n      0x00\n        /* \"#utility.yul\":2962:2977   */\n      revert\n        /* \"#utility.yul\":2826:2987   */\n    tag_245:\n      pop\n        /* \"#utility.yul\":2613:2993   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2998:3125   */\n    tag_216:\n        /* \"#utility.yul\":3059:3069   */\n      0x4e487b71\n        /* \"#utility.yul\":3054:3057   */\n      0xe0\n        /* \"#utility.yul\":3050:3070   */\n      shl\n        /* \"#utility.yul\":3047:3048   */\n      0x00\n        /* \"#utility.yul\":3040:3071   */\n      mstore\n        /* \"#utility.yul\":3090:3094   */\n      0x11\n        /* \"#utility.yul\":3087:3088   */\n      0x04\n        /* \"#utility.yul\":3080:3095   */\n      mstore\n        /* \"#utility.yul\":3114:3118   */\n      0x24\n        /* \"#utility.yul\":3111:3112   */\n      0x00\n        /* \"#utility.yul\":3104:3119   */\n      revert\n        /* \"#utility.yul\":3130:3258   */\n    tag_110:\n        /* \"#utility.yul\":3170:3173   */\n      0x00\n        /* \"#utility.yul\":3201:3202   */\n      dup3\n        /* \"#utility.yul\":3197:3203   */\n      not\n        /* \"#utility.yul\":3194:3195   */\n      dup3\n        /* \"#utility.yul\":3191:3204   */\n      gt\n        /* \"#utility.yul\":3188:3227   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":3207:3225   */\n      tag_249\n      tag_216\n      jump\t// in\n    tag_249:\n      pop\n        /* \"#utility.yul\":3243:3252   */\n      add\n      swap1\n        /* \"#utility.yul\":3130:3258   */\n      jump\t// out\n        /* \"#utility.yul\":7985:8110   */\n    tag_210:\n        /* \"#utility.yul\":8025:8029   */\n      0x00\n        /* \"#utility.yul\":8053:8054   */\n      dup3\n        /* \"#utility.yul\":8050:8051   */\n      dup3\n        /* \"#utility.yul\":8047:8055   */\n      lt\n        /* \"#utility.yul\":8044:8078   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":8058:8076   */\n      tag_264\n      tag_216\n      jump\t// in\n    tag_264:\n      pop\n        /* \"#utility.yul\":8095:8104   */\n      sub\n      swap1\n        /* \"#utility.yul\":7985:8110   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c2d9f19eb244994a6e9697dd7ff6845846720fd8be03f00b5040369f7318756664736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_354": {
									"entryPoint": null,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_322": {
									"entryPoint": 140,
									"id": 322,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_442": {
									"entryPoint": 144,
									"id": 442,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:1"
															},
															"nodeType": "YulIf",
															"src": "157:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:1"
															},
															"nodeType": "YulIf",
															"src": "227:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:1",
														"type": ""
													}
												],
												"src": "14:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604080518082018252600680825265676d6442544360d01b6020808401828152855180870190965292855284015281519192916200005391600391620000e2565b50805162000069906004906020840190620000e2565b50505062000086620000806200008c60201b60201c565b62000090565b620001c5565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000f09062000188565b90600052602060002090601f0160209004810192826200011457600085556200015f565b82601f106200012f57805160ff19168380011785556200015f565b828001600101855582156200015f579182015b828111156200015f57825182559160200191906001019062000142565b506200016d92915062000171565b5090565b5b808211156200016d576000815560010162000172565b600181811c908216806200019d57607f821691505b60208210811415620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b610ce280620001d56000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d714610209578063a9059cbb1461021c578063dd62ed3e1461022f578063f2fde38b1461024257600080fd5b8063715018a6146101cb5780638da5cb5b146101d357806395d89b41146101ee5780639dc29fac146101f657600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806340c10f191461018d57806370a08231146101a257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610255565b60405161011a9190610b00565b60405180910390f35b610136610131366004610b71565b6102e7565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610b9b565b6102ff565b6040516012815260200161011a565b610136610188366004610b71565b610323565b6101a061019b366004610b71565b610345565b005b61014a6101b0366004610bd7565b6001600160a01b031660009081526020819052604090205490565b6101a061035b565b6005546040516001600160a01b03909116815260200161011a565b61010d61036f565b6101a0610204366004610b71565b61037e565b610136610217366004610b71565b610390565b61013661022a366004610b71565b610410565b61014a61023d366004610bf9565b61041e565b6101a0610250366004610bd7565b610449565b60606003805461026490610c2c565b80601f016020809104026020016040519081016040528092919081815260200182805461029090610c2c565b80156102dd5780601f106102b2576101008083540402835291602001916102dd565b820191906000526020600020905b8154815290600101906020018083116102c057829003601f168201915b5050505050905090565b6000336102f58185856104c2565b5060019392505050565b60003361030d8582856105e7565b610318858585610661565b506001949350505050565b6000336102f5818585610336838361041e565b6103409190610c7d565b6104c2565b61034d61082f565b6103578282610889565b5050565b61036361082f565b61036d6000610968565b565b60606004805461026490610c2c565b61038661082f565b61035782826109ba565b6000338161039e828661041e565b9050838110156104035760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61031882868684036104c2565b6000336102f5818585610661565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61045161082f565b6001600160a01b0381166104b65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fa565b6104bf81610968565b50565b6001600160a01b0383166105245760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fa565b6001600160a01b0382166105855760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fa565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105f3848461041e565b9050600019811461065b578181101561064e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103fa565b61065b84848484036104c2565b50505050565b6001600160a01b0383166106c55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fa565b6001600160a01b0382166107275760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fa565b6001600160a01b0383166000908152602081905260409020548181101561079f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103fa565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107d6908490610c7d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161082291815260200190565b60405180910390a361065b565b6005546001600160a01b0316331461036d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fa565b6001600160a01b0382166108df5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103fa565b80600260008282546108f19190610c7d565b90915550506001600160a01b0382166000908152602081905260408120805483929061091e908490610c7d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610a1a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103fa565b6001600160a01b03821660009081526020819052604090205481811015610a8e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103fa565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610abd908490610c95565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016105da565b600060208083528351808285015260005b81811015610b2d57858101830151858201604001528201610b11565b81811115610b3f576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b6c57600080fd5b919050565b60008060408385031215610b8457600080fd5b610b8d83610b55565b946020939093013593505050565b600080600060608486031215610bb057600080fd5b610bb984610b55565b9250610bc760208501610b55565b9150604084013590509250925092565b600060208284031215610be957600080fd5b610bf282610b55565b9392505050565b60008060408385031215610c0c57600080fd5b610c1583610b55565b9150610c2360208401610b55565b90509250929050565b600181811c90821680610c4057607f821691505b60208210811415610c6157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c9057610c90610c67565b500190565b600082821015610ca757610ca7610c67565b50039056fea2646970667358221220c2d9f19eb244994a6e9697dd7ff6845846720fd8be03f00b5040369f7318756664736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x6 DUP1 DUP3 MSTORE PUSH6 0x676D64425443 PUSH1 0xD0 SHL PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 DUP8 ADD SWAP1 SWAP7 MSTORE SWAP3 DUP6 MSTORE DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x53 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0xE2 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x69 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xE2 JUMP JUMPDEST POP POP POP PUSH3 0x86 PUSH3 0x80 PUSH3 0x8C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x90 JUMP JUMPDEST PUSH3 0x1C5 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xF0 SWAP1 PUSH3 0x188 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x114 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x15F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x12F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x15F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x15F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x15F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x142 JUMP JUMPDEST POP PUSH3 0x16D SWAP3 SWAP2 POP PUSH3 0x171 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x16D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x172 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE2 DUP1 PUSH3 0x1D5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x36F JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x37E JUMP JUMPDEST PUSH2 0x136 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x264 SWAP1 PUSH2 0xC2C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x290 SWAP1 PUSH2 0xC2C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x4C2 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x30D DUP6 DUP3 DUP6 PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x318 DUP6 DUP6 DUP6 PUSH2 0x661 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x336 DUP4 DUP4 PUSH2 0x41E JUMP JUMPDEST PUSH2 0x340 SWAP2 SWAP1 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x34D PUSH2 0x82F JUMP JUMPDEST PUSH2 0x357 DUP3 DUP3 PUSH2 0x889 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x363 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x36D PUSH1 0x0 PUSH2 0x968 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x264 SWAP1 PUSH2 0xC2C JUMP JUMPDEST PUSH2 0x386 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x357 DUP3 DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x39E DUP3 DUP7 PUSH2 0x41E JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x403 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x318 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x661 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x451 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH2 0x4BF DUP2 PUSH2 0x968 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F3 DUP5 DUP5 PUSH2 0x41E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x65B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x64E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH2 0x65B DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x4C2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x727 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x79F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7D6 SWAP1 DUP5 SWAP1 PUSH2 0xC7D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x822 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x65B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x36D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3FA JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8F1 SWAP2 SWAP1 PUSH2 0xC7D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x91E SWAP1 DUP5 SWAP1 PUSH2 0xC7D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xABD SWAP1 DUP5 SWAP1 PUSH2 0xC95 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB2D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB11 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB8D DUP4 PUSH2 0xB55 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB9 DUP5 PUSH2 0xB55 JUMP JUMPDEST SWAP3 POP PUSH2 0xBC7 PUSH1 0x20 DUP6 ADD PUSH2 0xB55 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF2 DUP3 PUSH2 0xB55 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC15 DUP4 PUSH2 0xB55 JUMP JUMPDEST SWAP2 POP PUSH2 0xC23 PUSH1 0x20 DUP5 ADD PUSH2 0xB55 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC40 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC61 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC90 JUMPI PUSH2 0xC90 PUSH2 0xC67 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xCA7 JUMPI PUSH2 0xCA7 PUSH2 0xC67 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xD9 CALL SWAP15 0xB2 DIFFICULTY SWAP10 0x4A PUSH15 0x9697DD7FF6845846720FD8BE03F00B POP BLOCKHASH CALLDATASIZE SWAP16 PUSH20 0x18756664736F6C634300080C0033000000000000 ",
							"sourceMap": "26407:319:0:-:0;;;;;;;;;;;;-1:-1:-1;15698:113:0;;;;;;;;;;;;-1:-1:-1;;;15698:113:0;;;;;;;;;;;;;;;;;;;;;15764:13;;15698:113;;;15764:13;;:5;;:13;:::i;:::-;-1:-1:-1;15787:17:0;;;;:7;;:17;;;;;:::i;:::-;;15698:113;;8605:32;8624:12;:10;;;:12;;:::i;:::-;8605:18;:32::i;:::-;26407:319;;7473:96;7552:10;;7473:96::o;10102:187::-;10194:6;;;-1:-1:-1;;;;;10210:17:0;;;-1:-1:-1;;;;;;10210:17:0;;;;;;;10242:40;;10194:6;;;10210:17;10194:6;;10242:40;;10175:16;;10242:40;10165:124;10102:187;:::o;26407:319::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26407:319:0;;;-1:-1:-1;26407:319:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:1;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;26407:319:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1124": {
									"entryPoint": null,
									"id": 1124,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1059": {
									"entryPoint": 1218,
									"id": 1059,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1113": {
									"entryPoint": null,
									"id": 1113,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1014": {
									"entryPoint": 2490,
									"id": 1014,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_385": {
									"entryPoint": 2095,
									"id": 385,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_942": {
									"entryPoint": 2185,
									"id": 942,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_322": {
									"entryPoint": null,
									"id": 322,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1102": {
									"entryPoint": 1511,
									"id": 1102,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_442": {
									"entryPoint": 2408,
									"id": 442,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_886": {
									"entryPoint": 1633,
									"id": 886,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_681": {
									"entryPoint": 1054,
									"id": 681,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_706": {
									"entryPoint": 743,
									"id": 706,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_638": {
									"entryPoint": null,
									"id": 638,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1150": {
									"entryPoint": 894,
									"id": 1150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_614": {
									"entryPoint": null,
									"id": 614,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_809": {
									"entryPoint": 912,
									"id": 809,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_768": {
									"entryPoint": 803,
									"id": 768,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_1165": {
									"entryPoint": 837,
									"id": 1165,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_594": {
									"entryPoint": 597,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_371": {
									"entryPoint": null,
									"id": 371,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_399": {
									"entryPoint": 859,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_604": {
									"entryPoint": 879,
									"id": 604,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_624": {
									"entryPoint": null,
									"id": 624,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_739": {
									"entryPoint": 767,
									"id": 739,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_422": {
									"entryPoint": 1097,
									"id": 422,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_663": {
									"entryPoint": 1040,
									"id": 663,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3175,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8112:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:1"
															},
															"nodeType": "YulIf",
															"src": "443:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:1"
															},
															"nodeType": "YulIf",
															"src": "713:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:1",
														"type": ""
													}
												],
												"src": "616:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:1"
															},
															"nodeType": "YulIf",
															"src": "891:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:1",
														"type": ""
													}
												],
												"src": "794:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:1",
														"type": ""
													}
												],
												"src": "1053:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:1",
														"type": ""
													}
												],
												"src": "1245:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:1"
															},
															"nodeType": "YulIf",
															"src": "1541:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:1",
														"type": ""
													}
												],
												"src": "1427:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:1",
														"type": ""
													}
												],
												"src": "1760:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:1"
															},
															"nodeType": "YulIf",
															"src": "2029:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:1",
														"type": ""
													}
												],
												"src": "1949:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2241:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2251:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2263:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2274:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2259:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2251:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2293:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2308:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2324:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2329:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2320:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2320:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2333:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2316:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2316:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2304:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2304:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2210:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2221:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2232:4:1",
														"type": ""
													}
												],
												"src": "2140:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2435:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2481:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2490:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2493:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2483:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2483:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2483:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2456:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2465:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2452:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2452:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2477:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2448:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:32:1"
															},
															"nodeType": "YulIf",
															"src": "2445:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2506:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2535:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2516:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2516:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2506:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2554:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2587:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2598:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2583:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2583:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2564:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2564:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2393:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2404:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2416:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2424:6:1",
														"type": ""
													}
												],
												"src": "2348:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2668:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2678:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2695:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2688:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2688:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2678:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2709:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2739:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2745:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2735:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2735:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2713:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2786:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2788:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2802:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2810:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2798:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2798:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2788:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2766:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2759:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2759:26:1"
															},
															"nodeType": "YulIf",
															"src": "2756:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2876:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2897:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2904:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2909:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2900:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2900:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2890:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2890:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2890:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2944:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2934:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2934:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2934:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2972:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2962:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2962:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2962:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2832:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2855:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2863:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2852:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2852:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2829:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2829:38:1"
															},
															"nodeType": "YulIf",
															"src": "2826:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2648:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2657:6:1",
														"type": ""
													}
												],
												"src": "2613:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3030:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3047:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3054:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3059:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3050:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3050:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3040:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3040:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3087:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3090:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3080:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3080:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3080:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3111:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3114:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3104:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3104:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2998:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3178:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3205:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3207:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3207:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3207:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3194:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3201:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3197:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3197:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3191:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3191:13:1"
															},
															"nodeType": "YulIf",
															"src": "3188:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3236:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3247:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3250:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3243:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3243:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3236:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3161:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3164:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3170:3:1",
														"type": ""
													}
												],
												"src": "3130:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3437:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3454:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3465:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3447:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3447:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3447:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3488:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3499:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3484:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3484:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3504:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3477:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3477:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3477:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3527:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3538:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3523:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3523:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3543:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3516:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3516:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3598:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3609:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3594:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3594:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3614:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3587:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3587:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3587:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3631:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3643:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3654:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3639:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3639:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3631:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3414:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3428:4:1",
														"type": ""
													}
												],
												"src": "3263:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3843:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3860:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3871:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3853:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3853:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3894:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3905:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3890:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3890:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3910:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3883:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3883:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3883:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3933:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3944:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3929:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3929:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3949:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3922:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3922:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3922:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4020:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4038:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4050:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4061:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4046:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4046:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4038:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3820:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3834:4:1",
														"type": ""
													}
												],
												"src": "3669:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4250:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4267:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4278:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4260:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4260:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4260:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4301:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4312:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4297:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4297:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4317:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4290:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4290:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4290:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4340:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4351:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4336:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4336:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4356:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4329:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4329:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4329:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4411:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4422:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4407:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4407:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4427:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4400:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4400:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4400:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4443:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4455:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4466:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4451:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4451:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4443:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4227:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4241:4:1",
														"type": ""
													}
												],
												"src": "4076:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4655:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4672:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4683:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4665:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4665:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4665:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4706:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4717:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4702:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4702:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4722:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4695:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4695:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4695:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4745:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4756:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4741:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4741:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4761:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4734:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4734:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4734:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4816:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4827:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4812:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4812:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4832:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4805:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4805:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4805:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4846:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4858:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4869:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4854:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4854:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4846:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4632:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4646:4:1",
														"type": ""
													}
												],
												"src": "4481:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5058:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5075:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5086:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5068:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5068:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5068:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5109:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5120:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5105:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5105:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5125:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5098:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5098:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5098:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5148:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5159:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5144:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5144:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5164:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5137:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5137:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5137:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5205:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5217:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5228:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5213:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5213:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5205:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5035:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5049:4:1",
														"type": ""
													}
												],
												"src": "4884:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5416:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5433:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5444:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5426:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5426:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5426:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5467:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5478:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5463:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5483:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5456:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5456:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5506:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5517:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5502:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5502:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5522:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5495:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5495:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5495:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5577:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5588:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5573:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5573:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5593:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5566:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5566:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5566:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5610:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5622:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5633:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5618:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5618:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5610:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5393:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5407:4:1",
														"type": ""
													}
												],
												"src": "5242:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5822:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5839:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5850:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5832:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5832:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5832:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5873:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5884:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5869:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5869:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5889:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5862:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5862:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5862:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5912:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5923:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5908:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5928:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5901:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5901:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5901:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5983:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5994:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5979:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5979:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5999:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5972:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5972:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5972:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6014:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6026:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6037:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6022:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6022:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6014:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5799:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5813:4:1",
														"type": ""
													}
												],
												"src": "5648:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6226:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6243:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6254:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6236:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6236:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6277:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6288:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6273:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6273:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6293:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6266:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6266:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6266:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6316:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6327:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6312:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6312:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6332:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6305:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6305:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6305:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6387:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6398:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6383:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6383:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6403:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6376:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6376:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6376:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6421:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6433:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6444:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6429:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6429:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6421:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6203:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6217:4:1",
														"type": ""
													}
												],
												"src": "6052:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6633:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6650:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6661:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6643:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6643:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6643:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6684:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6695:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6680:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6680:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6700:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6673:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6673:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6723:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6734:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6719:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6739:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6712:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6712:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6712:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6783:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6795:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6806:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6791:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6791:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6783:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6610:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6624:4:1",
														"type": ""
													}
												],
												"src": "6459:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6994:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7011:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7022:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7004:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7004:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7004:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7045:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7056:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7041:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7041:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7061:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7034:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7034:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7034:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7084:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7095:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7080:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7080:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7100:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7073:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7073:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7073:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7143:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7155:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7151:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7151:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7143:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6971:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6985:4:1",
														"type": ""
													}
												],
												"src": "6820:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7354:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7371:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7382:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7364:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7364:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7364:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7405:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7416:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7401:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7401:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7421:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7394:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7394:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7394:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7444:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7455:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7440:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7460:34:1",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7433:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7433:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7515:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7526:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7511:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7511:18:1"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7531:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7504:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7504:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7504:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7544:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7556:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7567:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7552:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7552:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7544:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7331:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7345:4:1",
														"type": ""
													}
												],
												"src": "7180:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7756:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7773:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7784:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7766:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7766:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7807:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7818:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7803:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7803:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7823:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7796:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7796:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7796:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7846:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7857:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7842:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7842:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7862:34:1",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7835:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7835:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7835:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7917:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7928:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7913:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7913:18:1"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7933:4:1",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7906:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7906:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7906:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7947:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7959:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7970:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7955:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7955:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7947:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7733:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7747:4:1",
														"type": ""
													}
												],
												"src": "7582:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8034:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8056:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8058:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8058:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8058:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8050:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8053:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8047:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8047:8:1"
															},
															"nodeType": "YulIf",
															"src": "8044:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8087:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8099:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8102:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8095:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8095:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8087:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8016:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8019:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8025:4:1",
														"type": ""
													}
												],
												"src": "7985:125:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d714610209578063a9059cbb1461021c578063dd62ed3e1461022f578063f2fde38b1461024257600080fd5b8063715018a6146101cb5780638da5cb5b146101d357806395d89b41146101ee5780639dc29fac146101f657600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806340c10f191461018d57806370a08231146101a257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610255565b60405161011a9190610b00565b60405180910390f35b610136610131366004610b71565b6102e7565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610b9b565b6102ff565b6040516012815260200161011a565b610136610188366004610b71565b610323565b6101a061019b366004610b71565b610345565b005b61014a6101b0366004610bd7565b6001600160a01b031660009081526020819052604090205490565b6101a061035b565b6005546040516001600160a01b03909116815260200161011a565b61010d61036f565b6101a0610204366004610b71565b61037e565b610136610217366004610b71565b610390565b61013661022a366004610b71565b610410565b61014a61023d366004610bf9565b61041e565b6101a0610250366004610bd7565b610449565b60606003805461026490610c2c565b80601f016020809104026020016040519081016040528092919081815260200182805461029090610c2c565b80156102dd5780601f106102b2576101008083540402835291602001916102dd565b820191906000526020600020905b8154815290600101906020018083116102c057829003601f168201915b5050505050905090565b6000336102f58185856104c2565b5060019392505050565b60003361030d8582856105e7565b610318858585610661565b506001949350505050565b6000336102f5818585610336838361041e565b6103409190610c7d565b6104c2565b61034d61082f565b6103578282610889565b5050565b61036361082f565b61036d6000610968565b565b60606004805461026490610c2c565b61038661082f565b61035782826109ba565b6000338161039e828661041e565b9050838110156104035760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61031882868684036104c2565b6000336102f5818585610661565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61045161082f565b6001600160a01b0381166104b65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fa565b6104bf81610968565b50565b6001600160a01b0383166105245760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fa565b6001600160a01b0382166105855760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fa565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105f3848461041e565b9050600019811461065b578181101561064e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103fa565b61065b84848484036104c2565b50505050565b6001600160a01b0383166106c55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fa565b6001600160a01b0382166107275760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fa565b6001600160a01b0383166000908152602081905260409020548181101561079f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103fa565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107d6908490610c7d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161082291815260200190565b60405180910390a361065b565b6005546001600160a01b0316331461036d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fa565b6001600160a01b0382166108df5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103fa565b80600260008282546108f19190610c7d565b90915550506001600160a01b0382166000908152602081905260408120805483929061091e908490610c7d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610a1a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103fa565b6001600160a01b03821660009081526020819052604090205481811015610a8e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103fa565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610abd908490610c95565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016105da565b600060208083528351808285015260005b81811015610b2d57858101830151858201604001528201610b11565b81811115610b3f576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b6c57600080fd5b919050565b60008060408385031215610b8457600080fd5b610b8d83610b55565b946020939093013593505050565b600080600060608486031215610bb057600080fd5b610bb984610b55565b9250610bc760208501610b55565b9150604084013590509250925092565b600060208284031215610be957600080fd5b610bf282610b55565b9392505050565b60008060408385031215610c0c57600080fd5b610c1583610b55565b9150610c2360208401610b55565b90509250929050565b600181811c90821680610c4057607f821691505b60208210811415610c6157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c9057610c90610c67565b500190565b600082821015610ca757610ca7610c67565b50039056fea2646970667358221220c2d9f19eb244994a6e9697dd7ff6845846720fd8be03f00b5040369f7318756664736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x36F JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x37E JUMP JUMPDEST PUSH2 0x136 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x264 SWAP1 PUSH2 0xC2C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x290 SWAP1 PUSH2 0xC2C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x4C2 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x30D DUP6 DUP3 DUP6 PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x318 DUP6 DUP6 DUP6 PUSH2 0x661 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x336 DUP4 DUP4 PUSH2 0x41E JUMP JUMPDEST PUSH2 0x340 SWAP2 SWAP1 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x34D PUSH2 0x82F JUMP JUMPDEST PUSH2 0x357 DUP3 DUP3 PUSH2 0x889 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x363 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x36D PUSH1 0x0 PUSH2 0x968 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x264 SWAP1 PUSH2 0xC2C JUMP JUMPDEST PUSH2 0x386 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x357 DUP3 DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x39E DUP3 DUP7 PUSH2 0x41E JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x403 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x318 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x661 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x451 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH2 0x4BF DUP2 PUSH2 0x968 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F3 DUP5 DUP5 PUSH2 0x41E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x65B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x64E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH2 0x65B DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x4C2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x727 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x79F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7D6 SWAP1 DUP5 SWAP1 PUSH2 0xC7D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x822 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x65B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x36D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3FA JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8F1 SWAP2 SWAP1 PUSH2 0xC7D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x91E SWAP1 DUP5 SWAP1 PUSH2 0xC7D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xABD SWAP1 DUP5 SWAP1 PUSH2 0xC95 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB2D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB11 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB8D DUP4 PUSH2 0xB55 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB9 DUP5 PUSH2 0xB55 JUMP JUMPDEST SWAP3 POP PUSH2 0xBC7 PUSH1 0x20 DUP6 ADD PUSH2 0xB55 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF2 DUP3 PUSH2 0xB55 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC15 DUP4 PUSH2 0xB55 JUMP JUMPDEST SWAP2 POP PUSH2 0xC23 PUSH1 0x20 DUP5 ADD PUSH2 0xB55 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC40 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC61 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC90 JUMPI PUSH2 0xC90 PUSH2 0xC67 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xCA7 JUMPI PUSH2 0xCA7 PUSH2 0xC67 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xD9 CALL SWAP15 0xB2 DIFFICULTY SWAP10 0x4A PUSH15 0x9697DD7FF6845846720FD8BE03F00B POP BLOCKHASH CALLDATASIZE SWAP16 PUSH20 0x18756664736F6C634300080C0033000000000000 ",
							"sourceMap": "26407:319:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15876:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18153:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;18153:197:0;1053:187:1;16964:106:0;17051:12;;16964:106;;;1391:25:1;;;1379:2;1364:18;16964:106:0;1245:177:1;18912:286:0;;;;;;:::i;:::-;;:::i;16813:91::-;;;16895:2;1902:36:1;;1890:2;1875:18;16813:91:0;1760:184:1;19593:234:0;;;;;;:::i;:::-;;:::i;26611:112::-;;;;;;:::i;:::-;;:::i;:::-;;17128:125;;;;;;:::i;:::-;-1:-1:-1;;;;;17228:18:0;17202:7;17228:18;;;;;;;;;;;;17128:125;9500:101;;;:::i;8870:85::-;8942:6;;8870:85;;-1:-1:-1;;;;;8942:6:0;;;2286:51:1;;2274:2;2259:18;8870:85:0;2140:203:1;16087:102:0;;;:::i;26501:104::-;;;;;;:::i;:::-;;:::i;20314:427::-;;;;;;:::i;:::-;;:::i;17449:189::-;;;;;;:::i;:::-;;:::i;17696:149::-;;;;;;:::i;:::-;;:::i;9750:198::-;;;;;;:::i;:::-;;:::i;15876:98::-;15930:13;15962:5;15955:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15876:98;:::o;18153:197::-;18236:4;7552:10;18290:32;7552:10;18306:7;18315:6;18290:8;:32::i;:::-;-1:-1:-1;18339:4:0;;18153:197;-1:-1:-1;;;18153:197:0:o;18912:286::-;19039:4;7552:10;19095:38;19111:4;7552:10;19126:6;19095:15;:38::i;:::-;19143:27;19153:4;19159:2;19163:6;19143:9;:27::i;:::-;-1:-1:-1;19187:4:0;;18912:286;-1:-1:-1;;;;18912:286:0:o;19593:234::-;19681:4;7552:10;19735:64;7552:10;19751:7;19788:10;19760:25;7552:10;19751:7;19760:9;:25::i;:::-;:38;;;;:::i;:::-;19735:8;:64::i;26611:112::-;8763:13;:11;:13::i;:::-;26690:25:::1;26696:9;26707:7;26690:5;:25::i;:::-;26611:112:::0;;:::o;9500:101::-;8763:13;:11;:13::i;:::-;9564:30:::1;9591:1;9564:18;:30::i;:::-;9500:101::o:0;16087:102::-;16143:13;16175:7;16168:14;;;;;:::i;26501:104::-;8763:13;:11;:13::i;:::-;26577:21:::1;26583:5;26590:7;26577:5;:21::i;20314:427::-:0;20407:4;7552:10;20407:4;20488:25;7552:10;20505:7;20488:9;:25::i;:::-;20461:52;;20551:15;20531:16;:35;;20523:85;;;;-1:-1:-1;;;20523:85:0;;3465:2:1;20523:85:0;;;3447:21:1;3504:2;3484:18;;;3477:30;3543:34;3523:18;;;3516:62;-1:-1:-1;;;3594:18:1;;;3587:35;3639:19;;20523:85:0;;;;;;;;;20642:60;20651:5;20658:7;20686:15;20667:16;:34;20642:8;:60::i;17449:189::-;17528:4;7552:10;17582:28;7552:10;17599:2;17603:6;17582:9;:28::i;17696:149::-;-1:-1:-1;;;;;17811:18:0;;;17785:7;17811:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;17696:149::o;9750:198::-;8763:13;:11;:13::i;:::-;-1:-1:-1;;;;;9838:22:0;::::1;9830:73;;;::::0;-1:-1:-1;;;9830:73:0;;3871:2:1;9830:73:0::1;::::0;::::1;3853:21:1::0;3910:2;3890:18;;;3883:30;3949:34;3929:18;;;3922:62;-1:-1:-1;;;4000:18:1;;;3993:36;4046:19;;9830:73:0::1;3669:402:1::0;9830:73:0::1;9913:28;9932:8;9913:18;:28::i;:::-;9750:198:::0;:::o;23830:370::-;-1:-1:-1;;;;;23961:19:0;;23953:68;;;;-1:-1:-1;;;23953:68:0;;4278:2:1;23953:68:0;;;4260:21:1;4317:2;4297:18;;;4290:30;4356:34;4336:18;;;4329:62;-1:-1:-1;;;4407:18:1;;;4400:34;4451:19;;23953:68:0;4076:400:1;23953:68:0;-1:-1:-1;;;;;24039:21:0;;24031:68;;;;-1:-1:-1;;;24031:68:0;;4683:2:1;24031:68:0;;;4665:21:1;4722:2;4702:18;;;4695:30;4761:34;4741:18;;;4734:62;-1:-1:-1;;;4812:18:1;;;4805:32;4854:19;;24031:68:0;4481:398:1;24031:68:0;-1:-1:-1;;;;;24110:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;24161:32;;1391:25:1;;;24161:32:0;;1364:18:1;24161:32:0;;;;;;;;23830:370;;;:::o;24481:441::-;24611:24;24638:25;24648:5;24655:7;24638:9;:25::i;:::-;24611:52;;-1:-1:-1;;24677:16:0;:37;24673:243;;24758:6;24738:16;:26;;24730:68;;;;-1:-1:-1;;;24730:68:0;;5086:2:1;24730:68:0;;;5068:21:1;5125:2;5105:18;;;5098:30;5164:31;5144:18;;;5137:59;5213:18;;24730:68:0;4884:353:1;24730:68:0;24840:51;24849:5;24856:7;24884:6;24865:16;:25;24840:8;:51::i;:::-;24601:321;24481:441;;;:::o;21195:651::-;-1:-1:-1;;;;;21321:18:0;;21313:68;;;;-1:-1:-1;;;21313:68:0;;5444:2:1;21313:68:0;;;5426:21:1;5483:2;5463:18;;;5456:30;5522:34;5502:18;;;5495:62;-1:-1:-1;;;5573:18:1;;;5566:35;5618:19;;21313:68:0;5242:401:1;21313:68:0;-1:-1:-1;;;;;21399:16:0;;21391:64;;;;-1:-1:-1;;;21391:64:0;;5850:2:1;21391:64:0;;;5832:21:1;5889:2;5869:18;;;5862:30;5928:34;5908:18;;;5901:62;-1:-1:-1;;;5979:18:1;;;5972:33;6022:19;;21391:64:0;5648:399:1;21391:64:0;-1:-1:-1;;;;;21537:15:0;;21515:19;21537:15;;;;;;;;;;;21570:21;;;;21562:72;;;;-1:-1:-1;;;21562:72:0;;6254:2:1;21562:72:0;;;6236:21:1;6293:2;6273:18;;;6266:30;6332:34;6312:18;;;6305:62;-1:-1:-1;;;6383:18:1;;;6376:36;6429:19;;21562:72:0;6052:402:1;21562:72:0;-1:-1:-1;;;;;21668:15:0;;;:9;:15;;;;;;;;;;;21686:20;;;21668:38;;21726:13;;;;;;;;:23;;21700:6;;21668:9;21726:23;;21700:6;;21726:23;:::i;:::-;;;;;;;;21780:2;-1:-1:-1;;;;;21765:26:0;21774:4;-1:-1:-1;;;;;21765:26:0;;21784:6;21765:26;;;;1391:25:1;;1379:2;1364:18;;1245:177;21765:26:0;;;;;;;;21802:37;22831:576;9028:130;8942:6;;-1:-1:-1;;;;;8942:6:0;7552:10;9091:23;9083:68;;;;-1:-1:-1;;;9083:68:0;;6661:2:1;9083:68:0;;;6643:21:1;;;6680:18;;;6673:30;6739:34;6719:18;;;6712:62;6791:18;;9083:68:0;6459:356:1;22122:389:0;-1:-1:-1;;;;;22205:21:0;;22197:65;;;;-1:-1:-1;;;22197:65:0;;7022:2:1;22197:65:0;;;7004:21:1;7061:2;7041:18;;;7034:30;7100:33;7080:18;;;7073:61;7151:18;;22197:65:0;6820:355:1;22197:65:0;22349:6;22333:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;22365:18:0;;:9;:18;;;;;;;;;;:28;;22387:6;;22365:9;:28;;22387:6;;22365:28;:::i;:::-;;;;-1:-1:-1;;22408:37:0;;1391:25:1;;;-1:-1:-1;;;;;22408:37:0;;;22425:1;;22408:37;;1379:2:1;1364:18;22408:37:0;;;;;;;26611:112;;:::o;10102:187::-;10194:6;;;-1:-1:-1;;;;;10210:17:0;;;-1:-1:-1;;;;;;10210:17:0;;;;;;;10242:40;;10194:6;;;10210:17;10194:6;;10242:40;;10175:16;;10242:40;10165:124;10102:187;:::o;22831:576::-;-1:-1:-1;;;;;22914:21:0;;22906:67;;;;-1:-1:-1;;;22906:67:0;;7382:2:1;22906:67:0;;;7364:21:1;7421:2;7401:18;;;7394:30;7460:34;7440:18;;;7433:62;-1:-1:-1;;;7511:18:1;;;7504:31;7552:19;;22906:67:0;7180:397:1;22906:67:0;-1:-1:-1;;;;;23069:18:0;;23044:22;23069:18;;;;;;;;;;;23105:24;;;;23097:71;;;;-1:-1:-1;;;23097:71:0;;7784:2:1;23097:71:0;;;7766:21:1;7823:2;7803:18;;;7796:30;7862:34;7842:18;;;7835:62;-1:-1:-1;;;7913:18:1;;;7906:32;7955:19;;23097:71:0;7582:398:1;23097:71:0;-1:-1:-1;;;;;23202:18:0;;:9;:18;;;;;;;;;;23223:23;;;23202:44;;23266:12;:22;;23240:6;;23202:9;23266:22;;23240:6;;23266:22;:::i;:::-;;;;-1:-1:-1;;23304:37:0;;1391:25:1;;;23330:1:0;;-1:-1:-1;;;;;23304:37:0;;;;;1379:2:1;1364:18;23304:37:0;1245:177:1;14:597;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:1:o;2348:260::-;2416:6;2424;2477:2;2465:9;2456:7;2452:23;2448:32;2445:52;;;2493:1;2490;2483:12;2445:52;2516:29;2535:9;2516:29;:::i;:::-;2506:39;;2564:38;2598:2;2587:9;2583:18;2564:38;:::i;:::-;2554:48;;2348:260;;;;;:::o;2613:380::-;2692:1;2688:12;;;;2735;;;2756:61;;2810:4;2802:6;2798:17;2788:27;;2756:61;2863:2;2855:6;2852:14;2832:18;2829:38;2826:161;;;2909:10;2904:3;2900:20;2897:1;2890:31;2944:4;2941:1;2934:15;2972:4;2969:1;2962:15;2826:161;;2613:380;;;:::o;2998:127::-;3059:10;3054:3;3050:20;3047:1;3040:31;3090:4;3087:1;3080:15;3114:4;3111:1;3104:15;3130:128;3170:3;3201:1;3197:6;3194:1;3191:13;3188:39;;;3207:18;;:::i;:::-;-1:-1:-1;3243:9:1;;3130:128::o;7985:125::-;8025:4;8053:1;8050;8047:8;8044:34;;;8058:18;;:::i;:::-;-1:-1:-1;8095:9:1;;7985:125::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "659600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24648",
								"balanceOf(address)": "2629",
								"burn(address,uint256)": "53219",
								"decimals()": "200",
								"decreaseAllowance(address,uint256)": "26973",
								"increaseAllowance(address,uint256)": "27024",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2346",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "51226",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28424"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "676D64425443"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15764,
									"end": 15769,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 15764,
									"end": 15769,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 15764,
									"end": 15777,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15787,
									"end": 15794,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 15787,
									"end": 15794,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15787,
									"end": 15804,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15698,
									"end": 15811,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8605,
									"end": 8637,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 8624,
									"end": 8636,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8624,
									"end": 8634,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 8624,
									"end": 8634,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8624,
									"end": 8634,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 8624,
									"end": 8636,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8624,
									"end": 8636,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 8624,
									"end": 8636,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8624,
									"end": 8636,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8624,
									"end": 8636,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8605,
									"end": 8623,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 8605,
									"end": 8637,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8605,
									"end": 8637,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 8605,
									"end": 8637,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7473,
									"end": 7569,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 7473,
									"end": 7569,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7552,
									"end": 7562,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 7552,
									"end": 7562,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7473,
									"end": 7569,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 10102,
									"end": 10289,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 10102,
									"end": 10289,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10194,
									"end": 10200,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 10194,
									"end": 10200,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10194,
									"end": 10200,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10210,
									"end": 10227,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10210,
									"end": 10227,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10210,
									"end": 10227,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 10210,
									"end": 10227,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10210,
									"end": 10227,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10210,
									"end": 10227,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10210,
									"end": 10227,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10210,
									"end": 10227,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10210,
									"end": 10227,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 10210,
									"end": 10227,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10242,
									"end": 10282,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10242,
									"end": 10282,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10194,
									"end": 10200,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10194,
									"end": 10200,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10194,
									"end": 10200,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10210,
									"end": 10227,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10194,
									"end": 10200,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10194,
									"end": 10200,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10242,
									"end": 10282,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 10242,
									"end": 10282,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10175,
									"end": 10191,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10175,
									"end": 10191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10242,
									"end": 10282,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 10165,
									"end": 10289,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10102,
									"end": 10289,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10102,
									"end": 10289,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26407,
									"end": 26726,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c2d9f19eb244994a6e9697dd7ff6845846720fd8be03f00b5040369f7318756664736f6c634300080c0033",
									".code": [
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "9DC29FAC"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26726,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16964,
											"end": 17070,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16964,
											"end": 17070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17051,
											"end": 17063,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17051,
											"end": 17063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16964,
											"end": 17070,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16964,
											"end": 17070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16964,
											"end": 17070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16964,
											"end": 17070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16964,
											"end": 17070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16813,
											"end": 16904,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16813,
											"end": 16904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16904,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16813,
											"end": 16904,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16897,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16813,
											"end": 16904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17202,
											"end": 17209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17128,
											"end": 17253,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9500,
											"end": 9601,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9500,
											"end": 9601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9500,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9500,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 9500,
											"end": 9601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8955,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8870,
											"end": 8955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 8948,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8942,
											"end": 8948,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8942,
											"end": 8948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 8948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 8948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2337,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2276,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8870,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2140,
											"end": 2343,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16087,
											"end": 16189,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 16087,
											"end": 16189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 16087,
											"end": 16189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 16087,
											"end": 16189,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26501,
											"end": 26605,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26501,
											"end": 26605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26501,
											"end": 26605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 26501,
											"end": 26605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 26501,
											"end": 26605,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26501,
											"end": 26605,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26501,
											"end": 26605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26501,
											"end": 26605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26501,
											"end": 26605,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 26501,
											"end": 26605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26501,
											"end": 26605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 26501,
											"end": 26605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9750,
											"end": 9948,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9750,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9750,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9750,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9750,
											"end": 9948,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9750,
											"end": 9948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9750,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 9750,
											"end": 9948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9750,
											"end": 9948,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9750,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9750,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9750,
											"end": 9948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 15943,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15962,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15974,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18236,
											"end": 18240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18290,
											"end": 18322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18306,
											"end": 18313,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18315,
											"end": 18321,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18290,
											"end": 18298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 18290,
											"end": 18322,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18290,
											"end": 18322,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 18290,
											"end": 18322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18339,
											"end": 18343,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18339,
											"end": 18343,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18153,
											"end": 18350,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19039,
											"end": 19043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19095,
											"end": 19133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19111,
											"end": 19115,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19126,
											"end": 19132,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19095,
											"end": 19110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 19095,
											"end": 19133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19095,
											"end": 19133,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19095,
											"end": 19133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19143,
											"end": 19170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 19153,
											"end": 19157,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19161,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19163,
											"end": 19169,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19143,
											"end": 19152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 19143,
											"end": 19170,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19143,
											"end": 19170,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 19143,
											"end": 19170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19187,
											"end": 19191,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19187,
											"end": 19191,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18912,
											"end": 19198,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 19593,
											"end": 19827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19681,
											"end": 19685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19735,
											"end": 19799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19751,
											"end": 19758,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19788,
											"end": 19798,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19760,
											"end": 19785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19751,
											"end": 19758,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19760,
											"end": 19769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19760,
											"end": 19785,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19760,
											"end": 19785,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 19760,
											"end": 19785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19760,
											"end": 19798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19760,
											"end": 19798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19760,
											"end": 19798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19760,
											"end": 19798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 19760,
											"end": 19798,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19760,
											"end": 19798,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19760,
											"end": 19798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19735,
											"end": 19743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 19735,
											"end": 19799,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8763,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 8763,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 8763,
											"end": 8776,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8763,
											"end": 8776,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 8763,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26690,
											"end": 26715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 26696,
											"end": 26705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26707,
											"end": 26714,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26690,
											"end": 26695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 26690,
											"end": 26715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26690,
											"end": 26715,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 26690,
											"end": 26715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9500,
											"end": 9601,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 9500,
											"end": 9601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8763,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 8763,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 8763,
											"end": 8776,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8763,
											"end": 8776,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 8763,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 9591,
											"end": 9592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 9564,
											"end": 9594,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9564,
											"end": 9594,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 9564,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9500,
											"end": 9601,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16087,
											"end": 16189,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 16087,
											"end": 16189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16143,
											"end": 16156,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16175,
											"end": 16182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16168,
											"end": 16182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16182,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 16168,
											"end": 16182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 16168,
											"end": 16182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26501,
											"end": 26605,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 26501,
											"end": 26605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8763,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 8763,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 8763,
											"end": 8776,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8763,
											"end": 8776,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 8763,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26577,
											"end": 26598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 26583,
											"end": 26588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26597,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26577,
											"end": 26582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 26577,
											"end": 26598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 20314,
											"end": 20741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20488,
											"end": 20513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20505,
											"end": 20512,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20488,
											"end": 20497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 20488,
											"end": 20513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20488,
											"end": 20513,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 20488,
											"end": 20513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20461,
											"end": 20513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20461,
											"end": 20513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20566,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20531,
											"end": 20547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20531,
											"end": 20566,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20531,
											"end": 20566,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3506,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3543,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3587,
											"end": 3622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3658,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3639,
											"end": 3658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 20523,
											"end": 20608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20642,
											"end": 20702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 20651,
											"end": 20656,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20658,
											"end": 20665,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20686,
											"end": 20701,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20667,
											"end": 20683,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20667,
											"end": 20701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20642,
											"end": 20650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 20642,
											"end": 20702,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 17449,
											"end": 17638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17528,
											"end": 17532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17582,
											"end": 17610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17599,
											"end": 17601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17603,
											"end": 17609,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17582,
											"end": 17591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 17582,
											"end": 17610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17785,
											"end": 17792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17822,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17829,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17696,
											"end": 17845,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9750,
											"end": 9948,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9750,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8763,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 8763,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 8763,
											"end": 8776,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8763,
											"end": 8776,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 8763,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9830,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 9830,
											"end": 9903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9830,
											"end": 9903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9830,
											"end": 9903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9830,
											"end": 9903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9830,
											"end": 9903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9830,
											"end": 9903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9830,
											"end": 9903,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9830,
											"end": 9903,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3853,
											"end": 3874,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3912,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3890,
											"end": 3908,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3890,
											"end": 3908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3890,
											"end": 3908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 3913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3949,
											"end": 3983,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3929,
											"end": 3947,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3929,
											"end": 3947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 3947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3984,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4065,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4046,
											"end": 4065,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3669,
											"end": 4071,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9903,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 9830,
											"end": 9903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9913,
											"end": 9941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 9932,
											"end": 9940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9913,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 9913,
											"end": 9941,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9913,
											"end": 9941,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 9913,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9750,
											"end": 9948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9750,
											"end": 9948,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23830,
											"end": 24200,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 23830,
											"end": 24200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23961,
											"end": 23980,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23961,
											"end": 23980,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4280,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4260,
											"end": 4281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4317,
											"end": 4319,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4356,
											"end": 4390,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4329,
											"end": 4391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4407,
											"end": 4425,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4407,
											"end": 4425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4434,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4470,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4451,
											"end": 4470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4076,
											"end": 4476,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 23953,
											"end": 24021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24039,
											"end": 24060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24039,
											"end": 24060,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4685,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4665,
											"end": 4686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4724,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4702,
											"end": 4720,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4702,
											"end": 4720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4695,
											"end": 4725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4761,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4734,
											"end": 4796,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4812,
											"end": 4830,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4812,
											"end": 4830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4812,
											"end": 4830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4873,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4854,
											"end": 4873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4481,
											"end": 4879,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 24031,
											"end": 24099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24121,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24137,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24146,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24146,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24161,
											"end": 24193,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 23830,
											"end": 24200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23830,
											"end": 24200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23830,
											"end": 24200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23830,
											"end": 24200,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24481,
											"end": 24922,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 24481,
											"end": 24922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24611,
											"end": 24635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24638,
											"end": 24663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 24648,
											"end": 24653,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24655,
											"end": 24662,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24638,
											"end": 24647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24638,
											"end": 24663,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24638,
											"end": 24663,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 24638,
											"end": 24663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24611,
											"end": 24663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24611,
											"end": 24663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24677,
											"end": 24693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24677,
											"end": 24714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24673,
											"end": 24916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24673,
											"end": 24916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24758,
											"end": 24764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24738,
											"end": 24754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24738,
											"end": 24764,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24738,
											"end": 24764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5068,
											"end": 5089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5125,
											"end": 5127,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 5144,
											"end": 5162,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5144,
											"end": 5162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 5162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5231,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5213,
											"end": 5231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4884,
											"end": 5237,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 24730,
											"end": 24798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24840,
											"end": 24891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24849,
											"end": 24854,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24856,
											"end": 24863,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24890,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24865,
											"end": 24881,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24865,
											"end": 24890,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24840,
											"end": 24848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 24840,
											"end": 24891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24840,
											"end": 24891,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24840,
											"end": 24891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24601,
											"end": 24922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24922,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21195,
											"end": 21846,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 21195,
											"end": 21846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21321,
											"end": 21339,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 5446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5485,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5456,
											"end": 5486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5556,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5502,
											"end": 5520,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5502,
											"end": 5520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5502,
											"end": 5520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 5557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5573,
											"end": 5591,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5573,
											"end": 5591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5601,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5637,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5618,
											"end": 5637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5242,
											"end": 5643,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 21313,
											"end": 21381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21399,
											"end": 21415,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21399,
											"end": 21415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5850,
											"end": 5852,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5889,
											"end": 5891,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5869,
											"end": 5887,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5869,
											"end": 5887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5869,
											"end": 5887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5862,
											"end": 5892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5962,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5908,
											"end": 5926,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5908,
											"end": 5926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5901,
											"end": 5963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5979,
											"end": 5997,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5979,
											"end": 5997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5979,
											"end": 5997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 6005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6022,
											"end": 6041,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6022,
											"end": 6041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5648,
											"end": 6047,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 21391,
											"end": 21455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21552,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21591,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21591,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6254,
											"end": 6256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6236,
											"end": 6257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6293,
											"end": 6295,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6273,
											"end": 6291,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6273,
											"end": 6291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6273,
											"end": 6291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6332,
											"end": 6366,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 6312,
											"end": 6330,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6312,
											"end": 6330,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6383,
											"end": 6401,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6383,
											"end": 6401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6412,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6429,
											"end": 6448,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6429,
											"end": 6448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6052,
											"end": 6454,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 21562,
											"end": 21634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21683,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21686,
											"end": 21706,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21686,
											"end": 21706,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21686,
											"end": 21706,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21706,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21739,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21739,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21700,
											"end": 21706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21700,
											"end": 21706,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21700,
											"end": 21706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21700,
											"end": 21706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21780,
											"end": 21782,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21774,
											"end": 21778,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 21784,
											"end": 21790,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21791,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21802,
											"end": 21839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22831,
											"end": 23407,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9158,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 9028,
											"end": 9158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 8948,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8942,
											"end": 8948,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8942,
											"end": 8948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7552,
											"end": 7562,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9091,
											"end": 9114,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9083,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 9083,
											"end": 9151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9083,
											"end": 9151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9083,
											"end": 9151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9083,
											"end": 9151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9083,
											"end": 9151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6661,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9083,
											"end": 9151,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9083,
											"end": 9151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9083,
											"end": 9151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6698,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6680,
											"end": 6698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6673,
											"end": 6703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6773,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6719,
											"end": 6737,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6719,
											"end": 6737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6719,
											"end": 6737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 6774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6809,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6791,
											"end": 6809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9083,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6459,
											"end": 6815,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22122,
											"end": 22511,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 22122,
											"end": 22511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22205,
											"end": 22226,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22205,
											"end": 22226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 22197,
											"end": 22262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22197,
											"end": 22262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22197,
											"end": 22262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22197,
											"end": 22262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22197,
											"end": 22262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7004,
											"end": 7025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7061,
											"end": 7063,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7034,
											"end": 7064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7100,
											"end": 7133,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7169,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7151,
											"end": 7169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22197,
											"end": 22262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6820,
											"end": 7175,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22197,
											"end": 22262,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 22197,
											"end": 22262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22349,
											"end": 22355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22333,
											"end": 22345,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22333,
											"end": 22345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22333,
											"end": 22355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22333,
											"end": 22355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22333,
											"end": 22355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22333,
											"end": 22355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 22333,
											"end": 22355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22333,
											"end": 22355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22333,
											"end": 22355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 22333,
											"end": 22355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22333,
											"end": 22355,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 22333,
											"end": 22355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22333,
											"end": 22355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22333,
											"end": 22355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22333,
											"end": 22355,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22365,
											"end": 22383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22365,
											"end": 22383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22365,
											"end": 22383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22365,
											"end": 22383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22383,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22387,
											"end": 22393,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22387,
											"end": 22393,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 22365,
											"end": 22393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22387,
											"end": 22393,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22387,
											"end": 22393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 22365,
											"end": 22393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22365,
											"end": 22393,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 22365,
											"end": 22393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22393,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22408,
											"end": 22445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22408,
											"end": 22445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22408,
											"end": 22445,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22408,
											"end": 22445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22408,
											"end": 22445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22425,
											"end": 22426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22425,
											"end": 22426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22408,
											"end": 22445,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 22408,
											"end": 22445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22408,
											"end": 22445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22408,
											"end": 22445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22408,
											"end": 22445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22408,
											"end": 22445,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22408,
											"end": 22445,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22408,
											"end": 22445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22408,
											"end": 22445,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26611,
											"end": 26723,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10102,
											"end": 10289,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10102,
											"end": 10289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10194,
											"end": 10200,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10194,
											"end": 10200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10194,
											"end": 10200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10210,
											"end": 10227,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10210,
											"end": 10227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10210,
											"end": 10227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10210,
											"end": 10227,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10210,
											"end": 10227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10210,
											"end": 10227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10210,
											"end": 10227,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10210,
											"end": 10227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10210,
											"end": 10227,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10210,
											"end": 10227,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10242,
											"end": 10282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10242,
											"end": 10282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10194,
											"end": 10200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10194,
											"end": 10200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10194,
											"end": 10200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10210,
											"end": 10227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10194,
											"end": 10200,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10194,
											"end": 10200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10242,
											"end": 10282,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10242,
											"end": 10282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10175,
											"end": 10191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10242,
											"end": 10282,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10165,
											"end": 10289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10102,
											"end": 10289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10102,
											"end": 10289,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22831,
											"end": 23407,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 22831,
											"end": 23407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22914,
											"end": 22935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22914,
											"end": 22935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22906,
											"end": 22973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 22906,
											"end": 22973,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22906,
											"end": 22973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22906,
											"end": 22973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22906,
											"end": 22973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22906,
											"end": 22973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7382,
											"end": 7384,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22906,
											"end": 22973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22906,
											"end": 22973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22906,
											"end": 22973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7423,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7394,
											"end": 7424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7494,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7433,
											"end": 7495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22906,
											"end": 22973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7180,
											"end": 7577,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22906,
											"end": 22973,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 22906,
											"end": 22973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23069,
											"end": 23087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23069,
											"end": 23087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23044,
											"end": 23066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23069,
											"end": 23087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23069,
											"end": 23087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23069,
											"end": 23087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23069,
											"end": 23087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23069,
											"end": 23087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23069,
											"end": 23087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23069,
											"end": 23087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23069,
											"end": 23087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23069,
											"end": 23087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23069,
											"end": 23087,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23069,
											"end": 23087,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23105,
											"end": 23129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23105,
											"end": 23129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23105,
											"end": 23129,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23105,
											"end": 23129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23097,
											"end": 23168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 23097,
											"end": 23168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23097,
											"end": 23168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23097,
											"end": 23168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23097,
											"end": 23168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23097,
											"end": 23168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23097,
											"end": 23168,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23097,
											"end": 23168,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23097,
											"end": 23168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7766,
											"end": 7787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7825,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7803,
											"end": 7821,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7803,
											"end": 7821,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7862,
											"end": 7896,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7906,
											"end": 7938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7955,
											"end": 7974,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7955,
											"end": 7974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23097,
											"end": 23168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7582,
											"end": 7980,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23097,
											"end": 23168,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 23097,
											"end": 23168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23202,
											"end": 23220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23202,
											"end": 23220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23202,
											"end": 23211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23202,
											"end": 23220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23202,
											"end": 23220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23202,
											"end": 23220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23202,
											"end": 23220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23202,
											"end": 23220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23202,
											"end": 23220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23202,
											"end": 23220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23202,
											"end": 23220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23202,
											"end": 23220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23202,
											"end": 23220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23246,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23202,
											"end": 23246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23202,
											"end": 23246,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23266,
											"end": 23278,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23266,
											"end": 23288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23266,
											"end": 23288,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23240,
											"end": 23246,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23240,
											"end": 23246,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23202,
											"end": 23211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23266,
											"end": 23288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 23266,
											"end": 23288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23240,
											"end": 23246,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23240,
											"end": 23246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23266,
											"end": 23288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 23266,
											"end": 23288,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23266,
											"end": 23288,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 23266,
											"end": 23288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23266,
											"end": 23288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23266,
											"end": 23288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23266,
											"end": 23288,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23304,
											"end": 23341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23304,
											"end": 23341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23330,
											"end": 23331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23330,
											"end": 23331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23304,
											"end": 23341,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23304,
											"end": 23341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23304,
											"end": 23341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23304,
											"end": 23341,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 23304,
											"end": 23341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23304,
											"end": 23341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2463,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2452,
											"end": 2475,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2491,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2495,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2535,
											"end": 2544,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2598,
											"end": 2600,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2587,
											"end": 2596,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2601,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2554,
											"end": 2602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2554,
											"end": 2602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2693,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 2756,
											"end": 2817,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2814,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2798,
											"end": 2815,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2817,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 2756,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2855,
											"end": 2861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2866,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2867,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2987,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 2826,
											"end": 2987,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2904,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2900,
											"end": 2920,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2948,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2934,
											"end": 2949,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 2976,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2969,
											"end": 2970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2977,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2987,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 2826,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2993,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2998,
											"end": 3125,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2998,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3069,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3054,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3050,
											"end": 3070,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3090,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3087,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3080,
											"end": 3095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3114,
											"end": 3118,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3111,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3104,
											"end": 3119,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3258,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3130,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3203,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3227,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3188,
											"end": 3227,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3243,
											"end": 3252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3258,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7985,
											"end": 8110,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 7985,
											"end": 8110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8025,
											"end": 8029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8053,
											"end": 8054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8055,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8078,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 8044,
											"end": 8078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8095,
											"end": 8104,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8095,
											"end": 8104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8110,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gmdBTC_flat.sol\":\"gmdBTC\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"gmdBTC_flat.sol\":{\"keccak256\":\"0xf13247a966d7cd8449f3fb7613d6eec2586597b71d67e86b6e4e4a8d4454c81f\",\"urls\":[\"bzz-raw://8740e6f9c99b3bde486db89bb9e2e38eaaf1e5eb1bce9b2d1198510ab8189bf1\",\"dweb:/ipfs/QmUBmsp7RKaRt7ctyU8AZNvVQG6aW7vQBZWneuQhEbWLjK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 555,
								"contract": "gmdBTC_flat.sol:gmdBTC",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 561,
								"contract": "gmdBTC_flat.sol:gmdBTC",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 563,
								"contract": "gmdBTC_flat.sol:gmdBTC",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 565,
								"contract": "gmdBTC_flat.sol:gmdBTC",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 567,
								"contract": "gmdBTC_flat.sol:gmdBTC",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 338,
								"contract": "gmdBTC_flat.sol:gmdBTC",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> gmdBTC_flat.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "gmdBTC_flat.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"gmdBTC_flat.sol": {
				"ast": {
					"absolutePath": "gmdBTC_flat.sol",
					"exportedSymbols": {
						"Context": [
							332
						],
						"ERC20": [
							1125
						],
						"IERC20": [
							520
						],
						"IERC20Metadata": [
							543
						],
						"Ownable": [
							443
						],
						"SafeMath": [
							311
						],
						"gmdBTC": [
							1166
						]
					},
					"id": 1167,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "135:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "313:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "518:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "745:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "755:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "787:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "779:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "779:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "791:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "795:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "791:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "779:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "814:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "818:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "814:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "810:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "829:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "836:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "828:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "821:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "860:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "866:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "859:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "852:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "533:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "678:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "693:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "685:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "684:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "730:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "730:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "736:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "729:15:0"
									},
									"scope": 311,
									"src": "669:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1106:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1116:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1144:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1148:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1144:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1140:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1159:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1166:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1158:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1151:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1190:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1196:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1200:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1196:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1189:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1182:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "891:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1039:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1054:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1046:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1065:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1057:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1091:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1091:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1097:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:15:0"
									},
									"scope": 311,
									"src": "1030:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1443:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1453:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1711:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1716:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1711:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1707:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1727:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1733:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1726:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1719:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1757:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1749:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1749:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1761:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1761:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1749:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1784:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1788:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1793:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1784:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1780:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1804:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1811:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1803:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1796:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1835:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1841:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1834:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1827:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1225:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1376:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1391:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1383:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1402:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1394:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1428:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1428:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1434:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1427:15:0"
									},
									"scope": 311,
									"src": "1367:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2085:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2095:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2123:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2128:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2123:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2119:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2139:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2146:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2138:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2131:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2170:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2176:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2180:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2176:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2169:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2162:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1866:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2018:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2033:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2025:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2044:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2036:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2070:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2070:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2076:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:15:0"
									},
									"scope": 311,
									"src": "2009:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2434:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2444:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2472:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2477:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2472:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2468:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2488:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2495:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2487:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2480:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2519:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2525:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2529:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2525:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2518:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2511:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2205:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2367:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2382:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2374:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2393:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2385:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2373:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2419:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2419:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2425:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2418:15:0"
									},
									"scope": 311,
									"src": "2358:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2850:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2867:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2871:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2867:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2860:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2554:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2792:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2804:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2796:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2815:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2807:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2841:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2840:9:0"
									},
									"scope": 311,
									"src": "2783:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3217:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3234:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3238:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3234:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3227:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2885:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3159:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3171:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3163:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3163:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3182:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3174:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3162:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3208:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:9:0"
									},
									"scope": 311,
									"src": "3150:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3560:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3577:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3581:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3577:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3570:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3252:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3502:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3514:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3506:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3525:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3517:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3505:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3551:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:9:0"
									},
									"scope": 311,
									"src": "3493:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3945:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3962:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3962:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3955:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3595:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3887:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3899:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3891:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3910:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3902:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3890:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3936:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3935:9:0"
									},
									"scope": 311,
									"src": "3878:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4494:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4511:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4515:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4511:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4504:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3980:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4436:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4448:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4440:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4459:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4451:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4439:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4485:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4484:9:0"
									},
									"scope": 311,
									"src": "4427:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5112:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5122:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5159:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5154:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5162:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5146:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5146:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5146:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5196:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5200:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5196:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5189:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4529:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4996:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5017:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5009:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5036:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5028:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5061:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5047:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5047:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4999:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5103:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5102:9:0"
									},
									"scope": 311,
									"src": "4987:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5827:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5837:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5869:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5873:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5869:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5876:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5861:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5861:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5861:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5910:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5914:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5910:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5903:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5224:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5711:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5732:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5724:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5751:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5743:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5776:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5762:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5762:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5714:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5818:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5817:9:0"
									},
									"scope": 311,
									"src": "5702:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6703:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6713:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6745:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6749:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6745:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6752:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6737:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6737:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6737:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6779:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5938:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6587:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6608:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6600:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6627:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6619:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6652:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6638:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6638:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6590:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6694:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6693:9:0"
									},
									"scope": 311,
									"src": "6578:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1167,
							"src": "510:6300:0",
							"usedErrors": []
						},
						{
							"id": 312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6919:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 313,
								"nodeType": "StructuredDocumentation",
								"src": "6944:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 332,
							"linearizedBaseContracts": [
								332
							],
							"name": "Context",
							"nameLocation": "7459:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "7535:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 318,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7552:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7552:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 317,
												"id": 320,
												"nodeType": "Return",
												"src": "7545:17:0"
											}
										]
									},
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "7482:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7492:2:0"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "7526:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7525:9:0"
									},
									"scope": 332,
									"src": "7473:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "7642:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 327,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7659:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "7659:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 326,
												"id": 329,
												"nodeType": "Return",
												"src": "7652:15:0"
											}
										]
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "7584:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7592:2:0"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "7626:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 324,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7626:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7625:16:0"
									},
									"scope": 332,
									"src": "7575:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1167,
							"src": "7441:235:0",
							"usedErrors": []
						},
						{
							"id": 333,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "7802:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 335,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 332,
										"src": "8352:7:0"
									},
									"id": 336,
									"nodeType": "InheritanceSpecifier",
									"src": "8352:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "7828:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 443,
							"linearizedBaseContracts": [
								443,
								332
							],
							"name": "Ownable",
							"nameLocation": "8341:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 338,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "8382:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "8366:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 337,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8366:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 344,
									"name": "OwnershipTransferred",
									"nameLocation": "8401:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "8438:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "8422:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8422:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "8469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "8453:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8421:57:0"
									},
									"src": "8395:84:0"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "8595:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 349,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "8624:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8624:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 348,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "8605:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8605:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "8605:32:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "8485:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 354,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8592:2:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8595:0:0"
									},
									"scope": 443,
									"src": "8581:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "8753:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 357,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "8763:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8763:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "8763:13:0"
											},
											{
												"id": 360,
												"nodeType": "PlaceholderStatement",
												"src": "8786:1:0"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "8650:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 362,
									"name": "onlyOwner",
									"nameLocation": "8741:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8750:2:0"
									},
									"src": "8732:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "8925:30:0",
										"statements": [
											{
												"expression": {
													"id": 368,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 338,
													"src": "8942:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 367,
												"id": 369,
												"nodeType": "Return",
												"src": "8935:13:0"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "8800:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "8879:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8884:2:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "8916:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8915:9:0"
									},
									"scope": 443,
									"src": "8870:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "9073:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 376,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "9091:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9091:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 378,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "9102:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9102:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9091:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9116:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 375,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9083:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9083:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "9083:68:0"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "8961:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "9037:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9048:2:0"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9073:0:0"
									},
									"scope": 443,
									"src": "9028:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "9554:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9591:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9583:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 392,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9583:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9583:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 391,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "9564:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9564:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "9564:30:0"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "9164:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 389,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 388,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 362,
												"src": "9544:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9544:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "9509:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9526:2:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9554:0:0"
									},
									"scope": 443,
									"src": "9500:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "9820:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 408,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "9838:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9858:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9850:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 409,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9850:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9850:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9838:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9862:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9830:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "9830:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "9932:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 417,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "9913:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9913:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "9913:28:0"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "9607:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 405,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 404,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 362,
												"src": "9810:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9810:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "9759:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "9785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "9777:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9776:18:0"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9820:0:0"
									},
									"scope": 443,
									"src": "9750:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "10165:124:0",
										"statements": [
											{
												"assignments": [
													429
												],
												"declarations": [
													{
														"constant": false,
														"id": 429,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "10183:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "10175:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 428,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10175:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 431,
												"initialValue": {
													"id": 430,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 338,
													"src": "10194:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10175:25:0"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "10210:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "10219:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10210:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "10210:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 437,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "10263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 438,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "10273:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 436,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "10242:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10242:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "EmitStatement",
												"src": "10237:45:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "9954:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "10111:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "10138:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "10130:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10130:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10129:18:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10165:0:0"
									},
									"scope": 443,
									"src": "10102:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1167,
							"src": "8323:1968:0",
							"usedErrors": []
						},
						{
							"id": 444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "10425:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 445,
								"nodeType": "StructuredDocumentation",
								"src": "10450:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 520,
							"linearizedBaseContracts": [
								520
							],
							"name": "IERC20",
							"nameLocation": "10531:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "10544:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 454,
									"name": "Transfer",
									"nameLocation": "10713:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10738:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "10722:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10760:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "10744:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10744:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10772:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "10764:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10721:57:0"
									},
									"src": "10707:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "10785:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 463,
									"name": "Approval",
									"nameLocation": "10944:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10969:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "10953:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10953:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10992:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "10976:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11009:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "11001:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10952:63:0"
									},
									"src": "10938:78:0"
								},
								{
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "11022:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "11102:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11113:2:0"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "11139:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11138:9:0"
									},
									"scope": 520,
									"src": "11093:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "11154:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "11240:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11258:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "11250:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11250:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11249:17:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "11290:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11289:9:0"
									},
									"scope": 520,
									"src": "11231:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "11305:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "11521:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11538:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "11530:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11550:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "11542:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11529:28:0"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "11576:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 484,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11576:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11575:6:0"
									},
									"scope": 520,
									"src": "11512:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "11588:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "11866:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11884:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "11876:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11876:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11899:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "11891:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11875:32:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "11931:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11931:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11930:9:0"
									},
									"scope": 520,
									"src": "11857:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "11946:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "12602:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12618:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "12610:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12635:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "12627:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12609:33:0"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "12661:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 504,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12661:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12660:6:0"
									},
									"scope": 520,
									"src": "12593:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "12673:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "12974:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13004:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "12996:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13026:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "13018:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13046:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "13038:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12986:72:0"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "13077:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 516,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13077:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13076:6:0"
									},
									"scope": 520,
									"src": "12965:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1167,
							"src": "10521:2564:0",
							"usedErrors": []
						},
						{
							"id": 521,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "13242:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 523,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 520,
										"src": "13413:6:0"
									},
									"id": 524,
									"nodeType": "InheritanceSpecifier",
									"src": "13413:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 522,
								"nodeType": "StructuredDocumentation",
								"src": "13268:116:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 543,
							"linearizedBaseContracts": [
								543,
								520
							],
							"name": "IERC20Metadata",
							"nameLocation": "13395:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "13426:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "13494:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13498:2:0"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "13524:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 527,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13524:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13523:15:0"
									},
									"scope": 543,
									"src": "13485:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "13545:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "13615:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13621:2:0"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "13647:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13647:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13646:15:0"
									},
									"scope": 543,
									"src": "13606:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "13668:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13747:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13755:2:0"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "13781:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 539,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13781:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13780:7:0"
									},
									"scope": 543,
									"src": "13738:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1167,
							"src": "13385:405:0",
							"usedErrors": []
						},
						{
							"id": 544,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "13922:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 546,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 332,
										"src": "15141:7:0"
									},
									"id": 547,
									"nodeType": "InheritanceSpecifier",
									"src": "15141:7:0"
								},
								{
									"baseName": {
										"id": 548,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 520,
										"src": "15150:6:0"
									},
									"id": 549,
									"nodeType": "InheritanceSpecifier",
									"src": "15150:6:0"
								},
								{
									"baseName": {
										"id": 550,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 543,
										"src": "15158:14:0"
									},
									"id": 551,
									"nodeType": "InheritanceSpecifier",
									"src": "15158:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 545,
								"nodeType": "StructuredDocumentation",
								"src": "13950:1172:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1125,
							"linearizedBaseContracts": [
								1125,
								543,
								520,
								332
							],
							"name": "ERC20",
							"nameLocation": "15132:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 555,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "15215:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1125,
									"src": "15179:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 554,
										"keyType": {
											"id": 552,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "15187:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "15179:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 553,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "15198:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 561,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "15287:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1125,
									"src": "15231:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 560,
										"keyType": {
											"id": 556,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "15239:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "15231:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 559,
											"keyType": {
												"id": 557,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "15258:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "15250:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 558,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "15269:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 563,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "15321:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1125,
									"src": "15305:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 562,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "15305:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 565,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "15355:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1125,
									"src": "15340:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 564,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "15340:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 567,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "15381:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1125,
									"src": "15366:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 566,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "15366:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "15754:57:0",
										"statements": [
											{
												"expression": {
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 575,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "15764:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 576,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "15772:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "15764:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "15764:13:0"
											},
											{
												"expression": {
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 579,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "15787:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 580,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "15797:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "15787:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "15787:17:0"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "15395:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 584,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "15724:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "15710:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "15745:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "15731:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 571,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15731:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15709:44:0"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15754:0:0"
									},
									"scope": 1125,
									"src": "15698:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										530
									],
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "15945:29:0",
										"statements": [
											{
												"expression": {
													"id": 591,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 565,
													"src": "15962:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 590,
												"id": 592,
												"nodeType": "Return",
												"src": "15955:12:0"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "15817:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "15885:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 587,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15912:8:0"
									},
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15889:2:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "15930:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 588,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15930:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15929:15:0"
									},
									"scope": 1125,
									"src": "15876:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										536
									],
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "16158:31:0",
										"statements": [
											{
												"expression": {
													"id": 601,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 567,
													"src": "16175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 600,
												"id": 602,
												"nodeType": "Return",
												"src": "16168:14:0"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "15980:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "16096:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 597,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16125:8:0"
									},
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16102:2:0"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16143:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16143:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16142:15:0"
									},
									"scope": 1125,
									"src": "16087:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										542
									],
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "16878:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16895:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 610,
												"id": 612,
												"nodeType": "Return",
												"src": "16888:9:0"
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "16195:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "16822:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 607,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16853:8:0"
									},
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16830:2:0"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "16871:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 608,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16871:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16870:7:0"
									},
									"scope": 1125,
									"src": "16813:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										469
									],
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "17034:36:0",
										"statements": [
											{
												"expression": {
													"id": 621,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 563,
													"src": "17051:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 620,
												"id": 622,
												"nodeType": "Return",
												"src": "17044:19:0"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "16910:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "16973:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 617,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17007:8:0"
									},
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16984:2:0"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "17025:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17024:9:0"
									},
									"scope": 1125,
									"src": "16964:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										477
									],
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "17211:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 633,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "17228:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 635,
													"indexExpression": {
														"id": 634,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "17238:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17228:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 632,
												"id": 636,
												"nodeType": "Return",
												"src": "17221:25:0"
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "17076:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "17137:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 629,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17184:8:0"
									},
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17155:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "17147:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17146:17:0"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "17202:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17201:9:0"
									},
									"scope": 1125,
									"src": "17128:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										487
									],
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "17534:104:0",
										"statements": [
											{
												"assignments": [
													650
												],
												"declarations": [
													{
														"constant": false,
														"id": 650,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "17552:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 662,
														"src": "17544:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 649,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17544:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 653,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 651,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "17560:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17560:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17544:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "17592:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "17599:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "17603:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 654,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "17582:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17582:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "17582:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17627:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 648,
												"id": 661,
												"nodeType": "Return",
												"src": "17620:11:0"
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "17259:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "17458:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 645,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17510:8:0"
									},
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17475:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "17467:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17487:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "17479:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17466:28:0"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "17528:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 646,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17528:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17527:6:0"
									},
									"scope": 1125,
									"src": "17449:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										497
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "17794:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 674,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "17811:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 676,
														"indexExpression": {
															"id": 675,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "17823:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17811:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 678,
													"indexExpression": {
														"id": 677,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "17830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17811:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 673,
												"id": 679,
												"nodeType": "Return",
												"src": "17804:34:0"
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "17644:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "17705:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 670,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17767:8:0"
									},
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17723:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "17715:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17738:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "17730:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17730:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17714:32:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "17785:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17784:9:0"
									},
									"scope": 1125,
									"src": "17696:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										507
									],
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "18242:108:0",
										"statements": [
											{
												"assignments": [
													693
												],
												"declarations": [
													{
														"constant": false,
														"id": 693,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "18260:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 705,
														"src": "18252:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 692,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "18252:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 694,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "18268:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18268:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18252:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "18299:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "18306:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "18315:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 697,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "18290:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18290:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "18290:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18339:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 691,
												"id": 704,
												"nodeType": "Return",
												"src": "18332:11:0"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "17851:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "18162:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 688,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18218:8:0"
									},
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "18178:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "18170:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18170:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18195:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "18187:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18169:33:0"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "18236:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 689,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18236:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18235:6:0"
									},
									"scope": 1125,
									"src": "18153:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										519
									],
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "19045:153:0",
										"statements": [
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "19063:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 738,
														"src": "19055:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 719,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19055:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 723,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 721,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "19073:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19073:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19055:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 725,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "19111:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "19117:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "19126:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 724,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "19095:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19095:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "19095:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 731,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "19153:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "19159:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "19163:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "19143:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19143:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "19143:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19187:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 718,
												"id": 737,
												"nodeType": "Return",
												"src": "19180:11:0"
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "18356:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "18921:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 715,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19021:8:0"
									},
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18951:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "18943:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18943:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18973:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "18965:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18993:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "18985:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18985:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18933:72:0"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "19039:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 716,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19039:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19038:6:0"
									},
									"scope": 1125,
									"src": "18912:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "19687:140:0",
										"statements": [
											{
												"assignments": [
													750
												],
												"declarations": [
													{
														"constant": false,
														"id": 750,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "19705:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 767,
														"src": "19697:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 749,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19697:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 751,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "19713:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19713:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19697:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "19744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "19751:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 758,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 750,
																		"src": "19770:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 759,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 742,
																		"src": "19777:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 757,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "19760:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19760:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 761,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "19788:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19760:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 754,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "19735:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19735:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "19735:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19816:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 748,
												"id": 766,
												"nodeType": "Return",
												"src": "19809:11:0"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "19204:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "19602:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19628:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "19620:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "19645:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "19637:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19619:37:0"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "19681:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 746,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19681:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19680:6:0"
									},
									"scope": 1125,
									"src": "19593:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "20413:328:0",
										"statements": [
											{
												"assignments": [
													779
												],
												"declarations": [
													{
														"constant": false,
														"id": 779,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "20431:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 808,
														"src": "20423:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 778,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20423:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 782,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 780,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "20439:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20439:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20423:28:0"
											},
											{
												"assignments": [
													784
												],
												"declarations": [
													{
														"constant": false,
														"id": 784,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "20469:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 808,
														"src": "20461:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 783,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20461:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 789,
												"initialValue": {
													"arguments": [
														{
															"id": 786,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "20498:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "20505:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 785,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "20488:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20488:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20461:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 791,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "20531:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 792,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 773,
																"src": "20551:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20531:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20568:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 790,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20523:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20523:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "20523:85:0"
											},
											{
												"id": 805,
												"nodeType": "UncheckedBlock",
												"src": "20618:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 798,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "20651:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 799,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "20658:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 800,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "20667:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 801,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "20686:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "20667:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 797,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "20642:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20642:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 804,
														"nodeType": "ExpressionStatement",
														"src": "20642:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20730:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 777,
												"id": 807,
												"nodeType": "Return",
												"src": "20723:11:0"
											}
										]
									},
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "19833:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "20323:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20349:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "20341:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "20366:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "20358:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20340:42:0"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "20407:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 775,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20406:6:0"
									},
									"scope": 1125,
									"src": "20314:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "21303:543:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 820,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "21321:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21337:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21329:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 821,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21329:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21329:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21321:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21341:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 819,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21313:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21313:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "21313:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 830,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "21399:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21413:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21405:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 831,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21405:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21405:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21399:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21417:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 829,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21391:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21391:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "21391:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 840,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "21487:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "21493:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 842,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "21497:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 839,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "21466:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21466:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "21466:38:0"
											},
											{
												"assignments": [
													846
												],
												"declarations": [
													{
														"constant": false,
														"id": 846,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "21523:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "21515:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 845,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21515:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 850,
												"initialValue": {
													"baseExpression": {
														"id": 847,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "21537:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 849,
													"indexExpression": {
														"id": 848,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "21547:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21537:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21515:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 852,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "21570:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 853,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "21585:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21570:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21593:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 851,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21562:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21562:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "21562:72:0"
											},
											{
												"id": 866,
												"nodeType": "UncheckedBlock",
												"src": "21644:73:0",
												"statements": [
													{
														"expression": {
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 858,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 555,
																	"src": "21668:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 860,
																"indexExpression": {
																	"id": 859,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "21678:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21668:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 861,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "21686:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 862,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "21700:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21686:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21668:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 865,
														"nodeType": "ExpressionStatement",
														"src": "21668:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 867,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "21726:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 869,
														"indexExpression": {
															"id": 868,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "21736:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21726:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 870,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "21743:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21726:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "21726:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "21774:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "21780:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "21784:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "21765:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21765:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "EmitStatement",
												"src": "21760:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 880,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "21822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 881,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "21828:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 882,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "21832:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 879,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "21802:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21802:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "21802:37:0"
											}
										]
									},
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "20747:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "21204:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21231:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "21223:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21253:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "21245:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21273:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "21265:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21213:72:0"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21303:0:0"
									},
									"scope": 1125,
									"src": "21195:651:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "22187:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 895,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "22205:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22224:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22216:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 896,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "22216:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22216:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "22205:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22228:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 894,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22197:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22197:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "22197:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22302:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22294:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22294:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22294:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "22306:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "22315:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 904,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "22273:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22273:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "22273:49:0"
											},
											{
												"expression": {
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 913,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "22333:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 914,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "22349:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22333:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "22333:22:0"
											},
											{
												"expression": {
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 917,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "22365:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 919,
														"indexExpression": {
															"id": 918,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "22375:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22365:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 920,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "22387:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22365:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "22365:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22425:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22417:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 924,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22417:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22417:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 928,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "22429:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 929,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "22438:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 923,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "22408:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22408:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 931,
												"nodeType": "EmitStatement",
												"src": "22403:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22484:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22476:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 933,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22476:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22476:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "22488:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 938,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "22497:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 932,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "22456:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22456:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "22456:48:0"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "21852:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "22131:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22145:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "22137:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "22162:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "22154:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22136:33:0"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22187:0:0"
									},
									"scope": 1125,
									"src": "22122:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "22896:511:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 951,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "22914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22933:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22925:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 952,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "22925:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22925:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "22914:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22937:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 950,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22906:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22906:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "22906:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 961,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "23005:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23022:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23014:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 962,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23014:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23014:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "23026:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 960,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "22984:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22984:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "22984:49:0"
											},
											{
												"assignments": [
													970
												],
												"declarations": [
													{
														"constant": false,
														"id": 970,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "23052:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1013,
														"src": "23044:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 969,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23044:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 974,
												"initialValue": {
													"baseExpression": {
														"id": 971,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "23069:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 973,
													"indexExpression": {
														"id": 972,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "23079:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "23069:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23044:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 976,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "23105:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 977,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "23123:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23105:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23131:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 975,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23097:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23097:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "23097:71:0"
											},
											{
												"id": 990,
												"nodeType": "UncheckedBlock",
												"src": "23178:79:0",
												"statements": [
													{
														"expression": {
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 982,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 555,
																	"src": "23202:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 984,
																"indexExpression": {
																	"id": 983,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "23212:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23202:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 985,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "23223:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 986,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "23240:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23223:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23202:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 989,
														"nodeType": "ExpressionStatement",
														"src": "23202:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 991,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "23266:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 992,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "23282:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23266:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "23266:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 996,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "23313:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23330:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23322:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 997,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23322:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23322:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1001,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "23334:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 995,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "23304:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23304:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "EmitStatement",
												"src": "23299:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1005,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "23372:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23389:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23381:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1006,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23381:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23381:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1010,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "23393:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1004,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "23352:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23352:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "23352:48:0"
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "22517:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "22840:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22854:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "22846:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "22871:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "22863:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22845:33:0"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22896:0:0"
									},
									"scope": 1125,
									"src": "22831:576:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "23943:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1025,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "23961:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23978:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23970:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1026,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "23970:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23970:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "23961:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23982:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1024,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23953:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23953:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "23953:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1035,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1019,
																"src": "24039:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24058:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "24050:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1036,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "24050:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24050:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "24039:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24062:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1034,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24031:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24031:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "24031:68:0"
											},
											{
												"expression": {
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1044,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "24110:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1047,
															"indexExpression": {
																"id": 1045,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "24122:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "24110:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1048,
														"indexExpression": {
															"id": 1046,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "24129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24110:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1049,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "24140:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24110:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "24110:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1053,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "24170:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1054,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "24177:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "24186:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1052,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "24161:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24161:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "EmitStatement",
												"src": "24156:37:0"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "23413:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "23839:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23865:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "23857:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "23888:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "23880:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23880:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23913:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "23905:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23905:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23847:78:0"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23943:0:0"
									},
									"scope": 1125,
									"src": "23830:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "24601:321:0",
										"statements": [
											{
												"assignments": [
													1070
												],
												"declarations": [
													{
														"constant": false,
														"id": 1070,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "24619:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1101,
														"src": "24611:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1069,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24611:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1075,
												"initialValue": {
													"arguments": [
														{
															"id": 1072,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "24648:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "24655:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1071,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "24638:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24638:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24611:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1076,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "24677:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "24702:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1078,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "24702:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1077,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "24697:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24697:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "24697:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24677:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1100,
												"nodeType": "IfStatement",
												"src": "24673:243:0",
												"trueBody": {
													"id": 1099,
													"nodeType": "Block",
													"src": "24716:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1084,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1070,
																			"src": "24738:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1085,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "24758:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "24738:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24766:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 1083,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "24730:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24730:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1089,
															"nodeType": "ExpressionStatement",
															"src": "24730:68:0"
														},
														{
															"id": 1098,
															"nodeType": "UncheckedBlock",
															"src": "24812:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1091,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1062,
																				"src": "24849:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1092,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1064,
																				"src": "24856:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1095,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1093,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1070,
																					"src": "24865:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1094,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1066,
																					"src": "24884:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24865:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1090,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1059,
																			"src": "24840:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24840:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1097,
																	"nodeType": "ExpressionStatement",
																	"src": "24840:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "24206:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 1102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "24490:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "24523:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "24515:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24515:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "24546:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "24538:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24571:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "24563:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24505:78:0"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24601:0:0"
									},
									"scope": 1125,
									"src": "24481:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "25625:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "24928:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "25515:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25553:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "25545:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25545:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25575:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "25567:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25595:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "25587:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25535:72:0"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25625:0:0"
									},
									"scope": 1125,
									"src": "25506:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "26333:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "25633:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "26224:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26261:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "26253:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26283:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "26275:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26303:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "26295:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26243:72:0"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26333:0:0"
									},
									"scope": 1125,
									"src": "26215:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1167,
							"src": "15123:11214:0",
							"usedErrors": []
						},
						{
							"id": 1126,
							"literals": [
								"solidity",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "26378:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"hexValue": "676d64425443",
											"id": 1128,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "26432:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_34634ec0637b1bb68c222fd1cf965cd0ca38b7e0fa06045f9a0b0b338e2ed71a",
												"typeString": "literal_string \"gmdBTC\""
											},
											"value": "gmdBTC"
										},
										{
											"hexValue": "676d64425443",
											"id": 1129,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "26442:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_34634ec0637b1bb68c222fd1cf965cd0ca38b7e0fa06045f9a0b0b338e2ed71a",
												"typeString": "literal_string \"gmdBTC\""
											},
											"value": "gmdBTC"
										}
									],
									"baseName": {
										"id": 1127,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1125,
										"src": "26426:5:0"
									},
									"id": 1130,
									"nodeType": "InheritanceSpecifier",
									"src": "26426:25:0"
								},
								{
									"baseName": {
										"id": 1131,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 443,
										"src": "26453:7:0"
									},
									"id": 1132,
									"nodeType": "InheritanceSpecifier",
									"src": "26453:7:0"
								}
							],
							"canonicalName": "gmdBTC",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1166,
							"linearizedBaseContracts": [
								1166,
								443,
								1125,
								543,
								520,
								332
							],
							"name": "gmdBTC",
							"nameLocation": "26416:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1135,
									"libraryName": {
										"id": 1133,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "26473:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "26467:27:0",
									"typeName": {
										"id": 1134,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26486:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "26567:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1145,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "26583:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1146,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "26590:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1144,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "26577:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26577:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "26577:21:0"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1141,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 362,
												"src": "26556:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26556:9:0"
										}
									],
									"name": "burn",
									"nameLocation": "26510:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "26523:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "26515:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26515:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "26538:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "26530:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26530:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26514:32:0"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26567:0:0"
									},
									"scope": 1166,
									"src": "26501:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "26680:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1160,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "26696:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1161,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "26707:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1159,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "26690:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26690:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "26690:25:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1157,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1156,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 362,
												"src": "26670:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26670:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "26620:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "26633:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "26625:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26625:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "26652:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "26644:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26624:36:0"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26680:0:0"
									},
									"scope": 1166,
									"src": "26611:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1167,
							"src": "26407:319:0",
							"usedErrors": []
						}
					],
					"src": "135:26591:0"
				},
				"id": 0
			}
		}
	}
}