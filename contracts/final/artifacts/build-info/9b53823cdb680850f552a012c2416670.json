{
	"id": "9b53823cdb680850f552a012c2416670",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.12",
	"solcLongVersion": "0.8.12+commit.f00d7308",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/final/GMDstaking.sol": {
				"content": "\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\nimport '@openzeppelin/contracts/access/Ownable.sol';\r\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\r\n\r\n\r\n\r\ncontract GMDstaking is Ownable,ReentrancyGuard {\r\n\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount;     // How many LP tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n        //\r\n        // We do some fancy math here. Basically, any point in time, the amount of WETHs\r\n        // entitled to a user but is pending to be distributed is:\r\n        //\r\n        //   pending reward = (user.amount * pool.accWETHPerShare) - user.rewardDebt\r\n        //\r\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\r\n        //   1. The pool's `accWETHPerShare` (and `lastRewardBlock`) gets updated.\r\n        //   2. User receives the pending reward sent to his/her address.\r\n        //   3. User's `amount` gets updated.\r\n        //   4. User's `rewardDebt` gets updated.\r\n    }\r\n\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC20 lpToken;           // Address of LP token contract.\r\n        uint256 allocPoint;       // How many allocation points assigned to this pool. WETHs to distribute per block.\r\n        uint256 lastRewardTime;  // Last block time that WETHs distribution occurs.\r\n        uint256 accWETHPerShare; // Accumulated WETHs per share, times 1e12. See below.\r\n    }\r\n\r\n    IERC20 public WETH = IERC20(0x82aF49447D8a07e3bd95BD0d56f35241523fBab1);\r\n\r\n    // Dev address.\r\n    address public devaddr;\r\n    // WETH tokens created per block.\r\n    uint256 public WETHPerSecond;\r\n\r\n    uint256 public totalWETHdistributed = 0;\r\n\r\n    // set a max WETH per second, which can never be higher than 1 per second\r\n    uint256 public constant maxWETHPerSecond = 1e18;\r\n\r\n    uint256 public constant MaxAllocPoint = 4000;\r\n\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n    // Info of each user that stakes LP tokens.\r\n    mapping (uint256 => mapping (address => UserInfo)) public userInfo;\r\n    // Total allocation points. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n    // The block time when WETH mining starts.\r\n    uint256 public immutable startTime;\r\n\r\n    bool public withdrawable = false;\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n\r\n    constructor(\r\n        uint256 _WETHPerSecond,\r\n        uint256 _startTime\r\n    ) {\r\n\r\n        WETHPerSecond = _WETHPerSecond;\r\n        startTime = _startTime;\r\n    }\r\n\r\n    function openWithdraw() external onlyOwner{\r\n        withdrawable = true;\r\n    }\r\n\r\n    function supplyRewards(uint256 _amount) external onlyOwner {\r\n        totalWETHdistributed = totalWETHdistributed.add(_amount);\r\n        WETH.transferFrom(msg.sender, address(this), _amount);\r\n    }\r\n    \r\n    function closeWithdraw() external onlyOwner{\r\n        withdrawable = false;\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return poolInfo.length;\r\n    }\r\n\r\n    // Changes WETH token reward per second, with a cap of maxWETH per second\r\n    // Good practice to update pools without messing up the contract\r\n    function setWETHPerSecond(uint256 _WETHPerSecond) external onlyOwner {\r\n        require(_WETHPerSecond <= maxWETHPerSecond, \"setWETHPerSecond: too many WETHs!\");\r\n\r\n        // This MUST be done or pool rewards will be calculated with new WETH per second\r\n        // This could unfairly punish small pools that dont have frequent deposits/withdraws/harvests\r\n        massUpdatePools(); \r\n\r\n        WETHPerSecond = _WETHPerSecond;\r\n    }\r\n\r\n    function checkForDuplicate(IERC20 _lpToken) internal view {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 _pid = 0; _pid < length; _pid++) {\r\n            require(poolInfo[_pid].lpToken != _lpToken, \"add: pool already exists!!!!\");\r\n        }\r\n\r\n    }\r\n\r\n    // Add a new lp to the pool. Can only be called by the owner.\r\n    function add(uint256 _allocPoint, IERC20 _lpToken) external onlyOwner {\r\n        require(_allocPoint <= MaxAllocPoint, \"add: too many alloc points!!\");\r\n\r\n        checkForDuplicate(_lpToken); // ensure you cant add duplicate pools\r\n\r\n        massUpdatePools();\r\n\r\n        uint256 lastRewardTime = block.timestamp > startTime ? block.timestamp : startTime;\r\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\r\n        poolInfo.push(PoolInfo({\r\n            lpToken: _lpToken,\r\n            allocPoint: _allocPoint,\r\n            lastRewardTime: lastRewardTime,\r\n            accWETHPerShare: 0\r\n        }));\r\n    }\r\n\r\n    // Update the given pool's WETH allocation point. Can only be called by the owner.\r\n    function set(uint256 _pid, uint256 _allocPoint) external onlyOwner {\r\n        require(_allocPoint <= MaxAllocPoint, \"add: too many alloc points!!\");\r\n\r\n        massUpdatePools();\r\n\r\n        totalAllocPoint = totalAllocPoint - poolInfo[_pid].allocPoint + _allocPoint;\r\n        poolInfo[_pid].allocPoint = _allocPoint;\r\n    }\r\n\r\n    // Return reward multiplier over the given _from to _to block.\r\n    function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r\n        _from = _from > startTime ? _from : startTime;\r\n        if (_to < startTime) {\r\n            return 0;\r\n        }\r\n        return _to - _from;\r\n    }\r\n\r\n    // View function to see pending WETHs on frontend.\r\n    function pendingWETH(uint256 _pid, address _user) external view returns (uint256) {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accWETHPerShare = pool.accWETHPerShare;\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (block.timestamp > pool.lastRewardTime && lpSupply != 0) {\r\n            uint256 multiplier = getMultiplier(pool.lastRewardTime, block.timestamp);\r\n            uint256 WETHReward = multiplier.mul(WETHPerSecond).mul(pool.allocPoint).div(totalAllocPoint);\r\n            accWETHPerShare = accWETHPerShare.add(WETHReward.mul(1e12).div(lpSupply));\r\n        }\r\n        return user.amount.mul(accWETHPerShare).div(1e12).sub(user.rewardDebt);\r\n    }\r\n\r\n    // Update reward variables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.timestamp <= pool.lastRewardTime) {\r\n            return;\r\n        }\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (lpSupply == 0) {\r\n            pool.lastRewardTime = block.timestamp;\r\n            return;\r\n        }\r\n        uint256 multiplier = getMultiplier(pool.lastRewardTime, block.timestamp);\r\n        uint256 WETHReward = multiplier.mul(WETHPerSecond).mul(pool.allocPoint).div(totalAllocPoint);\r\n\r\n        pool.accWETHPerShare = pool.accWETHPerShare.add(WETHReward.mul(1e12).div(lpSupply));\r\n        pool.lastRewardTime = block.timestamp;\r\n    }\r\n\r\n    // Deposit LP tokens to MasterChef for WETH allocation.\r\n    function deposit(uint256 _pid, uint256 _amount) public nonReentrant {\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n\r\n        updatePool(_pid);\r\n\r\n        uint256 pending = user.amount.mul(pool.accWETHPerShare).div(1e12).sub(user.rewardDebt);\r\n\r\n        user.amount = user.amount.add(_amount);\r\n        user.rewardDebt = user.amount.mul(pool.accWETHPerShare).div(1e12);\r\n\r\n        if(pending > 0) {\r\n            safeWETHTransfer(msg.sender, pending);\r\n        }\r\n        pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n\r\n        emit Deposit(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw LP tokens from MasterChef.\r\n    function withdraw(uint256 _pid, uint256 _amount) public nonReentrant {  \r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        require(withdrawable, \"withdraw not opened\");\r\n\r\n        updatePool(_pid);\r\n\r\n        uint256 pending = user.amount.mul(pool.accWETHPerShare).div(1e12).sub(user.rewardDebt);\r\n\r\n        user.amount = user.amount.sub(_amount);\r\n        user.rewardDebt = user.amount.mul(pool.accWETHPerShare).div(1e12);\r\n\r\n        if(pending > 0) {\r\n            safeWETHTransfer(msg.sender, pending);\r\n        }\r\n        pool.lpToken.safeTransfer(address(msg.sender), _amount);\r\n        \r\n        emit Withdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY. 30% penalty fees\r\n    function emergencyWithdraw(uint256 _pid) public  nonReentrant {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n\r\n        uint oldUserAmount = user.amount;\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n\r\n        pool.lpToken.safeTransfer(address(msg.sender), oldUserAmount.mul(700).div(1000));\r\n        pool.lpToken.safeTransfer(owner(), oldUserAmount.mul(300).div(1000));\r\n\r\n        emit EmergencyWithdraw(msg.sender, _pid, oldUserAmount);\r\n\r\n    }\r\n\r\n    // Safe WETH transfer function, just in case if rounding error causes pool to not have enough WETHs.\r\n    function safeWETHTransfer(address _to, uint256 _amount) internal {\r\n        uint256 WETHBal = WETH.balanceOf(address(this));\r\n        if (_amount > WETHBal) {\r\n            WETH.transfer(_to, WETHBal);\r\n        } else {\r\n            WETH.transfer(_to, _amount);\r\n        }\r\n    }\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f4e7aadfccc61c690bcc96a76fd003927a65e42865846015d724fa5e29cc0d2d64736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4e7aadfccc61c690bcc96a76fd003927a65e42865846015d724fa5e29cc0d2d64736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xE7 0xAA 0xDF 0xCC 0xC6 SHR PUSH10 0xBCC96A76FD003927A65 0xE4 0x28 PUSH6 0x846015D724FA 0x5E 0x29 0xCC 0xD 0x2D PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "707:3748:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4e7aadfccc61c690bcc96a76fd003927a65e42865846015d724fa5e29cc0d2d64736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xE7 0xAA 0xDF 0xCC 0xC6 SHR PUSH10 0xBCC96A76FD003927A65 0xE4 0x28 PUSH6 0x846015D724FA 0x5E 0x29 0xCC 0xD 0x2D PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "707:3748:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f4e7aadfccc61c690bcc96a76fd003927a65e42865846015d724fa5e29cc0d2d64736f6c634300080c0033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220569f519d90a31bc98706e4d2fef4a927600142ff7c50789a31f74bffa5a4d67164736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220569f519d90a31bc98706e4d2fef4a927600142ff7c50789a31f74bffa5a4d67164736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP SWAP16 MLOAD SWAP14 SWAP1 LOG3 SHL 0xC9 DUP8 MOD 0xE4 0xD2 INVALID DELEGATECALL 0xA9 0x27 PUSH1 0x1 TIMESTAMP SELFDESTRUCT PUSH29 0x50789A31F74BFFA5A4D67164736F6C634300080C003300000000000000 ",
							"sourceMap": "194:8111:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220569f519d90a31bc98706e4d2fef4a927600142ff7c50789a31f74bffa5a4d67164736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP SWAP16 MLOAD SWAP14 SWAP1 LOG3 SHL 0xC9 DUP8 MOD 0xE4 0xD2 INVALID DELEGATECALL 0xA9 0x27 PUSH1 0x1 TIMESTAMP SELFDESTRUCT PUSH29 0x50789A31F74BFFA5A4D67164736F6C634300080C003300000000000000 ",
							"sourceMap": "194:8111:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220569f519d90a31bc98706e4d2fef4a927600142ff7c50789a31f74bffa5a4d67164736f6c634300080c0033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200853606362b64a9f212bcacb59c092f17775ed931993046144e8308cdadb004164736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200853606362b64a9f212bcacb59c092f17775ed931993046144e8308cdadb004164736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD MSTORE8 PUSH1 0x63 PUSH3 0xB64A9F 0x21 0x2B 0xCA 0xCB MSIZE 0xC0 SWAP3 CALL PUSH24 0x75ED931993046144E8308CDADB004164736F6C634300080C STOP CALLER ",
							"sourceMap": "482:6300:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200853606362b64a9f212bcacb59c092f17775ed931993046144e8308cdadb004164736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD MSTORE8 PUSH1 0x63 PUSH3 0xB64A9F 0x21 0x2B 0xCA 0xCB MSIZE 0xC0 SWAP3 CALL PUSH24 0x75ED931993046144E8308CDADB004164736F6C634300080C STOP CALLER ",
							"sourceMap": "482:6300:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200853606362b64a9f212bcacb59c092f17775ed931993046144e8308cdadb004164736f6c634300080c0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/final/GMDstaking.sol": {
				"GMDstaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_WETHPerSecond",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startTime",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MaxAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETHPerSecond",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_lpToken",
									"type": "address"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "closeWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "devaddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_from",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_to",
									"type": "uint256"
								}
							],
							"name": "getMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxWETHPerSecond",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingWETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accWETHPerShare",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_WETHPerSecond",
									"type": "uint256"
								}
							],
							"name": "setWETHPerSecond",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "supplyRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalWETHdistributed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/final/GMDstaking.sol\":372:10282  contract GMDstaking is Ownable,ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/final/GMDstaking.sol\":1746:1817  IERC20 public WETH = IERC20(0x82aF49447D8a07e3bd95BD0d56f35241523fBab1) */\n  0x02\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/final/GMDstaking.sol\":1774:1816  0x82aF49447D8a07e3bd95BD0d56f35241523fBab1 */\n  0x82af49447d8a07e3bd95bd0d56f35241523fbab1\n    /* \"contracts/final/GMDstaking.sol\":1746:1817  IERC20 public WETH = IERC20(0x82aF49447D8a07e3bd95BD0d56f35241523fBab1) */\n  or\n  swap1\n  sstore\n  0x00\n    /* \"contracts/final/GMDstaking.sol\":1952:1991  uint256 public totalWETHdistributed = 0 */\n  0x05\n  dup2\n  swap1\n  sstore\n    /* \"contracts/final/GMDstaking.sol\":2458:2492  uint256 public totalAllocPoint = 0 */\n  0x08\n  sstore\n    /* \"contracts/final/GMDstaking.sol\":2590:2622  bool public withdrawable = false */\n  0x09\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"contracts/final/GMDstaking.sol\":2881:3046  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"contracts/final/GMDstaking.sol\":2975:2988  WETHPerSecond */\n  0x04\n    /* \"contracts/final/GMDstaking.sol\":2975:3005  WETHPerSecond = _WETHPerSecond */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"contracts/final/GMDstaking.sol\":3016:3038  startTime = _startTime */\n  0x80\n  mstore\n    /* \"contracts/final/GMDstaking.sol\":372:10282  contract GMDstaking is Ownable,ReentrancyGuard {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:259   */\ntag_3:\n    /* \"#utility.yul\":93:99   */\n  0x00\n    /* \"#utility.yul\":101:107   */\n  dup1\n    /* \"#utility.yul\":154:156   */\n  0x40\n    /* \"#utility.yul\":142:151   */\n  dup4\n    /* \"#utility.yul\":133:140   */\n  dup6\n    /* \"#utility.yul\":129:152   */\n  sub\n    /* \"#utility.yul\":125:157   */\n  slt\n    /* \"#utility.yul\":122:174   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":170:171   */\n  0x00\n    /* \"#utility.yul\":167:168   */\n  dup1\n    /* \"#utility.yul\":160:172   */\n  revert\n    /* \"#utility.yul\":122:174   */\ntag_19:\n  pop\n  pop\n    /* \"#utility.yul\":193:209   */\n  dup1\n  mload\n    /* \"#utility.yul\":249:251   */\n  0x20\n    /* \"#utility.yul\":234:252   */\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":228:253   */\n  mload\n    /* \"#utility.yul\":193:209   */\n  swap1\n  swap3\n    /* \"#utility.yul\":228:253   */\n  swap1\n  swap2\n  pop\n    /* \"#utility.yul\":14:259   */\n  jump\t// out\ntag_17:\n    /* \"contracts/final/GMDstaking.sol\":372:10282  contract GMDstaking is Ownable,ReentrancyGuard {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x46612c86431bf839553975c6871c96460d6b955d2f53301921ef55c1ad868ef7\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/final/GMDstaking.sol\":372:10282  contract GMDstaking is Ownable,ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x78e97925\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x9bd16d7b\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xd49e77cd\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xd49e77cd\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf4b83c4c\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x9bd16d7b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xb9ac9686\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8dbb1e3a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x9112f2b2\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x78e97925\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7b020dad\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x845105e2\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x41249061\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x51eb05a6\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x41249061\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x50188301\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x17caf6f1\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1ab06ee5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2377b2a8\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2b8bbbe8\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x0332e936\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081e3eda\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/final/GMDstaking.sol\":3694:4129  function setWETHPerSecond(uint256 _WETHPerSecond) external onlyOwner {... */\n    tag_3:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/final/GMDstaking.sol\":3442:3537  function poolLength() external view returns (uint256) {... */\n    tag_4:\n        /* \"contracts/final/GMDstaking.sol\":3514:3522  poolInfo */\n      0x06\n        /* \"contracts/final/GMDstaking.sol\":3514:3529  poolInfo.length */\n      sload\n        /* \"contracts/final/GMDstaking.sol\":3442:3537  function poolLength() external view returns (uint256) {... */\n    tag_42:\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"contracts/final/GMDstaking.sol\":3442:3537  function poolLength() external view returns (uint256) {... */\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/final/GMDstaking.sol\":2215:2241  PoolInfo[] public poolInfo */\n    tag_5:\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":644:676   */\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":626:677   */\n      dup6\n      mstore\n        /* \"#utility.yul\":708:710   */\n      0x20\n        /* \"#utility.yul\":693:711   */\n      dup6\n      add\n        /* \"#utility.yul\":686:720   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":736:754   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":729:763   */\n      mstore\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":779:797   */\n      dup3\n      add\n        /* \"#utility.yul\":772:806   */\n      mstore\n        /* \"#utility.yul\":613:616   */\n      0x80\n        /* \"#utility.yul\":598:617   */\n      add\n        /* \"contracts/final/GMDstaking.sol\":2215:2241  PoolInfo[] public poolInfo */\n      tag_44\n        /* \"#utility.yul\":381:812   */\n      jump\n        /* \"contracts/final/GMDstaking.sol\":2458:2492  uint256 public totalAllocPoint = 0 */\n    tag_6:\n      tag_42\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/final/GMDstaking.sol\":5195:5518  function set(uint256 _pid, uint256 _allocPoint) external onlyOwner {... */\n    tag_7:\n      tag_38\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":3142:3340  function supplyRewards(uint256 _amount) external onlyOwner {... */\n    tag_8:\n      tag_38\n      tag_59\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":4481:5099  function add(uint256 _allocPoint, IERC20 _lpToken) external onlyOwner {... */\n    tag_9:\n      tag_38\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":1915:1943  uint256 public WETHPerSecond */\n    tag_10:\n      tag_42\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/final/GMDstaking.sol\":8490:9274  function withdraw(uint256 _pid, uint256 _amount) public nonReentrant {  ... */\n    tag_11:\n      tag_38\n      tag_69\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":2590:2622  bool public withdrawable = false */\n    tag_12:\n      sload(0x09)\n      tag_71\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_71:\n      mload(0x40)\n        /* \"#utility.yul\":1721:1735   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1714:1736   */\n      iszero\n        /* \"#utility.yul\":1696:1737   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1684:1686   */\n      0x20\n        /* \"#utility.yul\":1669:1687   */\n      add\n        /* \"contracts/final/GMDstaking.sol\":2590:2622  bool public withdrawable = false */\n      tag_44\n        /* \"#utility.yul\":1556:1743   */\n      jump\n        /* \"contracts/final/GMDstaking.sol\":7001:7697  function updatePool(uint256 _pid) public {... */\n    tag_13:\n      tag_38\n      tag_76\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":9362:9885  function emergencyWithdraw(uint256 _pid) public  nonReentrant {... */\n    tag_14:\n      tag_38\n      tag_79\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":6745:6925  function massUpdatePools() public {... */\n    tag_15:\n      tag_38\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_38\n      tag_84\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":2547:2581  uint256 public immutable startTime */\n    tag_17:\n      tag_42\n      immutable(\"0x46612c86431bf839553975c6871c96460d6b955d2f53301921ef55c1ad868ef7\")\n      dup2\n      jump\n        /* \"contracts/final/GMDstaking.sol\":3352:3434  function closeWithdraw() external onlyOwner{... */\n    tag_18:\n      tag_38\n      tag_89\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":3054:3134  function openWithdraw() external onlyOwner{... */\n    tag_19:\n      tag_38\n      tag_91\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_92:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1912:1944   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1894:1945   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1882:1884   */\n      0x20\n        /* \"#utility.yul\":1867:1885   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_44\n        /* \"#utility.yul\":1748:1951   */\n      jump\n        /* \"contracts/final/GMDstaking.sol\":5594:5834  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {... */\n    tag_21:\n      tag_42\n      tag_97\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":2079:2126  uint256 public constant maxWETHPerSecond = 1e18 */\n    tag_22:\n      tag_42\n        /* \"contracts/final/GMDstaking.sol\":2122:2126  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/final/GMDstaking.sol\":2079:2126  uint256 public constant maxWETHPerSecond = 1e18 */\n      dup2\n      jump\n        /* \"contracts/final/GMDstaking.sol\":2297:2363  mapping (uint256 => mapping (address => UserInfo)) public userInfo */\n    tag_23:\n      tag_103\n      tag_104\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_104:\n      0x07\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n    tag_103:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2458:2483   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":2514:2516   */\n      0x20\n        /* \"#utility.yul\":2499:2517   */\n      dup4\n      add\n        /* \"#utility.yul\":2492:2526   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2431:2449   */\n      add\n        /* \"contracts/final/GMDstaking.sol\":2297:2363  mapping (uint256 => mapping (address => UserInfo)) public userInfo */\n      tag_44\n        /* \"#utility.yul\":2284:2532   */\n      jump\n        /* \"contracts/final/GMDstaking.sol\":5898:6662  function pendingWETH(uint256 _pid, address _user) external view returns (uint256) {... */\n    tag_24:\n      tag_42\n      tag_110\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":1746:1817  IERC20 public WETH = IERC20(0x82aF49447D8a07e3bd95BD0d56f35241523fBab1) */\n    tag_25:\n      sload(0x02)\n      tag_92\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/final/GMDstaking.sol\":1952:1991  uint256 public totalWETHdistributed = 0 */\n    tag_26:\n      tag_42\n      sload(0x05)\n      dup2\n      jump\n        /* \"contracts/final/GMDstaking.sol\":1847:1869  address public devaddr */\n    tag_27:\n      sload(0x03)\n      tag_92\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/final/GMDstaking.sol\":7766:8438  function deposit(uint256 _pid, uint256 _amount) public nonReentrant {... */\n    tag_28:\n      tag_38\n      tag_124\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n      tag_38\n      tag_127\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_127:\n      tag_129\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":2135:2179  uint256 public constant MaxAllocPoint = 4000 */\n    tag_30:\n      tag_42\n        /* \"contracts/final/GMDstaking.sol\":2175:2179  4000 */\n      0x0fa0\n        /* \"contracts/final/GMDstaking.sol\":2135:2179  uint256 public constant MaxAllocPoint = 4000 */\n      dup2\n      jump\n        /* \"contracts/final/GMDstaking.sol\":3694:4129  function setWETHPerSecond(uint256 _WETHPerSecond) external onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_134:\n        /* \"contracts/final/GMDstaking.sol\":2122:2126  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/final/GMDstaking.sol\":3782:3796  _WETHPerSecond */\n      dup2\n        /* \"contracts/final/GMDstaking.sol\":3782:3816  _WETHPerSecond <= maxWETHPerSecond */\n      gt\n      iszero\n        /* \"contracts/final/GMDstaking.sol\":3774:3854  require(_WETHPerSecond <= maxWETHPerSecond, \"setWETHPerSecond: too many WETHs!\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3221:3223   */\n      0x20\n        /* \"contracts/final/GMDstaking.sol\":3774:3854  require(_WETHPerSecond <= maxWETHPerSecond, \"setWETHPerSecond: too many WETHs!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3203:3224   */\n      mstore\n        /* \"#utility.yul\":3260:3262   */\n      0x21\n        /* \"#utility.yul\":3240:3258   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3233:3263   */\n      mstore\n        /* \"#utility.yul\":3299:3333   */\n      0x736574574554485065725365636f6e643a20746f6f206d616e79205745544873\n        /* \"#utility.yul\":3279:3297   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3272:3334   */\n      mstore\n      shl(0xf8, 0x21)\n        /* \"#utility.yul\":3350:3368   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3343:3374   */\n      mstore\n        /* \"#utility.yul\":3391:3410   */\n      0x84\n      add\n        /* \"contracts/final/GMDstaking.sol\":3774:3854  require(_WETHPerSecond <= maxWETHPerSecond, \"setWETHPerSecond: too many WETHs!\") */\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"contracts/final/GMDstaking.sol\":4060:4077  massUpdatePools() */\n      tag_140\n        /* \"contracts/final/GMDstaking.sol\":4060:4075  massUpdatePools */\n      tag_82\n        /* \"contracts/final/GMDstaking.sol\":4060:4077  massUpdatePools() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/final/GMDstaking.sol\":4091:4104  WETHPerSecond */\n      0x04\n        /* \"contracts/final/GMDstaking.sol\":4091:4121  WETHPerSecond = _WETHPerSecond */\n      sstore\n        /* \"contracts/final/GMDstaking.sol\":3694:4129  function setWETHPerSecond(uint256 _WETHPerSecond) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/final/GMDstaking.sol\":2215:2241  PoolInfo[] public poolInfo */\n    tag_48:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x04\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      swap1\n      swap4\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap4\n      pop\n      swap2\n      swap1\n      dup5\n      jump\t// out\n        /* \"contracts/final/GMDstaking.sol\":5195:5518  function set(uint256 _pid, uint256 _allocPoint) external onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_145:\n        /* \"contracts/final/GMDstaking.sol\":2175:2179  4000 */\n      0x0fa0\n        /* \"contracts/final/GMDstaking.sol\":5281:5292  _allocPoint */\n      dup2\n        /* \"contracts/final/GMDstaking.sol\":5281:5309  _allocPoint <= MaxAllocPoint */\n      gt\n      iszero\n        /* \"contracts/final/GMDstaking.sol\":5273:5342  require(_allocPoint <= MaxAllocPoint, \"add: too many alloc points!!\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3623:3625   */\n      0x20\n        /* \"contracts/final/GMDstaking.sol\":5273:5342  require(_allocPoint <= MaxAllocPoint, \"add: too many alloc points!!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3605:3626   */\n      mstore\n        /* \"#utility.yul\":3662:3664   */\n      0x1c\n        /* \"#utility.yul\":3642:3660   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3635:3665   */\n      mstore\n        /* \"#utility.yul\":3701:3731   */\n      0x6164643a20746f6f206d616e7920616c6c6f6320706f696e7473212100000000\n        /* \"#utility.yul\":3681:3699   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3674:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3767   */\n      0x64\n      add\n        /* \"contracts/final/GMDstaking.sol\":5273:5342  require(_allocPoint <= MaxAllocPoint, \"add: too many alloc points!!\") */\n      tag_138\n        /* \"#utility.yul\":3421:3773   */\n      jump\n        /* \"contracts/final/GMDstaking.sol\":5273:5342  require(_allocPoint <= MaxAllocPoint, \"add: too many alloc points!!\") */\n    tag_147:\n        /* \"contracts/final/GMDstaking.sol\":5355:5372  massUpdatePools() */\n      tag_150\n        /* \"contracts/final/GMDstaking.sol\":5355:5370  massUpdatePools */\n      tag_82\n        /* \"contracts/final/GMDstaking.sol\":5355:5372  massUpdatePools() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/final/GMDstaking.sol\":5449:5460  _allocPoint */\n      dup1\n        /* \"contracts/final/GMDstaking.sol\":5421:5429  poolInfo */\n      0x06\n        /* \"contracts/final/GMDstaking.sol\":5430:5434  _pid */\n      dup4\n        /* \"contracts/final/GMDstaking.sol\":5421:5435  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_152\n      jumpi\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/final/GMDstaking.sol\":5421:5446  poolInfo[_pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":5403:5418  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/final/GMDstaking.sol\":5403:5446  totalAllocPoint - poolInfo[_pid].allocPoint */\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"contracts/final/GMDstaking.sol\":5403:5460  totalAllocPoint - poolInfo[_pid].allocPoint + _allocPoint */\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/final/GMDstaking.sol\":5385:5400  totalAllocPoint */\n      0x08\n        /* \"contracts/final/GMDstaking.sol\":5385:5460  totalAllocPoint = totalAllocPoint - poolInfo[_pid].allocPoint + _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/final/GMDstaking.sol\":5499:5510  _allocPoint */\n      dup1\n        /* \"contracts/final/GMDstaking.sol\":5471:5479  poolInfo */\n      0x06\n        /* \"contracts/final/GMDstaking.sol\":5480:5484  _pid */\n      dup4\n        /* \"contracts/final/GMDstaking.sol\":5471:5485  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_160\n      jumpi\n      tag_160\n      tag_153\n      jump\t// in\n    tag_160:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/final/GMDstaking.sol\":5471:5496  poolInfo[_pid].allocPoint */\n      0x01\n      add\n        /* \"contracts/final/GMDstaking.sol\":5471:5510  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/final/GMDstaking.sol\":5195:5518  function set(uint256 _pid, uint256 _allocPoint) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/final/GMDstaking.sol\":3142:3340  function supplyRewards(uint256 _amount) external onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_163:\n        /* \"contracts/final/GMDstaking.sol\":3235:3255  totalWETHdistributed */\n      sload(0x05)\n        /* \"contracts/final/GMDstaking.sol\":3235:3268  totalWETHdistributed.add(_amount) */\n      tag_165\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":3260:3267  _amount */\n      dup3\n        /* \"contracts/final/GMDstaking.sol\":3235:3259  totalWETHdistributed.add */\n      tag_166\n        /* \"contracts/final/GMDstaking.sol\":3235:3268  totalWETHdistributed.add(_amount) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/final/GMDstaking.sol\":3212:3232  totalWETHdistributed */\n      0x05\n        /* \"contracts/final/GMDstaking.sol\":3212:3268  totalWETHdistributed = totalWETHdistributed.add(_amount) */\n      sstore\n        /* \"contracts/final/GMDstaking.sol\":3279:3283  WETH */\n      sload(0x02)\n        /* \"contracts/final/GMDstaking.sol\":3279:3332  WETH.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":3297:3307  msg.sender */\n      caller\n        /* \"contracts/final/GMDstaking.sol\":3279:3332  WETH.transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4545:4579   */\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":3317:3321  this */\n      address\n        /* \"#utility.yul\":4595:4613   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4588:4631   */\n      mstore\n        /* \"#utility.yul\":4647:4665   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4640:4674   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/final/GMDstaking.sol\":3279:3283  WETH */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":3279:3296  WETH.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":4480:4498   */\n      0x64\n      add\n        /* \"contracts/final/GMDstaking.sol\":3279:3332  WETH.transferFrom(msg.sender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      pop\n        /* \"contracts/final/GMDstaking.sol\":3142:3340  function supplyRewards(uint256 _amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/final/GMDstaking.sol\":4481:5099  function add(uint256 _allocPoint, IERC20 _lpToken) external onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/final/GMDstaking.sol\":2175:2179  4000 */\n      0x0fa0\n        /* \"contracts/final/GMDstaking.sol\":4570:4581  _allocPoint */\n      dup3\n        /* \"contracts/final/GMDstaking.sol\":4570:4598  _allocPoint <= MaxAllocPoint */\n      gt\n      iszero\n        /* \"contracts/final/GMDstaking.sol\":4562:4631  require(_allocPoint <= MaxAllocPoint, \"add: too many alloc points!!\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3623:3625   */\n      0x20\n        /* \"contracts/final/GMDstaking.sol\":4562:4631  require(_allocPoint <= MaxAllocPoint, \"add: too many alloc points!!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3605:3626   */\n      mstore\n        /* \"#utility.yul\":3662:3664   */\n      0x1c\n        /* \"#utility.yul\":3642:3660   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3635:3665   */\n      mstore\n        /* \"#utility.yul\":3701:3731   */\n      0x6164643a20746f6f206d616e7920616c6c6f6320706f696e7473212100000000\n        /* \"#utility.yul\":3681:3699   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3674:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3767   */\n      0x64\n      add\n        /* \"contracts/final/GMDstaking.sol\":4562:4631  require(_allocPoint <= MaxAllocPoint, \"add: too many alloc points!!\") */\n      tag_138\n        /* \"#utility.yul\":3421:3773   */\n      jump\n        /* \"contracts/final/GMDstaking.sol\":4562:4631  require(_allocPoint <= MaxAllocPoint, \"add: too many alloc points!!\") */\n    tag_176:\n        /* \"contracts/final/GMDstaking.sol\":4644:4671  checkForDuplicate(_lpToken) */\n      tag_178\n        /* \"contracts/final/GMDstaking.sol\":4662:4670  _lpToken */\n      dup2\n        /* \"contracts/final/GMDstaking.sol\":4644:4661  checkForDuplicate */\n      tag_179\n        /* \"contracts/final/GMDstaking.sol\":4644:4671  checkForDuplicate(_lpToken) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/final/GMDstaking.sol\":4723:4740  massUpdatePools() */\n      tag_180\n        /* \"contracts/final/GMDstaking.sol\":4723:4738  massUpdatePools */\n      tag_82\n        /* \"contracts/final/GMDstaking.sol\":4723:4740  massUpdatePools() */\n      jump\t// in\n    tag_180:\n        /* \"contracts/final/GMDstaking.sol\":4753:4775  uint256 lastRewardTime */\n      0x00\n        /* \"contracts/final/GMDstaking.sol\":4796:4805  startTime */\n      immutable(\"0x46612c86431bf839553975c6871c96460d6b955d2f53301921ef55c1ad868ef7\")\n        /* \"contracts/final/GMDstaking.sol\":4778:4793  block.timestamp */\n      timestamp\n        /* \"contracts/final/GMDstaking.sol\":4778:4805  block.timestamp > startTime */\n      gt\n        /* \"contracts/final/GMDstaking.sol\":4778:4835  block.timestamp > startTime ? block.timestamp : startTime */\n      tag_181\n      jumpi\n        /* \"contracts/final/GMDstaking.sol\":4826:4835  startTime */\n      immutable(\"0x46612c86431bf839553975c6871c96460d6b955d2f53301921ef55c1ad868ef7\")\n        /* \"contracts/final/GMDstaking.sol\":4778:4835  block.timestamp > startTime ? block.timestamp : startTime */\n      jump(tag_182)\n    tag_181:\n        /* \"contracts/final/GMDstaking.sol\":4808:4823  block.timestamp */\n      timestamp\n        /* \"contracts/final/GMDstaking.sol\":4778:4835  block.timestamp > startTime ? block.timestamp : startTime */\n    tag_182:\n        /* \"contracts/final/GMDstaking.sol\":4864:4879  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/final/GMDstaking.sol\":4753:4835  uint256 lastRewardTime = block.timestamp > startTime ? block.timestamp : startTime */\n      swap1\n      swap2\n      pop\n        /* \"contracts/final/GMDstaking.sol\":4864:4896  totalAllocPoint.add(_allocPoint) */\n      tag_183\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":4884:4895  _allocPoint */\n      dup5\n        /* \"contracts/final/GMDstaking.sol\":4864:4883  totalAllocPoint.add */\n      tag_166\n        /* \"contracts/final/GMDstaking.sol\":4864:4896  totalAllocPoint.add(_allocPoint) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/final/GMDstaking.sol\":4846:4861  totalAllocPoint */\n      0x08\n        /* \"contracts/final/GMDstaking.sol\":4846:4896  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      sstore\n        /* \"contracts/final/GMDstaking.sol\":4921:5090  PoolInfo({... */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap5\n      dup6\n      mstore\n      swap1\n      dup2\n      add\n      swap2\n      dup3\n      mstore\n      0x00\n      0x60\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":4907:4915  poolInfo */\n      0x06\n        /* \"contracts/final/GMDstaking.sol\":4907:5091  poolInfo.push(PoolInfo({... */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap3\n      mstore\n      swap2\n      mload\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f\n      0x04\n      swap1\n      swap3\n      mul\n      swap2\n      dup3\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap2\n      swap1\n      swap6\n      and\n      or\n      swap1\n      swap4\n      sstore\n      swap3\n      mload\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40\n      dup4\n      add\n      sstore\n      mload\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d41\n      dup3\n      add\n      sstore\n      swap1\n      mload\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d42\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/final/GMDstaking.sol\":4481:5099  function add(uint256 _allocPoint, IERC20 _lpToken) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/final/GMDstaking.sol\":8490:9274  function withdraw(uint256 _pid, uint256 _amount) public nonReentrant {  ... */\n    tag_70:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_188\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/final/GMDstaking.sol\":8572:8593  PoolInfo storage pool */\n      0x00\n        /* \"contracts/final/GMDstaking.sol\":8596:8604  poolInfo */\n      0x06\n        /* \"contracts/final/GMDstaking.sol\":8605:8609  _pid */\n      dup4\n        /* \"contracts/final/GMDstaking.sol\":8596:8610  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_191\n      jumpi\n      tag_191\n      tag_153\n      jump\t// in\n    tag_191:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/final/GMDstaking.sol\":8645:8659  userInfo[_pid] */\n      dup7\n      dup5\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":8645:8653  userInfo */\n      0x07\n        /* \"contracts/final/GMDstaking.sol\":8645:8659  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/final/GMDstaking.sol\":8660:8670  msg.sender */\n      caller\n        /* \"contracts/final/GMDstaking.sol\":8645:8671  userInfo[_pid][msg.sender] */\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/final/GMDstaking.sol\":8692:8703  user.amount */\n      dup1\n      sload\n        /* \"contracts/final/GMDstaking.sol\":8596:8610  poolInfo[_pid] */\n      0x04\n      swap1\n      swap3\n      mul\n      swap1\n      swap3\n      add\n      swap3\n      pop\n        /* \"contracts/final/GMDstaking.sol\":8692:8714  user.amount >= _amount */\n      dup4\n      gt\n      iszero\n        /* \"contracts/final/GMDstaking.sol\":8684:8737  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5529:5531   */\n      0x20\n        /* \"contracts/final/GMDstaking.sol\":8684:8737  require(user.amount >= _amount, \"withdraw: not good\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5511:5532   */\n      mstore\n        /* \"#utility.yul\":5568:5570   */\n      0x12\n        /* \"#utility.yul\":5548:5566   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5541:5571   */\n      mstore\n      shl(0x72, 0x1dda5d1a191c985dce881b9bdd0819dbdbd9)\n        /* \"#utility.yul\":5587:5605   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5580:5628   */\n      mstore\n        /* \"#utility.yul\":5645:5663   */\n      0x64\n      add\n        /* \"contracts/final/GMDstaking.sol\":8684:8737  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_138\n        /* \"#utility.yul\":5327:5669   */\n      jump\n        /* \"contracts/final/GMDstaking.sol\":8684:8737  require(user.amount >= _amount, \"withdraw: not good\") */\n    tag_193:\n        /* \"contracts/final/GMDstaking.sol\":8756:8768  withdrawable */\n      and(0xff, sload(0x09))\n        /* \"contracts/final/GMDstaking.sol\":8748:8792  require(withdrawable, \"withdraw not opened\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5876:5878   */\n      0x20\n        /* \"contracts/final/GMDstaking.sol\":8748:8792  require(withdrawable, \"withdraw not opened\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5858:5879   */\n      mstore\n        /* \"#utility.yul\":5915:5917   */\n      0x13\n        /* \"#utility.yul\":5895:5913   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5888:5918   */\n      mstore\n      shl(0x6a, 0x1dda5d1a191c985dc81b9bdd081bdc195b9959)\n        /* \"#utility.yul\":5934:5952   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5927:5976   */\n      mstore\n        /* \"#utility.yul\":5993:6011   */\n      0x64\n      add\n        /* \"contracts/final/GMDstaking.sol\":8748:8792  require(withdrawable, \"withdraw not opened\") */\n      tag_138\n        /* \"#utility.yul\":5674:6017   */\n      jump\n        /* \"contracts/final/GMDstaking.sol\":8748:8792  require(withdrawable, \"withdraw not opened\") */\n    tag_196:\n        /* \"contracts/final/GMDstaking.sol\":8805:8821  updatePool(_pid) */\n      tag_199\n        /* \"contracts/final/GMDstaking.sol\":8816:8820  _pid */\n      dup5\n        /* \"contracts/final/GMDstaking.sol\":8805:8815  updatePool */\n      tag_77\n        /* \"contracts/final/GMDstaking.sol\":8805:8821  updatePool(_pid) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/final/GMDstaking.sol\":8834:8849  uint256 pending */\n      0x00\n        /* \"contracts/final/GMDstaking.sol\":8852:8920  user.amount.mul(pool.accWETHPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_200\n        /* \"contracts/final/GMDstaking.sol\":8904:8908  user */\n      dup3\n        /* \"contracts/final/GMDstaking.sol\":8904:8919  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":8852:8899  user.amount.mul(pool.accWETHPerShare).div(1e12) */\n      tag_201\n        /* \"contracts/final/GMDstaking.sol\":8894:8898  1e12 */\n      0xe8d4a51000\n        /* \"contracts/final/GMDstaking.sol\":8852:8889  user.amount.mul(pool.accWETHPerShare) */\n      tag_202\n        /* \"contracts/final/GMDstaking.sol\":8868:8872  pool */\n      dup8\n        /* \"contracts/final/GMDstaking.sol\":8868:8888  pool.accWETHPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":8852:8856  user */\n      dup8\n        /* \"contracts/final/GMDstaking.sol\":8852:8863  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":8852:8867  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":8852:8889  user.amount.mul(pool.accWETHPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_202:\n        /* \"contracts/final/GMDstaking.sol\":8852:8893  user.amount.mul(pool.accWETHPerShare).div */\n      swap1\n      tag_204\n        /* \"contracts/final/GMDstaking.sol\":8852:8899  user.amount.mul(pool.accWETHPerShare).div(1e12) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/final/GMDstaking.sol\":8852:8903  user.amount.mul(pool.accWETHPerShare).div(1e12).sub */\n      swap1\n      tag_205\n        /* \"contracts/final/GMDstaking.sol\":8852:8920  user.amount.mul(pool.accWETHPerShare).div(1e12).sub(user.rewardDebt) */\n      jump\t// in\n    tag_200:\n        /* \"contracts/final/GMDstaking.sol\":8947:8958  user.amount */\n      dup3\n      sload\n        /* \"contracts/final/GMDstaking.sol\":8834:8920  uint256 pending = user.amount.mul(pool.accWETHPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/final/GMDstaking.sol\":8947:8971  user.amount.sub(_amount) */\n      tag_206\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":8963:8970  _amount */\n      dup6\n        /* \"contracts/final/GMDstaking.sol\":8947:8962  user.amount.sub */\n      tag_205\n        /* \"contracts/final/GMDstaking.sol\":8947:8971  user.amount.sub(_amount) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/final/GMDstaking.sol\":8933:8971  user.amount = user.amount.sub(_amount) */\n      dup1\n      dup4\n      sstore\n        /* \"contracts/final/GMDstaking.sol\":9016:9036  pool.accWETHPerShare */\n      0x03\n      dup5\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":9000:9047  user.amount.mul(pool.accWETHPerShare).div(1e12) */\n      tag_207\n      swap2\n        /* \"contracts/final/GMDstaking.sol\":9042:9046  1e12 */\n      0xe8d4a51000\n      swap2\n        /* \"contracts/final/GMDstaking.sol\":9000:9037  user.amount.mul(pool.accWETHPerShare) */\n      tag_202\n      swap2\n        /* \"contracts/final/GMDstaking.sol\":8933:8971  user.amount = user.amount.sub(_amount) */\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":9000:9015  user.amount.mul */\n      tag_203\n        /* \"contracts/final/GMDstaking.sol\":9000:9037  user.amount.mul(pool.accWETHPerShare) */\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":9000:9047  user.amount.mul(pool.accWETHPerShare).div(1e12) */\n    tag_207:\n        /* \"contracts/final/GMDstaking.sol\":8982:8997  user.rewardDebt */\n      0x01\n      dup4\n      add\n        /* \"contracts/final/GMDstaking.sol\":8982:9047  user.rewardDebt = user.amount.mul(pool.accWETHPerShare).div(1e12) */\n      sstore\n        /* \"contracts/final/GMDstaking.sol\":9063:9074  pending > 0 */\n      dup1\n      iszero\n        /* \"contracts/final/GMDstaking.sol\":9060:9140  if(pending > 0) {... */\n      tag_210\n      jumpi\n        /* \"contracts/final/GMDstaking.sol\":9091:9128  safeWETHTransfer(msg.sender, pending) */\n      tag_210\n        /* \"contracts/final/GMDstaking.sol\":9108:9118  msg.sender */\n      caller\n        /* \"contracts/final/GMDstaking.sol\":9120:9127  pending */\n      dup3\n        /* \"contracts/final/GMDstaking.sol\":9091:9107  safeWETHTransfer */\n      tag_211\n        /* \"contracts/final/GMDstaking.sol\":9091:9128  safeWETHTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/final/GMDstaking.sol\":9150:9162  pool.lpToken */\n      dup3\n      sload\n        /* \"contracts/final/GMDstaking.sol\":9150:9205  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      tag_212\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/final/GMDstaking.sol\":9150:9162  pool.lpToken */\n      and\n        /* \"contracts/final/GMDstaking.sol\":9184:9194  msg.sender */\n      caller\n        /* \"contracts/final/GMDstaking.sol\":9197:9204  _amount */\n      dup7\n        /* \"contracts/final/GMDstaking.sol\":9150:9175  pool.lpToken.safeTransfer */\n      tag_213\n        /* \"contracts/final/GMDstaking.sol\":9150:9205  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/final/GMDstaking.sol\":9231:9266  Withdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":9252:9256  _pid */\n      dup6\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":9240:9250  msg.sender */\n      caller\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":9231:9266  Withdraw(msg.sender, _pid, _amount) */\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n      swap1\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"contracts/final/GMDstaking.sol\":9231:9266  Withdraw(msg.sender, _pid, _amount) */\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/final/GMDstaking.sol\":8490:9274  function withdraw(uint256 _pid, uint256 _amount) public nonReentrant {  ... */\n      jump\t// out\n        /* \"contracts/final/GMDstaking.sol\":7001:7697  function updatePool(uint256 _pid) public {... */\n    tag_77:\n        /* \"contracts/final/GMDstaking.sol\":7053:7074  PoolInfo storage pool */\n      0x00\n        /* \"contracts/final/GMDstaking.sol\":7077:7085  poolInfo */\n      0x06\n        /* \"contracts/final/GMDstaking.sol\":7086:7090  _pid */\n      dup3\n        /* \"contracts/final/GMDstaking.sol\":7077:7091  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_217\n      jumpi\n      tag_217\n      tag_153\n      jump\t// in\n    tag_217:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/final/GMDstaking.sol\":7053:7091  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/final/GMDstaking.sol\":7125:7129  pool */\n      dup1\n        /* \"contracts/final/GMDstaking.sol\":7125:7144  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":7106:7121  block.timestamp */\n      timestamp\n        /* \"contracts/final/GMDstaking.sol\":7106:7144  block.timestamp <= pool.lastRewardTime */\n      gt\n        /* \"contracts/final/GMDstaking.sol\":7102:7179  if (block.timestamp <= pool.lastRewardTime) {... */\n      tag_219\n      jumpi\n        /* \"contracts/final/GMDstaking.sol\":7161:7168  return; */\n      pop\n        /* \"contracts/final/GMDstaking.sol\":7001:7697  function updatePool(uint256 _pid) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/final/GMDstaking.sol\":7102:7179  if (block.timestamp <= pool.lastRewardTime) {... */\n    tag_219:\n        /* \"contracts/final/GMDstaking.sol\":7208:7220  pool.lpToken */\n      dup1\n      sload\n        /* \"contracts/final/GMDstaking.sol\":7208:7245  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":7239:7243  this */\n      address\n        /* \"contracts/final/GMDstaking.sol\":7208:7245  pool.lpToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1894:1945   */\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":7189:7205  uint256 lpSupply */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/final/GMDstaking.sol\":7208:7220  pool.lpToken */\n      and\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":7208:7230  pool.lpToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1867:1885   */\n      0x24\n      add\n        /* \"contracts/final/GMDstaking.sol\":7208:7245  pool.lpToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_222\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_222:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_223\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"contracts/final/GMDstaking.sol\":7189:7245  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/final/GMDstaking.sol\":7260:7273  lpSupply == 0 */\n      dup1\n        /* \"contracts/final/GMDstaking.sol\":7256:7360  if (lpSupply == 0) {... */\n      tag_225\n      jumpi\n      pop\n        /* \"contracts/final/GMDstaking.sol\":7312:7327  block.timestamp */\n      timestamp\n        /* \"contracts/final/GMDstaking.sol\":7290:7309  pool.lastRewardTime */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"contracts/final/GMDstaking.sol\":7290:7327  pool.lastRewardTime = block.timestamp */\n      sstore\n      pop\n        /* \"contracts/final/GMDstaking.sol\":7001:7697  function updatePool(uint256 _pid) public {... */\n      jump\t// out\n        /* \"contracts/final/GMDstaking.sol\":7256:7360  if (lpSupply == 0) {... */\n    tag_225:\n        /* \"contracts/final/GMDstaking.sol\":7370:7388  uint256 multiplier */\n      0x00\n        /* \"contracts/final/GMDstaking.sol\":7391:7442  getMultiplier(pool.lastRewardTime, block.timestamp) */\n      tag_226\n        /* \"contracts/final/GMDstaking.sol\":7405:7409  pool */\n      dup4\n        /* \"contracts/final/GMDstaking.sol\":7405:7424  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":7426:7441  block.timestamp */\n      timestamp\n        /* \"contracts/final/GMDstaking.sol\":7391:7404  getMultiplier */\n      tag_98\n        /* \"contracts/final/GMDstaking.sol\":7391:7442  getMultiplier(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/final/GMDstaking.sol\":7370:7442  uint256 multiplier = getMultiplier(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/final/GMDstaking.sol\":7453:7471  uint256 WETHReward */\n      0x00\n        /* \"contracts/final/GMDstaking.sol\":7474:7545  multiplier.mul(WETHPerSecond).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_227\n        /* \"contracts/final/GMDstaking.sol\":7529:7544  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/final/GMDstaking.sol\":7474:7524  multiplier.mul(WETHPerSecond).mul(pool.allocPoint) */\n      tag_202\n        /* \"contracts/final/GMDstaking.sol\":7508:7512  pool */\n      dup7\n        /* \"contracts/final/GMDstaking.sol\":7508:7523  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":7474:7503  multiplier.mul(WETHPerSecond) */\n      tag_229\n        /* \"contracts/final/GMDstaking.sol\":7489:7502  WETHPerSecond */\n      sload(0x04)\n        /* \"contracts/final/GMDstaking.sol\":7474:7484  multiplier */\n      dup8\n        /* \"contracts/final/GMDstaking.sol\":7474:7488  multiplier.mul */\n      tag_203\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":7474:7503  multiplier.mul(WETHPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"contracts/final/GMDstaking.sol\":7474:7507  multiplier.mul(WETHPerSecond).mul */\n      swap1\n      tag_203\n        /* \"contracts/final/GMDstaking.sol\":7474:7524  multiplier.mul(WETHPerSecond).mul(pool.allocPoint) */\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":7474:7545  multiplier.mul(WETHPerSecond).mul(pool.allocPoint).div(totalAllocPoint) */\n    tag_227:\n        /* \"contracts/final/GMDstaking.sol\":7453:7545  uint256 WETHReward = multiplier.mul(WETHPerSecond).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/final/GMDstaking.sol\":7581:7641  pool.accWETHPerShare.add(WETHReward.mul(1e12).div(lpSupply)) */\n      tag_230\n        /* \"contracts/final/GMDstaking.sol\":7606:7640  WETHReward.mul(1e12).div(lpSupply) */\n      tag_231\n        /* \"contracts/final/GMDstaking.sol\":7631:7639  lpSupply */\n      dup5\n        /* \"contracts/final/GMDstaking.sol\":7606:7626  WETHReward.mul(1e12) */\n      tag_202\n        /* \"contracts/final/GMDstaking.sol\":7453:7545  uint256 WETHReward = multiplier.mul(WETHPerSecond).mul(pool.allocPoint).div(totalAllocPoint) */\n      dup5\n        /* \"contracts/final/GMDstaking.sol\":7621:7625  1e12 */\n      0xe8d4a51000\n        /* \"contracts/final/GMDstaking.sol\":7606:7620  WETHReward.mul */\n      tag_203\n        /* \"contracts/final/GMDstaking.sol\":7606:7626  WETHReward.mul(1e12) */\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":7606:7640  WETHReward.mul(1e12).div(lpSupply) */\n    tag_231:\n        /* \"contracts/final/GMDstaking.sol\":7581:7601  pool.accWETHPerShare */\n      0x03\n      dup7\n      add\n      sload\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":7581:7605  pool.accWETHPerShare.add */\n      tag_166\n        /* \"contracts/final/GMDstaking.sol\":7581:7641  pool.accWETHPerShare.add(WETHReward.mul(1e12).div(lpSupply)) */\n      jump\t// in\n    tag_230:\n        /* \"contracts/final/GMDstaking.sol\":7558:7578  pool.accWETHPerShare */\n      0x03\n      dup6\n      add\n        /* \"contracts/final/GMDstaking.sol\":7558:7641  pool.accWETHPerShare = pool.accWETHPerShare.add(WETHReward.mul(1e12).div(lpSupply)) */\n      sstore\n      pop\n      pop\n        /* \"contracts/final/GMDstaking.sol\":7674:7689  block.timestamp */\n      timestamp\n        /* \"contracts/final/GMDstaking.sol\":7652:7671  pool.lastRewardTime */\n      0x02\n      swap1\n      swap3\n      add\n        /* \"contracts/final/GMDstaking.sol\":7652:7689  pool.lastRewardTime = block.timestamp */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/final/GMDstaking.sol\":7001:7697  function updatePool(uint256 _pid) public {... */\n      jump\t// out\n        /* \"contracts/final/GMDstaking.sol\":9362:9885  function emergencyWithdraw(uint256 _pid) public  nonReentrant {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_188\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/final/GMDstaking.sol\":9435:9456  PoolInfo storage pool */\n      0x00\n        /* \"contracts/final/GMDstaking.sol\":9459:9467  poolInfo */\n      0x06\n        /* \"contracts/final/GMDstaking.sol\":9468:9472  _pid */\n      dup3\n        /* \"contracts/final/GMDstaking.sol\":9459:9473  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_238\n      jumpi\n      tag_238\n      tag_153\n      jump\t// in\n    tag_238:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/final/GMDstaking.sol\":9508:9522  userInfo[_pid] */\n      dup6\n      dup5\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":9508:9516  userInfo */\n      0x07\n        /* \"contracts/final/GMDstaking.sol\":9508:9522  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/final/GMDstaking.sol\":9523:9533  msg.sender */\n      caller\n        /* \"contracts/final/GMDstaking.sol\":9508:9534  userInfo[_pid][msg.sender] */\n      dup1\n      dup8\n      mstore\n      swap4\n      mstore\n      dup5\n      keccak256\n        /* \"contracts/final/GMDstaking.sol\":9568:9579  user.amount */\n      dup1\n      sload\n        /* \"contracts/final/GMDstaking.sol\":9590:9605  user.amount = 0 */\n      dup6\n      dup3\n      sstore\n      0x01\n        /* \"contracts/final/GMDstaking.sol\":9616:9631  user.rewardDebt */\n      dup3\n      add\n        /* \"contracts/final/GMDstaking.sol\":9616:9635  user.rewardDebt = 0 */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"contracts/final/GMDstaking.sol\":9459:9473  poolInfo[_pid] */\n      0x04\n      swap1\n      swap4\n      mul\n      add\n      swap4\n      pop\n        /* \"contracts/final/GMDstaking.sol\":9508:9534  userInfo[_pid][msg.sender] */\n      swap1\n      swap2\n        /* \"contracts/final/GMDstaking.sol\":9568:9579  user.amount */\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":9648:9728  pool.lpToken.safeTransfer(address(msg.sender), oldUserAmount.mul(700).div(1000)) */\n      tag_240\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":9695:9727  oldUserAmount.mul(700).div(1000) */\n      tag_241\n        /* \"contracts/final/GMDstaking.sol\":9722:9726  1000 */\n      0x03e8\n        /* \"contracts/final/GMDstaking.sol\":9695:9717  oldUserAmount.mul(700) */\n      tag_202\n        /* \"contracts/final/GMDstaking.sol\":9568:9579  user.amount */\n      dup6\n        /* \"contracts/final/GMDstaking.sol\":9713:9716  700 */\n      0x02bc\n        /* \"contracts/final/GMDstaking.sol\":9695:9712  oldUserAmount.mul */\n      tag_203\n        /* \"contracts/final/GMDstaking.sol\":9695:9717  oldUserAmount.mul(700) */\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":9695:9727  oldUserAmount.mul(700).div(1000) */\n    tag_241:\n        /* \"contracts/final/GMDstaking.sol\":9648:9660  pool.lpToken */\n      dup6\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n        /* \"contracts/final/GMDstaking.sol\":9648:9728  pool.lpToken.safeTransfer(address(msg.sender), oldUserAmount.mul(700).div(1000)) */\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":9648:9673  pool.lpToken.safeTransfer */\n      tag_213\n        /* \"contracts/final/GMDstaking.sol\":9648:9728  pool.lpToken.safeTransfer(address(msg.sender), oldUserAmount.mul(700).div(1000)) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/final/GMDstaking.sol\":9739:9807  pool.lpToken.safeTransfer(owner(), oldUserAmount.mul(300).div(1000)) */\n      tag_243\n        /* \"contracts/final/GMDstaking.sol\":9765:9772  owner() */\n      tag_244\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/final/GMDstaking.sol\":9765:9772  owner() */\n    tag_244:\n        /* \"contracts/final/GMDstaking.sol\":9774:9806  oldUserAmount.mul(300).div(1000) */\n      tag_241\n        /* \"contracts/final/GMDstaking.sol\":9801:9805  1000 */\n      0x03e8\n        /* \"contracts/final/GMDstaking.sol\":9774:9796  oldUserAmount.mul(300) */\n      tag_202\n        /* \"contracts/final/GMDstaking.sol\":9774:9787  oldUserAmount */\n      dup6\n        /* \"contracts/final/GMDstaking.sol\":9792:9795  300 */\n      0x012c\n        /* \"contracts/final/GMDstaking.sol\":9774:9791  oldUserAmount.mul */\n      tag_203\n        /* \"contracts/final/GMDstaking.sol\":9774:9796  oldUserAmount.mul(300) */\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":9739:9807  pool.lpToken.safeTransfer(owner(), oldUserAmount.mul(300).div(1000)) */\n    tag_243:\n        /* \"contracts/final/GMDstaking.sol\":9825:9875  EmergencyWithdraw(msg.sender, _pid, oldUserAmount) */\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":9855:9859  _pid */\n      dup5\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":9843:9853  msg.sender */\n      caller\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":9825:9875  EmergencyWithdraw(msg.sender, _pid, oldUserAmount) */\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n      swap1\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"contracts/final/GMDstaking.sol\":9825:9875  EmergencyWithdraw(msg.sender, _pid, oldUserAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n      pop\n        /* \"contracts/final/GMDstaking.sol\":9362:9885  function emergencyWithdraw(uint256 _pid) public  nonReentrant {... */\n      jump\t// out\n        /* \"contracts/final/GMDstaking.sol\":6745:6925  function massUpdatePools() public {... */\n    tag_82:\n        /* \"contracts/final/GMDstaking.sol\":6807:6815  poolInfo */\n      0x06\n        /* \"contracts/final/GMDstaking.sol\":6807:6822  poolInfo.length */\n      sload\n        /* \"contracts/final/GMDstaking.sol\":6790:6804  uint256 length */\n      0x00\n        /* \"contracts/final/GMDstaking.sol\":6833:6918  for (uint256 pid = 0; pid < length; ++pid) {... */\n    tag_249:\n        /* \"contracts/final/GMDstaking.sol\":6861:6867  length */\n      dup2\n        /* \"contracts/final/GMDstaking.sol\":6855:6858  pid */\n      dup2\n        /* \"contracts/final/GMDstaking.sol\":6855:6867  pid < length */\n      lt\n        /* \"contracts/final/GMDstaking.sol\":6833:6918  for (uint256 pid = 0; pid < length; ++pid) {... */\n      iszero\n      tag_171\n      jumpi\n        /* \"contracts/final/GMDstaking.sol\":6891:6906  updatePool(pid) */\n      tag_252\n        /* \"contracts/final/GMDstaking.sol\":6902:6905  pid */\n      dup2\n        /* \"contracts/final/GMDstaking.sol\":6891:6901  updatePool */\n      tag_77\n        /* \"contracts/final/GMDstaking.sol\":6891:6906  updatePool(pid) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/final/GMDstaking.sol\":6869:6874  ++pid */\n      tag_253\n      dup2\n      tag_254\n      jump\t// in\n    tag_253:\n      swap1\n      pop\n        /* \"contracts/final/GMDstaking.sol\":6833:6918  for (uint256 pid = 0; pid < length; ++pid) {... */\n      jump(tag_249)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_258\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/final/GMDstaking.sol\":3352:3434  function closeWithdraw() external onlyOwner{... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_261:\n        /* \"contracts/final/GMDstaking.sol\":3406:3418  withdrawable */\n      0x09\n        /* \"contracts/final/GMDstaking.sol\":3406:3426  withdrawable = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/final/GMDstaking.sol\":3352:3434  function closeWithdraw() external onlyOwner{... */\n      jump\t// out\n        /* \"contracts/final/GMDstaking.sol\":3054:3134  function openWithdraw() external onlyOwner{... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_264\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_264:\n        /* \"contracts/final/GMDstaking.sol\":3107:3119  withdrawable */\n      0x09\n        /* \"contracts/final/GMDstaking.sol\":3107:3126  withdrawable = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/final/GMDstaking.sol\":3122:3126  true */\n      0x01\n        /* \"contracts/final/GMDstaking.sol\":3107:3126  withdrawable = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/final/GMDstaking.sol\":3054:3134  function openWithdraw() external onlyOwner{... */\n      jump\t// out\n        /* \"contracts/final/GMDstaking.sol\":5594:5834  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {... */\n    tag_98:\n        /* \"contracts/final/GMDstaking.sol\":5666:5673  uint256 */\n      0x00\n        /* \"contracts/final/GMDstaking.sol\":5702:5711  startTime */\n      immutable(\"0x46612c86431bf839553975c6871c96460d6b955d2f53301921ef55c1ad868ef7\")\n        /* \"contracts/final/GMDstaking.sol\":5694:5699  _from */\n      dup4\n        /* \"contracts/final/GMDstaking.sol\":5694:5711  _from > startTime */\n      gt\n        /* \"contracts/final/GMDstaking.sol\":5694:5731  _from > startTime ? _from : startTime */\n      tag_268\n      jumpi\n        /* \"contracts/final/GMDstaking.sol\":5722:5731  startTime */\n      immutable(\"0x46612c86431bf839553975c6871c96460d6b955d2f53301921ef55c1ad868ef7\")\n        /* \"contracts/final/GMDstaking.sol\":5694:5731  _from > startTime ? _from : startTime */\n      jump(tag_269)\n    tag_268:\n        /* \"contracts/final/GMDstaking.sol\":5714:5719  _from */\n      dup3\n        /* \"contracts/final/GMDstaking.sol\":5694:5731  _from > startTime ? _from : startTime */\n    tag_269:\n        /* \"contracts/final/GMDstaking.sol\":5686:5731  _from = _from > startTime ? _from : startTime */\n      swap3\n      pop\n        /* \"contracts/final/GMDstaking.sol\":5752:5761  startTime */\n      immutable(\"0x46612c86431bf839553975c6871c96460d6b955d2f53301921ef55c1ad868ef7\")\n        /* \"contracts/final/GMDstaking.sol\":5746:5749  _to */\n      dup3\n        /* \"contracts/final/GMDstaking.sol\":5746:5761  _to < startTime */\n      lt\n        /* \"contracts/final/GMDstaking.sol\":5742:5798  if (_to < startTime) {... */\n      iszero\n      tag_270\n      jumpi\n      pop\n        /* \"contracts/final/GMDstaking.sol\":5785:5786  0 */\n      0x00\n        /* \"contracts/final/GMDstaking.sol\":5778:5786  return 0 */\n      jump(tag_267)\n        /* \"contracts/final/GMDstaking.sol\":5742:5798  if (_to < startTime) {... */\n    tag_270:\n        /* \"contracts/final/GMDstaking.sol\":5815:5826  _to - _from */\n      tag_271\n        /* \"contracts/final/GMDstaking.sol\":5821:5826  _from */\n      dup4\n        /* \"contracts/final/GMDstaking.sol\":5815:5818  _to */\n      dup4\n        /* \"contracts/final/GMDstaking.sol\":5815:5826  _to - _from */\n      tag_156\n      jump\t// in\n    tag_271:\n        /* \"contracts/final/GMDstaking.sol\":5808:5826  return _to - _from */\n      swap1\n      pop\n        /* \"contracts/final/GMDstaking.sol\":5594:5834  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {... */\n    tag_267:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/final/GMDstaking.sol\":5898:6662  function pendingWETH(uint256 _pid, address _user) external view returns (uint256) {... */\n    tag_111:\n        /* \"contracts/final/GMDstaking.sol\":5971:5978  uint256 */\n      0x00\n        /* \"contracts/final/GMDstaking.sol\":5991:6012  PoolInfo storage pool */\n      dup1\n        /* \"contracts/final/GMDstaking.sol\":6015:6023  poolInfo */\n      0x06\n        /* \"contracts/final/GMDstaking.sol\":6024:6028  _pid */\n      dup5\n        /* \"contracts/final/GMDstaking.sol\":6015:6029  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_274\n      jumpi\n      tag_274\n      tag_153\n      jump\t// in\n    tag_274:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/final/GMDstaking.sol\":6064:6078  userInfo[_pid] */\n      dup8\n      dup5\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":6064:6072  userInfo */\n      0x07\n        /* \"contracts/final/GMDstaking.sol\":6064:6078  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/final/GMDstaking.sol\":6064:6085  userInfo[_pid][_user] */\n      dup10\n      dup2\n      and\n      dup8\n      mstore\n      swap4\n      mstore\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/final/GMDstaking.sol\":6015:6029  poolInfo[_pid] */\n      0x04\n      swap5\n      dup6\n      mul\n      swap1\n      swap3\n      add\n        /* \"contracts/final/GMDstaking.sol\":6122:6142  pool.accWETHPerShare */\n      0x03\n      dup2\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":6172:6184  pool.lpToken */\n      dup2\n      sload\n        /* \"contracts/final/GMDstaking.sol\":6172:6209  pool.lpToken.balanceOf(address(this)) */\n      swap3\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":6203:6207  this */\n      address\n        /* \"contracts/final/GMDstaking.sol\":6172:6209  pool.lpToken.balanceOf(address(this)) */\n      swap7\n      dup2\n      add\n        /* \"#utility.yul\":1894:1945   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":6015:6029  poolInfo[_pid] */\n      swap1\n      swap7\n      pop\n        /* \"contracts/final/GMDstaking.sol\":6064:6085  userInfo[_pid][_user] */\n      swap2\n      swap5\n        /* \"contracts/final/GMDstaking.sol\":6122:6142  pool.accWETHPerShare */\n      swap2\n      swap4\n        /* \"contracts/final/GMDstaking.sol\":6015:6029  poolInfo[_pid] */\n      swap2\n      swap3\n        /* \"contracts/final/GMDstaking.sol\":6172:6184  pool.lpToken */\n      and\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":6172:6194  pool.lpToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1867:1885   */\n      0x24\n      add\n        /* \"contracts/final/GMDstaking.sol\":6172:6209  pool.lpToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_278\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_278:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_279\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_279:\n        /* \"contracts/final/GMDstaking.sol\":6153:6209  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/final/GMDstaking.sol\":6242:6246  pool */\n      dup4\n        /* \"contracts/final/GMDstaking.sol\":6242:6261  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":6224:6239  block.timestamp */\n      timestamp\n        /* \"contracts/final/GMDstaking.sol\":6224:6261  block.timestamp > pool.lastRewardTime */\n      gt\n        /* \"contracts/final/GMDstaking.sol\":6224:6278  block.timestamp > pool.lastRewardTime && lpSupply != 0 */\n      dup1\n      iszero\n      tag_280\n      jumpi\n      pop\n        /* \"contracts/final/GMDstaking.sol\":6265:6278  lpSupply != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/final/GMDstaking.sol\":6224:6278  block.timestamp > pool.lastRewardTime && lpSupply != 0 */\n    tag_280:\n        /* \"contracts/final/GMDstaking.sol\":6220:6574  if (block.timestamp > pool.lastRewardTime && lpSupply != 0) {... */\n      iszero\n      tag_281\n      jumpi\n        /* \"contracts/final/GMDstaking.sol\":6295:6313  uint256 multiplier */\n      0x00\n        /* \"contracts/final/GMDstaking.sol\":6316:6367  getMultiplier(pool.lastRewardTime, block.timestamp) */\n      tag_282\n        /* \"contracts/final/GMDstaking.sol\":6330:6334  pool */\n      dup6\n        /* \"contracts/final/GMDstaking.sol\":6330:6349  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":6351:6366  block.timestamp */\n      timestamp\n        /* \"contracts/final/GMDstaking.sol\":6316:6329  getMultiplier */\n      tag_98\n        /* \"contracts/final/GMDstaking.sol\":6316:6367  getMultiplier(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_282:\n        /* \"contracts/final/GMDstaking.sol\":6295:6367  uint256 multiplier = getMultiplier(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/final/GMDstaking.sol\":6382:6400  uint256 WETHReward */\n      0x00\n        /* \"contracts/final/GMDstaking.sol\":6403:6474  multiplier.mul(WETHPerSecond).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_283\n        /* \"contracts/final/GMDstaking.sol\":6458:6473  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/final/GMDstaking.sol\":6403:6453  multiplier.mul(WETHPerSecond).mul(pool.allocPoint) */\n      tag_202\n        /* \"contracts/final/GMDstaking.sol\":6437:6441  pool */\n      dup9\n        /* \"contracts/final/GMDstaking.sol\":6437:6452  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":6403:6432  multiplier.mul(WETHPerSecond) */\n      tag_229\n        /* \"contracts/final/GMDstaking.sol\":6418:6431  WETHPerSecond */\n      sload(0x04)\n        /* \"contracts/final/GMDstaking.sol\":6403:6413  multiplier */\n      dup8\n        /* \"contracts/final/GMDstaking.sol\":6403:6417  multiplier.mul */\n      tag_203\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":6403:6432  multiplier.mul(WETHPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":6403:6474  multiplier.mul(WETHPerSecond).mul(pool.allocPoint).div(totalAllocPoint) */\n    tag_283:\n        /* \"contracts/final/GMDstaking.sol\":6382:6474  uint256 WETHReward = multiplier.mul(WETHPerSecond).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/final/GMDstaking.sol\":6507:6562  accWETHPerShare.add(WETHReward.mul(1e12).div(lpSupply)) */\n      tag_286\n        /* \"contracts/final/GMDstaking.sol\":6527:6561  WETHReward.mul(1e12).div(lpSupply) */\n      tag_287\n        /* \"contracts/final/GMDstaking.sol\":6552:6560  lpSupply */\n      dup5\n        /* \"contracts/final/GMDstaking.sol\":6527:6547  WETHReward.mul(1e12) */\n      tag_202\n        /* \"contracts/final/GMDstaking.sol\":6382:6474  uint256 WETHReward = multiplier.mul(WETHPerSecond).mul(pool.allocPoint).div(totalAllocPoint) */\n      dup5\n        /* \"contracts/final/GMDstaking.sol\":6542:6546  1e12 */\n      0xe8d4a51000\n        /* \"contracts/final/GMDstaking.sol\":6527:6541  WETHReward.mul */\n      tag_203\n        /* \"contracts/final/GMDstaking.sol\":6527:6547  WETHReward.mul(1e12) */\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":6527:6561  WETHReward.mul(1e12).div(lpSupply) */\n    tag_287:\n        /* \"contracts/final/GMDstaking.sol\":6507:6522  accWETHPerShare */\n      dup6\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":6507:6526  accWETHPerShare.add */\n      tag_166\n        /* \"contracts/final/GMDstaking.sol\":6507:6562  accWETHPerShare.add(WETHReward.mul(1e12).div(lpSupply)) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/final/GMDstaking.sol\":6489:6562  accWETHPerShare = accWETHPerShare.add(WETHReward.mul(1e12).div(lpSupply)) */\n      swap4\n      pop\n        /* \"contracts/final/GMDstaking.sol\":6280:6574  {... */\n      pop\n      pop\n        /* \"contracts/final/GMDstaking.sol\":6220:6574  if (block.timestamp > pool.lastRewardTime && lpSupply != 0) {... */\n    tag_281:\n        /* \"contracts/final/GMDstaking.sol\":6591:6654  user.amount.mul(accWETHPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_289\n        /* \"contracts/final/GMDstaking.sol\":6638:6642  user */\n      dup4\n        /* \"contracts/final/GMDstaking.sol\":6638:6653  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":6591:6633  user.amount.mul(accWETHPerShare).div(1e12) */\n      tag_201\n        /* \"contracts/final/GMDstaking.sol\":6628:6632  1e12 */\n      0xe8d4a51000\n        /* \"contracts/final/GMDstaking.sol\":6591:6623  user.amount.mul(accWETHPerShare) */\n      tag_202\n        /* \"contracts/final/GMDstaking.sol\":6607:6622  accWETHPerShare */\n      dup7\n        /* \"contracts/final/GMDstaking.sol\":6591:6595  user */\n      dup9\n        /* \"contracts/final/GMDstaking.sol\":6591:6602  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":6591:6606  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":6591:6623  user.amount.mul(accWETHPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":6591:6654  user.amount.mul(accWETHPerShare).div(1e12).sub(user.rewardDebt) */\n    tag_289:\n        /* \"contracts/final/GMDstaking.sol\":6584:6654  return user.amount.mul(accWETHPerShare).div(1e12).sub(user.rewardDebt) */\n      swap8\n        /* \"contracts/final/GMDstaking.sol\":5898:6662  function pendingWETH(uint256 _pid, address _user) external view returns (uint256) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/final/GMDstaking.sol\":7766:8438  function deposit(uint256 _pid, uint256 _amount) public nonReentrant {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_188\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/final/GMDstaking.sol\":7847:7868  PoolInfo storage pool */\n      0x00\n        /* \"contracts/final/GMDstaking.sol\":7871:7879  poolInfo */\n      0x06\n        /* \"contracts/final/GMDstaking.sol\":7880:7884  _pid */\n      dup4\n        /* \"contracts/final/GMDstaking.sol\":7871:7885  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_297\n      jumpi\n      tag_297\n      tag_153\n      jump\t// in\n    tag_297:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/final/GMDstaking.sol\":7920:7934  userInfo[_pid] */\n      dup7\n      dup5\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":7920:7928  userInfo */\n      0x07\n        /* \"contracts/final/GMDstaking.sol\":7920:7934  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/final/GMDstaking.sol\":7935:7945  msg.sender */\n      caller\n        /* \"contracts/final/GMDstaking.sol\":7920:7946  userInfo[_pid][msg.sender] */\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/final/GMDstaking.sol\":7871:7885  poolInfo[_pid] */\n      0x04\n      swap1\n      swap2\n      mul\n      swap1\n      swap2\n      add\n      swap2\n      pop\n        /* \"contracts/final/GMDstaking.sol\":7959:7975  updatePool(_pid) */\n      tag_299\n        /* \"contracts/final/GMDstaking.sol\":7929:7933  _pid */\n      dup5\n        /* \"contracts/final/GMDstaking.sol\":7959:7969  updatePool */\n      tag_77\n        /* \"contracts/final/GMDstaking.sol\":7959:7975  updatePool(_pid) */\n      jump\t// in\n    tag_299:\n        /* \"contracts/final/GMDstaking.sol\":7988:8003  uint256 pending */\n      0x00\n        /* \"contracts/final/GMDstaking.sol\":8006:8074  user.amount.mul(pool.accWETHPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_300\n        /* \"contracts/final/GMDstaking.sol\":8058:8062  user */\n      dup3\n        /* \"contracts/final/GMDstaking.sol\":8058:8073  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":8006:8053  user.amount.mul(pool.accWETHPerShare).div(1e12) */\n      tag_201\n        /* \"contracts/final/GMDstaking.sol\":8048:8052  1e12 */\n      0xe8d4a51000\n        /* \"contracts/final/GMDstaking.sol\":8006:8043  user.amount.mul(pool.accWETHPerShare) */\n      tag_202\n        /* \"contracts/final/GMDstaking.sol\":8022:8026  pool */\n      dup8\n        /* \"contracts/final/GMDstaking.sol\":8022:8042  pool.accWETHPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":8006:8010  user */\n      dup8\n        /* \"contracts/final/GMDstaking.sol\":8006:8017  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":8006:8021  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":8006:8043  user.amount.mul(pool.accWETHPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":8006:8074  user.amount.mul(pool.accWETHPerShare).div(1e12).sub(user.rewardDebt) */\n    tag_300:\n        /* \"contracts/final/GMDstaking.sol\":8101:8112  user.amount */\n      dup3\n      sload\n        /* \"contracts/final/GMDstaking.sol\":7988:8074  uint256 pending = user.amount.mul(pool.accWETHPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/final/GMDstaking.sol\":8101:8125  user.amount.add(_amount) */\n      tag_303\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":8117:8124  _amount */\n      dup6\n        /* \"contracts/final/GMDstaking.sol\":8101:8116  user.amount.add */\n      tag_166\n        /* \"contracts/final/GMDstaking.sol\":8101:8125  user.amount.add(_amount) */\n      jump\t// in\n    tag_303:\n        /* \"contracts/final/GMDstaking.sol\":8087:8125  user.amount = user.amount.add(_amount) */\n      dup1\n      dup4\n      sstore\n        /* \"contracts/final/GMDstaking.sol\":8170:8190  pool.accWETHPerShare */\n      0x03\n      dup5\n      add\n      sload\n        /* \"contracts/final/GMDstaking.sol\":8154:8201  user.amount.mul(pool.accWETHPerShare).div(1e12) */\n      tag_304\n      swap2\n        /* \"contracts/final/GMDstaking.sol\":8196:8200  1e12 */\n      0xe8d4a51000\n      swap2\n        /* \"contracts/final/GMDstaking.sol\":8154:8191  user.amount.mul(pool.accWETHPerShare) */\n      tag_202\n      swap2\n        /* \"contracts/final/GMDstaking.sol\":8087:8125  user.amount = user.amount.add(_amount) */\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":8154:8169  user.amount.mul */\n      tag_203\n        /* \"contracts/final/GMDstaking.sol\":8154:8191  user.amount.mul(pool.accWETHPerShare) */\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":8154:8201  user.amount.mul(pool.accWETHPerShare).div(1e12) */\n    tag_304:\n        /* \"contracts/final/GMDstaking.sol\":8136:8151  user.rewardDebt */\n      0x01\n      dup4\n      add\n        /* \"contracts/final/GMDstaking.sol\":8136:8201  user.rewardDebt = user.amount.mul(pool.accWETHPerShare).div(1e12) */\n      sstore\n        /* \"contracts/final/GMDstaking.sol\":8217:8228  pending > 0 */\n      dup1\n      iszero\n        /* \"contracts/final/GMDstaking.sol\":8214:8294  if(pending > 0) {... */\n      tag_307\n      jumpi\n        /* \"contracts/final/GMDstaking.sol\":8245:8282  safeWETHTransfer(msg.sender, pending) */\n      tag_307\n        /* \"contracts/final/GMDstaking.sol\":8262:8272  msg.sender */\n      caller\n        /* \"contracts/final/GMDstaking.sol\":8274:8281  pending */\n      dup3\n        /* \"contracts/final/GMDstaking.sol\":8245:8261  safeWETHTransfer */\n      tag_211\n        /* \"contracts/final/GMDstaking.sol\":8245:8282  safeWETHTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_307:\n        /* \"contracts/final/GMDstaking.sol\":8304:8316  pool.lpToken */\n      dup3\n      sload\n        /* \"contracts/final/GMDstaking.sol\":8304:8378  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_308\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/final/GMDstaking.sol\":8304:8316  pool.lpToken */\n      and\n        /* \"contracts/final/GMDstaking.sol\":8342:8352  msg.sender */\n      caller\n        /* \"contracts/final/GMDstaking.sol\":8363:8367  this */\n      address\n        /* \"contracts/final/GMDstaking.sol\":8370:8377  _amount */\n      dup8\n        /* \"contracts/final/GMDstaking.sol\":8304:8333  pool.lpToken.safeTransferFrom */\n      tag_309\n        /* \"contracts/final/GMDstaking.sol\":8304:8378  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      jump\t// in\n    tag_308:\n        /* \"contracts/final/GMDstaking.sol\":8396:8430  Deposit(msg.sender, _pid, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":8416:8420  _pid */\n      dup6\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":8404:8414  msg.sender */\n      caller\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":8396:8430  Deposit(msg.sender, _pid, _amount) */\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n      swap1\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"contracts/final/GMDstaking.sol\":8396:8430  Deposit(msg.sender, _pid, _amount) */\n      tag_214\n        /* \"#utility.yul\":199:376   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_312\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_312:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_314\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6553:6555   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6535:6556   */\n      mstore\n        /* \"#utility.yul\":6592:6594   */\n      0x26\n        /* \"#utility.yul\":6572:6590   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6565:6595   */\n      mstore\n        /* \"#utility.yul\":6631:6665   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6611:6629   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6604:6666   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6682:6700   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6675:6711   */\n      mstore\n        /* \"#utility.yul\":6728:6747   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_138\n        /* \"#utility.yul\":6351:6753   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_314:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_317\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_317:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6960:6962   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6942:6963   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6979:6997   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6972:7002   */\n      mstore\n        /* \"#utility.yul\":7038:7072   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7018:7036   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7011:7073   */\n      mstore\n        /* \"#utility.yul\":7090:7108   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_138\n        /* \"#utility.yul\":6758:7114   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_271\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_158\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":4137:4406  function checkForDuplicate(IERC20 _lpToken) internal view {... */\n    tag_179:\n        /* \"contracts/final/GMDstaking.sol\":4223:4231  poolInfo */\n      0x06\n        /* \"contracts/final/GMDstaking.sol\":4223:4238  poolInfo.length */\n      sload\n        /* \"contracts/final/GMDstaking.sol\":4206:4220  uint256 length */\n      0x00\n        /* \"contracts/final/GMDstaking.sol\":4249:4397  for (uint256 _pid = 0; _pid < length; _pid++) {... */\n    tag_328:\n        /* \"contracts/final/GMDstaking.sol\":4279:4285  length */\n      dup2\n        /* \"contracts/final/GMDstaking.sol\":4272:4276  _pid */\n      dup2\n        /* \"contracts/final/GMDstaking.sol\":4272:4285  _pid < length */\n      lt\n        /* \"contracts/final/GMDstaking.sol\":4249:4397  for (uint256 _pid = 0; _pid < length; _pid++) {... */\n      iszero\n      tag_329\n      jumpi\n        /* \"contracts/final/GMDstaking.sol\":4344:4352  _lpToken */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/final/GMDstaking.sol\":4318:4352  poolInfo[_pid].lpToken != _lpToken */\n      and\n        /* \"contracts/final/GMDstaking.sol\":4318:4326  poolInfo */\n      0x06\n        /* \"contracts/final/GMDstaking.sol\":4327:4331  _pid */\n      dup3\n        /* \"contracts/final/GMDstaking.sol\":4318:4332  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_332\n      jumpi\n      tag_332\n      tag_153\n      jump\t// in\n    tag_332:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x04\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/final/GMDstaking.sol\":4318:4340  poolInfo[_pid].lpToken */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/final/GMDstaking.sol\":4318:4352  poolInfo[_pid].lpToken != _lpToken */\n      eq\n      iszero\n        /* \"contracts/final/GMDstaking.sol\":4310:4385  require(poolInfo[_pid].lpToken != _lpToken, \"add: pool already exists!!!!\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7321:7323   */\n      0x20\n        /* \"contracts/final/GMDstaking.sol\":4310:4385  require(poolInfo[_pid].lpToken != _lpToken, \"add: pool already exists!!!!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7303:7324   */\n      mstore\n        /* \"#utility.yul\":7360:7362   */\n      0x1c\n        /* \"#utility.yul\":7340:7358   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7333:7363   */\n      mstore\n        /* \"#utility.yul\":7399:7429   */\n      0x6164643a20706f6f6c20616c7265616479206578697374732121212100000000\n        /* \"#utility.yul\":7379:7397   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7372:7430   */\n      mstore\n        /* \"#utility.yul\":7447:7465   */\n      0x64\n      add\n        /* \"contracts/final/GMDstaking.sol\":4310:4385  require(poolInfo[_pid].lpToken != _lpToken, \"add: pool already exists!!!!\") */\n      tag_138\n        /* \"#utility.yul\":7119:7471   */\n      jump\n        /* \"contracts/final/GMDstaking.sol\":4310:4385  require(poolInfo[_pid].lpToken != _lpToken, \"add: pool already exists!!!!\") */\n    tag_334:\n        /* \"contracts/final/GMDstaking.sol\":4287:4293  _pid++ */\n      dup1\n      tag_337\n      dup2\n      tag_254\n      jump\t// in\n    tag_337:\n      swap2\n      pop\n      pop\n        /* \"contracts/final/GMDstaking.sol\":4249:4397  for (uint256 _pid = 0; _pid < length; _pid++) {... */\n      jump(tag_328)\n    tag_329:\n      pop\n        /* \"contracts/final/GMDstaking.sol\":4195:4406  {... */\n      pop\n        /* \"contracts/final/GMDstaking.sol\":4137:4406  function checkForDuplicate(IERC20 _lpToken) internal view {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_271\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_340\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_271\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_343\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_271\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_156\n      jump\t// in\n        /* \"contracts/final/GMDstaking.sol\":9999:10277  function safeWETHTransfer(address _to, uint256 _amount) internal {... */\n    tag_211:\n        /* \"contracts/final/GMDstaking.sol\":10093:10097  WETH */\n      sload(0x02)\n        /* \"contracts/final/GMDstaking.sol\":10093:10122  WETH.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":10116:10120  this */\n      address\n        /* \"contracts/final/GMDstaking.sol\":10093:10122  WETH.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1894:1945   */\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":10075:10090  uint256 WETHBal */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/final/GMDstaking.sol\":10093:10097  WETH */\n      and\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":10093:10107  WETH.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1867:1885   */\n      0x24\n      add\n        /* \"contracts/final/GMDstaking.sol\":10093:10122  WETH.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_349\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_349:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_350\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_350:\n        /* \"contracts/final/GMDstaking.sol\":10075:10122  uint256 WETHBal = WETH.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/final/GMDstaking.sol\":10147:10154  WETHBal */\n      dup1\n        /* \"contracts/final/GMDstaking.sol\":10137:10144  _amount */\n      dup3\n        /* \"contracts/final/GMDstaking.sol\":10137:10154  _amount > WETHBal */\n      gt\n        /* \"contracts/final/GMDstaking.sol\":10133:10270  if (_amount > WETHBal) {... */\n      iszero\n      tag_351\n      jumpi\n        /* \"contracts/final/GMDstaking.sol\":10171:10175  WETH */\n      sload(0x02)\n        /* \"contracts/final/GMDstaking.sol\":10171:10198  WETH.transfer(_to, WETHBal) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8063:8095   */\n      dup6\n      dup2\n      and\n        /* \"contracts/final/GMDstaking.sol\":10171:10198  WETH.transfer(_to, WETHBal) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":8045:8096   */\n      mstore\n        /* \"#utility.yul\":8112:8130   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8105:8139   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":10171:10175  WETH */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":10171:10184  WETH.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":8018:8036   */\n      0x44\n      add\n        /* \"contracts/final/GMDstaking.sol\":10171:10198  WETH.transfer(_to, WETHBal) */\n    tag_352:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_355\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_355:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_356\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_356:\n      pop\n        /* \"contracts/final/GMDstaking.sol\":4249:4397  for (uint256 _pid = 0; _pid < length; _pid++) {... */\n      pop\n        /* \"contracts/final/GMDstaking.sol\":4195:4406  {... */\n      pop\n        /* \"contracts/final/GMDstaking.sol\":4137:4406  function checkForDuplicate(IERC20 _lpToken) internal view {... */\n      pop\n      jump\t// out\n        /* \"contracts/final/GMDstaking.sol\":10133:10270  if (_amount > WETHBal) {... */\n    tag_351:\n        /* \"contracts/final/GMDstaking.sol\":10231:10235  WETH */\n      sload(0x02)\n        /* \"contracts/final/GMDstaking.sol\":10231:10258  WETH.transfer(_to, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8063:8095   */\n      dup6\n      dup2\n      and\n        /* \"contracts/final/GMDstaking.sol\":10231:10258  WETH.transfer(_to, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":8045:8096   */\n      mstore\n        /* \"#utility.yul\":8112:8130   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8105:8139   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/final/GMDstaking.sol\":10231:10235  WETH */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/final/GMDstaking.sol\":10231:10244  WETH.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":8018:8036   */\n      0x44\n      add\n        /* \"contracts/final/GMDstaking.sol\":10231:10258  WETH.transfer(_to, _amount) */\n      tag_352\n        /* \"#utility.yul\":7871:8145   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8063:8095   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8045:8096   */\n      mstore\n        /* \"#utility.yul\":8112:8130   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":8105:8139   */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_329\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":895:900  token */\n      dup5\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":925:948  token.transfer.selector */\n      swap1\n        /* \"#utility.yul\":8018:8036   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n    tag_364:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:894  _callOptionalReturn */\n      tag_365\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4563:4578   */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4545:4579   */\n      mstore\n        /* \"#utility.yul\":4615:4630   */\n      dup4\n      and\n        /* \"#utility.yul\":4595:4613   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4588:4631   */\n      mstore\n        /* \"#utility.yul\":4647:4665   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":4640:4674   */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_356\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1132:1137  token */\n      dup6\n      swap1\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1162:1189  token.transferFrom.selector */\n      swap1\n        /* \"#utility.yul\":4480:4498   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      tag_364\n        /* \"#utility.yul\":4305:4680   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_365:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_372\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      and\n      tag_373\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      tag_329\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_375\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_375:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8352:8354   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8334:8355   */\n      mstore\n        /* \"#utility.yul\":8391:8393   */\n      0x2a\n        /* \"#utility.yul\":8371:8389   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8364:8394   */\n      mstore\n        /* \"#utility.yul\":8430:8464   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":8410:8428   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8403:8465   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":8481:8499   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8474:8514   */\n      mstore\n        /* \"#utility.yul\":8531:8550   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_138\n        /* \"#utility.yul\":8150:8556   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_373:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_380\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_381\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_379:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_381:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_383\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8763:8765   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8745:8766   */\n      mstore\n        /* \"#utility.yul\":8802:8804   */\n      0x26\n        /* \"#utility.yul\":8782:8800   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8775:8805   */\n      mstore\n        /* \"#utility.yul\":8841:8875   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":8821:8839   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8814:8876   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":8892:8910   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8885:8921   */\n      mstore\n        /* \"#utility.yul\":8938:8957   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_138\n        /* \"#utility.yul\":8561:8963   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_383:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_388\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9170:9172   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9152:9173   */\n      mstore\n        /* \"#utility.yul\":9209:9211   */\n      0x1d\n        /* \"#utility.yul\":9189:9207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9182:9212   */\n      mstore\n        /* \"#utility.yul\":9248:9279   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":9228:9246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9221:9280   */\n      mstore\n        /* \"#utility.yul\":9297:9315   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_138\n        /* \"#utility.yul\":8968:9321   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n    tag_388:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_391\n      swap2\n      swap1\n      tag_392\n      jump\t// in\n    tag_391:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_395\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_394)\n    tag_395:\n      0x60\n      swap2\n      pop\n    tag_394:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_289\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n      iszero\n      tag_400\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      jump(tag_379)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n    tag_400:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n      tag_402\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8120:8130  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8114:8131  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8180:8195  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8167:8177  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8163:8165  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8159:8178  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8152:8196  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n    tag_402:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8259:8271  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n        /* \"#utility.yul\":14:194   */\n    tag_40:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_411:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":817:1065   */\n    tag_56:\n        /* \"#utility.yul\":885:891   */\n      0x00\n        /* \"#utility.yul\":893:899   */\n      dup1\n        /* \"#utility.yul\":946:948   */\n      0x40\n        /* \"#utility.yul\":934:943   */\n      dup4\n        /* \"#utility.yul\":925:932   */\n      dup6\n        /* \"#utility.yul\":921:944   */\n      sub\n        /* \"#utility.yul\":917:949   */\n      slt\n        /* \"#utility.yul\":914:966   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":962:963   */\n      0x00\n        /* \"#utility.yul\":959:960   */\n      dup1\n        /* \"#utility.yul\":952:964   */\n      revert\n        /* \"#utility.yul\":914:966   */\n    tag_415:\n      pop\n      pop\n        /* \"#utility.yul\":985:1008   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1055:1057   */\n      0x20\n        /* \"#utility.yul\":1040:1058   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1027:1059   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":817:1065   */\n      jump\t// out\n        /* \"#utility.yul\":1070:1209   */\n    tag_406:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1153:1184   */\n      dup2\n      and\n        /* \"#utility.yul\":1143:1185   */\n      dup2\n      eq\n        /* \"#utility.yul\":1133:1203   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":1199:1200   */\n      0x00\n        /* \"#utility.yul\":1196:1197   */\n      dup1\n        /* \"#utility.yul\":1189:1201   */\n      revert\n        /* \"#utility.yul\":1214:1551   */\n    tag_63:\n        /* \"#utility.yul\":1296:1302   */\n      0x00\n        /* \"#utility.yul\":1304:1310   */\n      dup1\n        /* \"#utility.yul\":1357:1359   */\n      0x40\n        /* \"#utility.yul\":1345:1354   */\n      dup4\n        /* \"#utility.yul\":1336:1343   */\n      dup6\n        /* \"#utility.yul\":1332:1355   */\n      sub\n        /* \"#utility.yul\":1328:1360   */\n      slt\n        /* \"#utility.yul\":1325:1377   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":1373:1374   */\n      0x00\n        /* \"#utility.yul\":1370:1371   */\n      dup1\n        /* \"#utility.yul\":1363:1375   */\n      revert\n        /* \"#utility.yul\":1325:1377   */\n    tag_419:\n        /* \"#utility.yul\":1409:1418   */\n      dup3\n        /* \"#utility.yul\":1396:1419   */\n      calldataload\n        /* \"#utility.yul\":1386:1419   */\n      swap2\n      pop\n        /* \"#utility.yul\":1469:1471   */\n      0x20\n        /* \"#utility.yul\":1458:1467   */\n      dup4\n        /* \"#utility.yul\":1454:1472   */\n      add\n        /* \"#utility.yul\":1441:1473   */\n      calldataload\n        /* \"#utility.yul\":1482:1521   */\n      tag_420\n        /* \"#utility.yul\":1515:1520   */\n      dup2\n        /* \"#utility.yul\":1482:1521   */\n      tag_406\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":1540:1545   */\n      dup1\n        /* \"#utility.yul\":1530:1545   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1214:1551   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2759:3014   */\n    tag_128:\n        /* \"#utility.yul\":2818:2824   */\n      0x00\n        /* \"#utility.yul\":2871:2873   */\n      0x20\n        /* \"#utility.yul\":2859:2868   */\n      dup3\n        /* \"#utility.yul\":2850:2857   */\n      dup5\n        /* \"#utility.yul\":2846:2869   */\n      sub\n        /* \"#utility.yul\":2842:2874   */\n      slt\n        /* \"#utility.yul\":2839:2891   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":2887:2888   */\n      0x00\n        /* \"#utility.yul\":2884:2885   */\n      dup1\n        /* \"#utility.yul\":2877:2889   */\n      revert\n        /* \"#utility.yul\":2839:2891   */\n    tag_429:\n        /* \"#utility.yul\":2926:2935   */\n      dup2\n        /* \"#utility.yul\":2913:2936   */\n      calldataload\n        /* \"#utility.yul\":2945:2984   */\n      tag_379\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2945:2984   */\n      tag_406\n      jump\t// in\n        /* \"#utility.yul\":3778:3905   */\n    tag_153:\n        /* \"#utility.yul\":3839:3849   */\n      0x4e487b71\n        /* \"#utility.yul\":3834:3837   */\n      0xe0\n        /* \"#utility.yul\":3830:3850   */\n      shl\n        /* \"#utility.yul\":3827:3828   */\n      0x00\n        /* \"#utility.yul\":3820:3851   */\n      mstore\n        /* \"#utility.yul\":3870:3874   */\n      0x32\n        /* \"#utility.yul\":3867:3868   */\n      0x04\n        /* \"#utility.yul\":3860:3875   */\n      mstore\n        /* \"#utility.yul\":3894:3898   */\n      0x24\n        /* \"#utility.yul\":3891:3892   */\n      0x00\n        /* \"#utility.yul\":3884:3899   */\n      revert\n        /* \"#utility.yul\":3910:4037   */\n    tag_407:\n        /* \"#utility.yul\":3971:3981   */\n      0x4e487b71\n        /* \"#utility.yul\":3966:3969   */\n      0xe0\n        /* \"#utility.yul\":3962:3982   */\n      shl\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3952:3983   */\n      mstore\n        /* \"#utility.yul\":4002:4006   */\n      0x11\n        /* \"#utility.yul\":3999:4000   */\n      0x04\n        /* \"#utility.yul\":3992:4007   */\n      mstore\n        /* \"#utility.yul\":4026:4030   */\n      0x24\n        /* \"#utility.yul\":4023:4024   */\n      0x00\n        /* \"#utility.yul\":4016:4031   */\n      revert\n        /* \"#utility.yul\":4042:4167   */\n    tag_156:\n        /* \"#utility.yul\":4082:4086   */\n      0x00\n        /* \"#utility.yul\":4110:4111   */\n      dup3\n        /* \"#utility.yul\":4107:4108   */\n      dup3\n        /* \"#utility.yul\":4104:4112   */\n      lt\n        /* \"#utility.yul\":4101:4135   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":4115:4133   */\n      tag_437\n      tag_407\n      jump\t// in\n    tag_437:\n      pop\n        /* \"#utility.yul\":4152:4161   */\n      sub\n      swap1\n        /* \"#utility.yul\":4042:4167   */\n      jump\t// out\n        /* \"#utility.yul\":4172:4300   */\n    tag_158:\n        /* \"#utility.yul\":4212:4215   */\n      0x00\n        /* \"#utility.yul\":4243:4244   */\n      dup3\n        /* \"#utility.yul\":4239:4245   */\n      not\n        /* \"#utility.yul\":4236:4237   */\n      dup3\n        /* \"#utility.yul\":4233:4246   */\n      gt\n        /* \"#utility.yul\":4230:4269   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":4249:4267   */\n      tag_440\n      tag_407\n      jump\t// in\n    tag_440:\n      pop\n        /* \"#utility.yul\":4285:4294   */\n      add\n      swap1\n        /* \"#utility.yul\":4172:4300   */\n      jump\t// out\n        /* \"#utility.yul\":4685:4962   */\n    tag_172:\n        /* \"#utility.yul\":4752:4758   */\n      0x00\n        /* \"#utility.yul\":4805:4807   */\n      0x20\n        /* \"#utility.yul\":4793:4802   */\n      dup3\n        /* \"#utility.yul\":4784:4791   */\n      dup5\n        /* \"#utility.yul\":4780:4803   */\n      sub\n        /* \"#utility.yul\":4776:4808   */\n      slt\n        /* \"#utility.yul\":4773:4825   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":4821:4822   */\n      0x00\n        /* \"#utility.yul\":4818:4819   */\n      dup1\n        /* \"#utility.yul\":4811:4823   */\n      revert\n        /* \"#utility.yul\":4773:4825   */\n    tag_443:\n        /* \"#utility.yul\":4853:4862   */\n      dup2\n        /* \"#utility.yul\":4847:4863   */\n      mload\n        /* \"#utility.yul\":4906:4911   */\n      dup1\n        /* \"#utility.yul\":4899:4912   */\n      iszero\n        /* \"#utility.yul\":4892:4913   */\n      iszero\n        /* \"#utility.yul\":4885:4890   */\n      dup2\n        /* \"#utility.yul\":4882:4914   */\n      eq\n        /* \"#utility.yul\":4872:4932   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":4928:4929   */\n      0x00\n        /* \"#utility.yul\":4925:4926   */\n      dup1\n        /* \"#utility.yul\":4918:4930   */\n      revert\n        /* \"#utility.yul\":4967:5322   */\n    tag_188:\n        /* \"#utility.yul\":5169:5171   */\n      0x20\n        /* \"#utility.yul\":5151:5172   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5208:5210   */\n      0x1f\n        /* \"#utility.yul\":5188:5206   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5181:5211   */\n      mstore\n        /* \"#utility.yul\":5247:5280   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":5242:5244   */\n      0x40\n        /* \"#utility.yul\":5227:5245   */\n      dup3\n      add\n        /* \"#utility.yul\":5220:5281   */\n      mstore\n        /* \"#utility.yul\":5313:5315   */\n      0x60\n        /* \"#utility.yul\":5298:5316   */\n      add\n      swap1\n        /* \"#utility.yul\":4967:5322   */\n      jump\t// out\n        /* \"#utility.yul\":6022:6206   */\n    tag_224:\n        /* \"#utility.yul\":6092:6098   */\n      0x00\n        /* \"#utility.yul\":6145:6147   */\n      0x20\n        /* \"#utility.yul\":6133:6142   */\n      dup3\n        /* \"#utility.yul\":6124:6131   */\n      dup5\n        /* \"#utility.yul\":6120:6143   */\n      sub\n        /* \"#utility.yul\":6116:6148   */\n      slt\n        /* \"#utility.yul\":6113:6165   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":6161:6162   */\n      0x00\n        /* \"#utility.yul\":6158:6159   */\n      dup1\n        /* \"#utility.yul\":6151:6163   */\n      revert\n        /* \"#utility.yul\":6113:6165   */\n    tag_449:\n      pop\n        /* \"#utility.yul\":6184:6200   */\n      mload\n      swap2\n        /* \"#utility.yul\":6022:6206   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6211:6346   */\n    tag_254:\n        /* \"#utility.yul\":6250:6253   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":6271:6288   */\n      dup3\n      eq\n        /* \"#utility.yul\":6268:6311   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":6291:6309   */\n      tag_452\n      tag_407\n      jump\t// in\n    tag_452:\n      pop\n        /* \"#utility.yul\":6338:6339   */\n      0x01\n        /* \"#utility.yul\":6327:6340   */\n      add\n      swap1\n        /* \"#utility.yul\":6211:6346   */\n      jump\t// out\n        /* \"#utility.yul\":7476:7644   */\n    tag_340:\n        /* \"#utility.yul\":7516:7523   */\n      0x00\n        /* \"#utility.yul\":7582:7583   */\n      dup2\n        /* \"#utility.yul\":7578:7579   */\n      0x00\n        /* \"#utility.yul\":7574:7580   */\n      not\n        /* \"#utility.yul\":7570:7584   */\n      div\n        /* \"#utility.yul\":7567:7568   */\n      dup4\n        /* \"#utility.yul\":7564:7585   */\n      gt\n        /* \"#utility.yul\":7559:7560   */\n      dup3\n        /* \"#utility.yul\":7552:7561   */\n      iszero\n        /* \"#utility.yul\":7545:7562   */\n      iszero\n        /* \"#utility.yul\":7541:7586   */\n      and\n        /* \"#utility.yul\":7538:7609   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":7589:7607   */\n      tag_458\n      tag_407\n      jump\t// in\n    tag_458:\n      pop\n        /* \"#utility.yul\":7629:7638   */\n      mul\n      swap1\n        /* \"#utility.yul\":7476:7644   */\n      jump\t// out\n        /* \"#utility.yul\":7649:7866   */\n    tag_343:\n        /* \"#utility.yul\":7689:7690   */\n      0x00\n        /* \"#utility.yul\":7715:7716   */\n      dup3\n        /* \"#utility.yul\":7705:7837   */\n      tag_460\n      jumpi\n        /* \"#utility.yul\":7759:7769   */\n      0x4e487b71\n        /* \"#utility.yul\":7754:7757   */\n      0xe0\n        /* \"#utility.yul\":7750:7770   */\n      shl\n        /* \"#utility.yul\":7747:7748   */\n      0x00\n        /* \"#utility.yul\":7740:7771   */\n      mstore\n        /* \"#utility.yul\":7794:7798   */\n      0x12\n        /* \"#utility.yul\":7791:7792   */\n      0x04\n        /* \"#utility.yul\":7784:7799   */\n      mstore\n        /* \"#utility.yul\":7822:7826   */\n      0x24\n        /* \"#utility.yul\":7819:7820   */\n      0x00\n        /* \"#utility.yul\":7812:7827   */\n      revert\n        /* \"#utility.yul\":7705:7837   */\n    tag_460:\n      pop\n        /* \"#utility.yul\":7851:7860   */\n      div\n      swap1\n        /* \"#utility.yul\":7649:7866   */\n      jump\t// out\n        /* \"#utility.yul\":9326:9584   */\n    tag_408:\n        /* \"#utility.yul\":9398:9399   */\n      0x00\n        /* \"#utility.yul\":9408:9521   */\n    tag_466:\n        /* \"#utility.yul\":9422:9428   */\n      dup4\n        /* \"#utility.yul\":9419:9420   */\n      dup2\n        /* \"#utility.yul\":9416:9429   */\n      lt\n        /* \"#utility.yul\":9408:9521   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":9498:9509   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9492:9510   */\n      mload\n        /* \"#utility.yul\":9479:9490   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":9472:9511   */\n      mstore\n        /* \"#utility.yul\":9444:9446   */\n      0x20\n        /* \"#utility.yul\":9437:9447   */\n      add\n        /* \"#utility.yul\":9408:9521   */\n      jump(tag_466)\n    tag_468:\n        /* \"#utility.yul\":9539:9545   */\n      dup4\n        /* \"#utility.yul\":9536:9537   */\n      dup2\n        /* \"#utility.yul\":9533:9546   */\n      gt\n        /* \"#utility.yul\":9530:9578   */\n      iszero\n      tag_356\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":9574:9575   */\n      0x00\n        /* \"#utility.yul\":9556:9572   */\n      swap2\n      add\n        /* \"#utility.yul\":9549:9576   */\n      mstore\n        /* \"#utility.yul\":9326:9584   */\n      jump\t// out\n        /* \"#utility.yul\":9589:9863   */\n    tag_392:\n        /* \"#utility.yul\":9718:9721   */\n      0x00\n        /* \"#utility.yul\":9756:9762   */\n      dup3\n        /* \"#utility.yul\":9750:9763   */\n      mload\n        /* \"#utility.yul\":9772:9825   */\n      tag_471\n        /* \"#utility.yul\":9818:9824   */\n      dup2\n        /* \"#utility.yul\":9813:9816   */\n      dup5\n        /* \"#utility.yul\":9806:9810   */\n      0x20\n        /* \"#utility.yul\":9798:9804   */\n      dup8\n        /* \"#utility.yul\":9794:9811   */\n      add\n        /* \"#utility.yul\":9772:9825   */\n      tag_408\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":9841:9857   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":9589:9863   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9868:10251   */\n    tag_405:\n        /* \"#utility.yul\":10017:10019   */\n      0x20\n        /* \"#utility.yul\":10006:10015   */\n      dup2\n        /* \"#utility.yul\":9999:10020   */\n      mstore\n        /* \"#utility.yul\":9980:9984   */\n      0x00\n        /* \"#utility.yul\":10049:10055   */\n      dup3\n        /* \"#utility.yul\":10043:10056   */\n      mload\n        /* \"#utility.yul\":10092:10098   */\n      dup1\n        /* \"#utility.yul\":10087:10089   */\n      0x20\n        /* \"#utility.yul\":10076:10085   */\n      dup5\n        /* \"#utility.yul\":10072:10090   */\n      add\n        /* \"#utility.yul\":10065:10099   */\n      mstore\n        /* \"#utility.yul\":10108:10174   */\n      tag_473\n        /* \"#utility.yul\":10167:10173   */\n      dup2\n        /* \"#utility.yul\":10162:10164   */\n      0x40\n        /* \"#utility.yul\":10151:10160   */\n      dup6\n        /* \"#utility.yul\":10147:10165   */\n      add\n        /* \"#utility.yul\":10142:10144   */\n      0x20\n        /* \"#utility.yul\":10134:10140   */\n      dup8\n        /* \"#utility.yul\":10130:10145   */\n      add\n        /* \"#utility.yul\":10108:10174   */\n      tag_408\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":10235:10237   */\n      0x1f\n        /* \"#utility.yul\":10214:10229   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":10210:10239   */\n      and\n        /* \"#utility.yul\":10195:10240   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":10242:10244   */\n      0x40\n        /* \"#utility.yul\":10191:10245   */\n      add\n      swap3\n        /* \"#utility.yul\":9868:10251   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220608745f5e34f1667f67b3b4d47ce1317edcc715ab6aa394d8bd275ac968b4e7c64736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1287": {
									"entryPoint": null,
									"id": 1287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_854": {
									"entryPoint": null,
									"id": 854,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 132,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:261:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "112:147:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "158:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "167:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "170:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "160:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "160:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "160:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "133:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "142:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "129:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "129:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "154:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "125:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "125:32:9"
															},
															"nodeType": "YulIf",
															"src": "122:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "183:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "199:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "193:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "193:16:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "218:35:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "238:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "249:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "234:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "234:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "228:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:25:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "70:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "81:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "93:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "101:6:9",
														"type": ""
													}
												],
												"src": "14:245:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a0604052600280546001600160a01b0319167382af49447d8a07e3bd95bd0d56f35241523fbab1179055600060058190556008556009805460ff1916905534801561004a57600080fd5b50604051611939380380611939833981016040819052610069916100d4565b61007233610084565b600180556004919091556080526100f8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100e757600080fd5b505080516020909101519092909150565b608051611803610136600039600081816102e8015281816106b1015281816106d801528181610c6701528181610c8e0152610cb801526118036000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806378e97925116100f95780639bd16d7b11610097578063d49e77cd11610071578063d49e77cd146103d7578063e2bbb158146103ea578063f2fde38b146103fd578063f4b83c4c1461041057600080fd5b80639bd16d7b146103a8578063ad5c4648146103bb578063b9ac9686146103ce57600080fd5b80638da5cb5b116100d35780638da5cb5b1461031a5780638dbb1e3a1461033f5780639112f2b21461035257806393f1a40b1461036157600080fd5b806378e97925146102e35780637b020dad1461030a578063845105e21461031257600080fd5b8063412490611161016657806351eb05a61161014057806351eb05a6146102ad5780635312ea8e146102c0578063630b5ba1146102d3578063715018a6146102db57600080fd5b80634124906114610274578063441a3e701461027d578063501883011461029057600080fd5b806317caf6f1116101a257806317caf6f1146102325780631ab06ee51461023b5780632377b2a81461024e5780632b8bbbe81461026157600080fd5b80630332e936146101c9578063081e3eda146101de5780631526fe27146101f5575b600080fd5b6101dc6101d736600461158c565b610419565b005b6006545b6040519081526020015b60405180910390f35b61020861020336600461158c565b610495565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101ec565b6101e260085481565b6101dc6102493660046115a5565b6104d9565b6101dc61025c36600461158c565b6105ab565b6101dc61026f3660046115dc565b610642565b6101e260045481565b6101dc61028b3660046115a5565b6107fd565b60095461029d9060ff1681565b60405190151581526020016101ec565b6101dc6102bb36600461158c565b6109d0565b6101dc6102ce36600461158c565b610af7565b6101dc610bfd565b6101dc610c24565b6101e27f000000000000000000000000000000000000000000000000000000000000000081565b6101dc610c38565b6101dc610c4c565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101ec565b6101e261034d3660046115a5565b610c63565b6101e2670de0b6b3a764000081565b61039361036f3660046115dc565b60076020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016101ec565b6101e26103b63660046115dc565b610cf9565b600254610327906001600160a01b031681565b6101e260055481565b600354610327906001600160a01b031681565b6101dc6103f83660046115a5565b610e56565b6101dc61040b36600461160c565b610f81565b6101e2610fa081565b610421610ffa565b670de0b6b3a76400008111156104885760405162461bcd60e51b815260206004820152602160248201527f736574574554485065725365636f6e643a20746f6f206d616e792057455448736044820152602160f81b60648201526084015b60405180910390fd5b610490610bfd565b600455565b600681815481106104a557600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b6104e1610ffa565b610fa08111156105335760405162461bcd60e51b815260206004820152601c60248201527f6164643a20746f6f206d616e7920616c6c6f6320706f696e7473212100000000604482015260640161047f565b61053b610bfd565b806006838154811061054f5761054f611629565b90600052602060002090600402016001015460085461056e9190611655565b610578919061166c565b600881905550806006838154811061059257610592611629565b9060005260206000209060040201600101819055505050565b6105b3610ffa565b6005546105c09082611054565b6005556002546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561061a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063e9190611684565b5050565b61064a610ffa565b610fa082111561069c5760405162461bcd60e51b815260206004820152601c60248201527f6164643a20746f6f206d616e7920616c6c6f6320706f696e7473212100000000604482015260640161047f565b6106a581611060565b6106ad610bfd565b60007f000000000000000000000000000000000000000000000000000000000000000042116106fc577f00000000000000000000000000000000000000000000000000000000000000006106fe565b425b60085490915061070e9084611054565b600855604080516080810182526001600160a01b0393841681526020810194855290810191825260006060820181815260068054600181018255925291517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600490920291820180546001600160a01b031916919095161790935592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40830155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4182015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4290910155565b600260015414156108205760405162461bcd60e51b815260040161047f906116a6565b600260018190555060006006838154811061083d5761083d611629565b6000918252602080832086845260078252604080852033865290925292208054600490920290920192508311156108ab5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015260640161047f565b60095460ff166108f35760405162461bcd60e51b81526020600482015260136024820152721dda5d1a191c985dc81b9bdd081bdc195b9959606a1b604482015260640161047f565b6108fc846109d0565b6000610936826001015461093064e8d4a5100061092a8760030154876000015461110a90919063ffffffff16565b90611116565b90611122565b82549091506109459085611122565b80835560038401546109629164e8d4a510009161092a919061110a565b6001830155801561097757610977338261112e565b825461098d906001600160a01b0316338661125c565b604051848152859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906020015b60405180910390a3505060018055505050565b6000600682815481106109e5576109e5611629565b9060005260206000209060040201905080600201544211610a04575050565b80546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7091906116dd565b905080610a8257504260029091015550565b6000610a92836002015442610c63565b90506000610abf60085461092a8660010154610ab96004548761110a90919063ffffffff16565b9061110a565b9050610ae2610ad78461092a8464e8d4a5100061110a565b600386015490611054565b60038501555050426002909201919091555050565b60026001541415610b1a5760405162461bcd60e51b815260040161047f906116a6565b6002600181905550600060068281548110610b3757610b37611629565b600091825260208083208584526007825260408085203380875293528420805485825560018201959095556004909302019350909190610b9590610b836103e861092a856102bc61110a565b85546001600160a01b0316919061125c565b610bbc610baa6000546001600160a01b031690565b610b836103e861092a8561012c61110a565b604051818152849033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a35050600180555050565b60065460005b8181101561063e57610c14816109d0565b610c1d816116f6565b9050610c03565b610c2c610ffa565b610c3660006112bf565b565b610c40610ffa565b6009805460ff19169055565b610c54610ffa565b6009805460ff19166001179055565b60007f00000000000000000000000000000000000000000000000000000000000000008311610cb2577f0000000000000000000000000000000000000000000000000000000000000000610cb4565b825b92507f0000000000000000000000000000000000000000000000000000000000000000821015610ce657506000610cf3565b610cf08383611655565b90505b92915050565b60008060068481548110610d0f57610d0f611629565b600091825260208083208784526007825260408085206001600160a01b038981168752935280852060049485029092016003810154815492516370a0823160e01b8152309681019690965290965091949193919216906370a0823190602401602060405180830381865afa158015610d8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610daf91906116dd565b9050836002015442118015610dc357508015155b15610e23576000610dd8856002015442610c63565b90506000610dff60085461092a8860010154610ab96004548761110a90919063ffffffff16565b9050610e1e610e178461092a8464e8d4a5100061110a565b8590611054565b935050505b610e4b836001015461093064e8d4a5100061092a86886000015461110a90919063ffffffff16565b979650505050505050565b60026001541415610e795760405162461bcd60e51b815260040161047f906116a6565b6002600181905550600060068381548110610e9657610e96611629565b60009182526020808320868452600782526040808520338652909252922060049091029091019150610ec7846109d0565b6000610ef5826001015461093064e8d4a5100061092a8760030154876000015461110a90919063ffffffff16565b8254909150610f049085611054565b8083556003840154610f219164e8d4a510009161092a919061110a565b60018301558015610f3657610f36338261112e565b8254610f4d906001600160a01b031633308761130f565b604051848152859033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15906020016109bd565b610f89610ffa565b6001600160a01b038116610fee5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161047f565b610ff7816112bf565b50565b6000546001600160a01b03163314610c365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161047f565b6000610cf0828461166c565b60065460005b8181101561110557826001600160a01b03166006828154811061108b5761108b611629565b60009182526020909120600490910201546001600160a01b031614156110f35760405162461bcd60e51b815260206004820152601c60248201527f6164643a20706f6f6c20616c7265616479206578697374732121212100000000604482015260640161047f565b806110fd816116f6565b915050611066565b505050565b6000610cf08284611711565b6000610cf08284611730565b6000610cf08284611655565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611177573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119b91906116dd565b9050808211156112235760025460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490529091169063a9059cbb906044015b6020604051808303816000875af11580156111f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121d9190611684565b50505050565b60025460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb906044016111da565b6040516001600160a01b03831660248201526044810182905261110590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611347565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b038085166024830152831660448201526064810182905261121d9085906323b872dd60e01b90608401611288565b600061139c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114199092919063ffffffff16565b80519091501561110557808060200190518101906113ba9190611684565b6111055760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161047f565b60606114288484600085611432565b90505b9392505050565b6060824710156114935760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161047f565b6001600160a01b0385163b6114ea5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161047f565b600080866001600160a01b03168587604051611506919061177e565b60006040518083038185875af1925050503d8060008114611543576040519150601f19603f3d011682016040523d82523d6000602084013e611548565b606091505b5091509150610e4b8282866060831561156257508161142b565b8251156115725782518084602001fd5b8160405162461bcd60e51b815260040161047f919061179a565b60006020828403121561159e57600080fd5b5035919050565b600080604083850312156115b857600080fd5b50508035926020909101359150565b6001600160a01b0381168114610ff757600080fd5b600080604083850312156115ef57600080fd5b823591506020830135611601816115c7565b809150509250929050565b60006020828403121561161e57600080fd5b813561142b816115c7565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156116675761166761163f565b500390565b6000821982111561167f5761167f61163f565b500190565b60006020828403121561169657600080fd5b8151801515811461142b57600080fd5b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6000602082840312156116ef57600080fd5b5051919050565b600060001982141561170a5761170a61163f565b5060010190565b600081600019048311821515161561172b5761172b61163f565b500290565b60008261174d57634e487b7160e01b600052601260045260246000fd5b500490565b60005b8381101561176d578181015183820152602001611755565b8381111561121d5750506000910152565b60008251611790818460208701611752565b9190910192915050565b60208152600082518060208401526117b9816040850160208701611752565b601f01601f1916919091016040019291505056fea2646970667358221220608745f5e34f1667f67b3b4d47ce1317edcc715ab6aa394d8bd275ac968b4e7c64736f6c634300080c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x82AF49447D8A07E3BD95BD0D56F35241523FBAB1 OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x8 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1939 CODESIZE SUB DUP1 PUSH2 0x1939 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x69 SWAP2 PUSH2 0xD4 JUMP JUMPDEST PUSH2 0x72 CALLER PUSH2 0x84 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x80 MSTORE PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1803 PUSH2 0x136 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2E8 ADD MSTORE DUP2 DUP2 PUSH2 0x6B1 ADD MSTORE DUP2 DUP2 PUSH2 0x6D8 ADD MSTORE DUP2 DUP2 PUSH2 0xC67 ADD MSTORE DUP2 DUP2 PUSH2 0xC8E ADD MSTORE PUSH2 0xCB8 ADD MSTORE PUSH2 0x1803 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78E97925 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0x9BD16D7B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD49E77CD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD49E77CD EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xF4B83C4C EQ PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9BD16D7B EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xB9AC9686 EQ PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x9112F2B2 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x78E97925 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x7B020DAD EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x845105E2 EQ PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41249061 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41249061 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x50188301 EQ PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17CAF6F1 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x2377B2A8 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x2B8BBBE8 EQ PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x332E936 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x1F5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1EC JUMP JUMPDEST PUSH2 0x1E2 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x15DC JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST PUSH2 0x1E2 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x29D SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EC JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x158C JUMP JUMPDEST PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xC24 JUMP JUMPDEST PUSH2 0x1E2 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xC38 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EC JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0xC63 JUMP JUMPDEST PUSH2 0x1E2 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x393 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1EC JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x3B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DC JUMP JUMPDEST PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x327 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1E2 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x327 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0xE56 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x160C JUMP JUMPDEST PUSH2 0xF81 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0xFA0 DUP2 JUMP JUMPDEST PUSH2 0x421 PUSH2 0xFFA JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 GT ISZERO PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x736574574554485065725365636F6E643A20746F6F206D616E79205745544873 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x490 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH2 0x4E1 PUSH2 0xFFA JUMP JUMPDEST PUSH2 0xFA0 DUP2 GT ISZERO PUSH2 0x533 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6164643A20746F6F206D616E7920616C6C6F6320706F696E7473212100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47F JUMP JUMPDEST PUSH2 0x53B PUSH2 0xBFD JUMP JUMPDEST DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x54F JUMPI PUSH2 0x54F PUSH2 0x1629 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x1655 JUMP JUMPDEST PUSH2 0x578 SWAP2 SWAP1 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x592 JUMPI PUSH2 0x592 PUSH2 0x1629 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x5B3 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x5C0 SWAP1 DUP3 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63E SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x64A PUSH2 0xFFA JUMP JUMPDEST PUSH2 0xFA0 DUP3 GT ISZERO PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6164643A20746F6F206D616E7920616C6C6F6320706F696E7473212100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47F JUMP JUMPDEST PUSH2 0x6A5 DUP2 PUSH2 0x1060 JUMP JUMPDEST PUSH2 0x6AD PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 TIMESTAMP GT PUSH2 0x6FC JUMPI PUSH32 0x0 PUSH2 0x6FE JUMP JUMPDEST TIMESTAMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH2 0x70E SWAP1 DUP5 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 DUP6 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE SWAP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x4 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE SWAP3 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 DUP4 ADD SSTORE MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D41 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D42 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x83D JUMPI PUSH2 0x83D PUSH2 0x1629 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP4 GT ISZERO PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47F JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH2 0x8F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1DDA5D1A191C985DC81B9BDD081BDC195B9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47F JUMP JUMPDEST PUSH2 0x8FC DUP5 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x936 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x930 PUSH5 0xE8D4A51000 PUSH2 0x92A DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x110A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1116 JUMP JUMPDEST SWAP1 PUSH2 0x1122 JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH2 0x945 SWAP1 DUP6 PUSH2 0x1122 JUMP JUMPDEST DUP1 DUP4 SSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x962 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE DUP1 ISZERO PUSH2 0x977 JUMPI PUSH2 0x977 CALLER DUP3 PUSH2 0x112E JUMP JUMPDEST DUP3 SLOAD PUSH2 0x98D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP7 PUSH2 0x125C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP6 SWAP1 CALLER SWAP1 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9E5 JUMPI PUSH2 0x9E5 PUSH2 0x1629 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0xA04 JUMPI POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA70 SWAP2 SWAP1 PUSH2 0x16DD JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA82 JUMPI POP TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA92 DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xC63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xABF PUSH1 0x8 SLOAD PUSH2 0x92A DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0xAB9 PUSH1 0x4 SLOAD DUP8 PUSH2 0x110A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x110A JUMP JUMPDEST SWAP1 POP PUSH2 0xAE2 PUSH2 0xAD7 DUP5 PUSH2 0x92A DUP5 PUSH5 0xE8D4A51000 PUSH2 0x110A JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE POP POP TIMESTAMP PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xB1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB37 JUMPI PUSH2 0xB37 PUSH2 0x1629 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP4 MSTORE DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x4 SWAP1 SWAP4 MUL ADD SWAP4 POP SWAP1 SWAP2 SWAP1 PUSH2 0xB95 SWAP1 PUSH2 0xB83 PUSH2 0x3E8 PUSH2 0x92A DUP6 PUSH2 0x2BC PUSH2 0x110A JUMP JUMPDEST DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0xBBC PUSH2 0xBAA PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xB83 PUSH2 0x3E8 PUSH2 0x92A DUP6 PUSH2 0x12C PUSH2 0x110A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x63E JUMPI PUSH2 0xC14 DUP2 PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0xC1D DUP2 PUSH2 0x16F6 JUMP JUMPDEST SWAP1 POP PUSH2 0xC03 JUMP JUMPDEST PUSH2 0xC2C PUSH2 0xFFA JUMP JUMPDEST PUSH2 0xC36 PUSH1 0x0 PUSH2 0x12BF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC40 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC54 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP4 GT PUSH2 0xCB2 JUMPI PUSH32 0x0 PUSH2 0xCB4 JUMP JUMPDEST DUP3 JUMPDEST SWAP3 POP PUSH32 0x0 DUP3 LT ISZERO PUSH2 0xCE6 JUMPI POP PUSH1 0x0 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0xCF0 DUP4 DUP4 PUSH2 0x1655 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD0F JUMPI PUSH2 0xD0F PUSH2 0x1629 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP8 MSTORE SWAP4 MSTORE DUP1 DUP6 KECCAK256 PUSH1 0x4 SWAP5 DUP6 MUL SWAP1 SWAP3 ADD PUSH1 0x3 DUP2 ADD SLOAD DUP2 SLOAD SWAP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP7 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP1 SWAP7 POP SWAP2 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDAF SWAP2 SWAP1 PUSH2 0x16DD JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0xDC3 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE23 JUMPI PUSH1 0x0 PUSH2 0xDD8 DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xC63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDFF PUSH1 0x8 SLOAD PUSH2 0x92A DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xAB9 PUSH1 0x4 SLOAD DUP8 PUSH2 0x110A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xE1E PUSH2 0xE17 DUP5 PUSH2 0x92A DUP5 PUSH5 0xE8D4A51000 PUSH2 0x110A JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x1054 JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0xE4B DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x930 PUSH5 0xE8D4A51000 PUSH2 0x92A DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x110A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xE79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xE96 JUMPI PUSH2 0xE96 PUSH2 0x1629 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0xEC7 DUP5 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF5 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x930 PUSH5 0xE8D4A51000 PUSH2 0x92A DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x110A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH2 0xF04 SWAP1 DUP6 PUSH2 0x1054 JUMP JUMPDEST DUP1 DUP4 SSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0xF21 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE DUP1 ISZERO PUSH2 0xF36 JUMPI PUSH2 0xF36 CALLER DUP3 PUSH2 0x112E JUMP JUMPDEST DUP3 SLOAD PUSH2 0xF4D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP8 PUSH2 0x130F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP6 SWAP1 CALLER SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH1 0x20 ADD PUSH2 0x9BD JUMP JUMPDEST PUSH2 0xF89 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x47F JUMP JUMPDEST PUSH2 0xFF7 DUP2 PUSH2 0x12BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF0 DUP3 DUP5 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1105 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x108B JUMPI PUSH2 0x108B PUSH2 0x1629 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x10F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6164643A20706F6F6C20616C7265616479206578697374732121212100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47F JUMP JUMPDEST DUP1 PUSH2 0x10FD DUP2 PUSH2 0x16F6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1066 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF0 DUP3 DUP5 PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF0 DUP3 DUP5 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF0 DUP3 DUP5 PUSH2 0x1655 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1177 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x119B SWAP2 SWAP1 PUSH2 0x16DD JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1223 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x121D SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1105 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x121D SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x1288 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x139C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1419 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1105 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x13BA SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH2 0x1105 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x47F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1428 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1432 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x47F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x14EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1506 SWAP2 SWAP1 PUSH2 0x177E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1543 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xE4B DUP3 DUP3 DUP7 PUSH1 0x60 DUP4 ISZERO PUSH2 0x1562 JUMPI POP DUP2 PUSH2 0x142B JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1572 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x179A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1601 DUP2 PUSH2 0x15C7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x161E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x142B DUP2 PUSH2 0x15C7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1667 JUMPI PUSH2 0x1667 PUSH2 0x163F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x167F JUMPI PUSH2 0x167F PUSH2 0x163F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x142B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x170A JUMPI PUSH2 0x170A PUSH2 0x163F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x172B JUMPI PUSH2 0x172B PUSH2 0x163F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x174D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x176D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1755 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x121D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1790 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x17B9 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x87 GASLIMIT CREATE2 0xE3 0x4F AND PUSH8 0xF67B3B4D47CE1317 0xED 0xCC PUSH18 0x5AB6AA394D8BD275AC968B4E7C64736F6C63 NUMBER STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "372:9910:8:-:0;;;1746:71;;;-1:-1:-1;;;;;;1746:71:8;1774:42;1746:71;;;;1952:39;;;;2458:34;;2590:32;;;-1:-1:-1;;2590:32:8;;;2881:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:6;936:18:0;:32::i;:::-;1701:1:1;1806:22;;2975:13:8;:30;;;;3016:22;;372:9910;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:245:9:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;-1:-1:-1;;193:16:9;;249:2;234:18;;;228:25;193:16;;228:25;;-1:-1:-1;14:245:9:o;:::-;372:9910:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MaxAllocPoint_1228": {
									"entryPoint": null,
									"id": 1228,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WETHPerSecond_1219": {
									"entryPoint": null,
									"id": 1219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WETH_1215": {
									"entryPoint": null,
									"id": 1215,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_546": {
									"entryPoint": 4935,
									"id": 546,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 4090,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_854": {
									"entryPoint": null,
									"id": 854,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 4799,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1040": {
									"entryPoint": 4180,
									"id": 1040,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@add_1453": {
									"entryPoint": 1602,
									"id": 1453,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@checkForDuplicate_1399": {
									"entryPoint": 4192,
									"id": 1399,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@closeWithdraw_1334": {
									"entryPoint": 3128,
									"id": 1334,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1845": {
									"entryPoint": 3670,
									"id": 1845,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@devaddr_1217": {
									"entryPoint": null,
									"id": 1217,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_1085": {
									"entryPoint": 4374,
									"id": 1085,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@emergencyWithdraw_2044": {
									"entryPoint": 2807,
									"id": 2044,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_706": {
									"entryPoint": 5170,
									"id": 706,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_636": {
									"entryPoint": 5145,
									"id": 636,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getMultiplier_1521": {
									"entryPoint": 3171,
									"id": 1521,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_565": {
									"entryPoint": null,
									"id": 565,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@massUpdatePools_1648": {
									"entryPoint": 3069,
									"id": 1648,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxWETHPerSecond_1225": {
									"entryPoint": null,
									"id": 1225,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_1070": {
									"entryPoint": 4362,
									"id": 1070,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@openWithdraw_1297": {
									"entryPoint": 3148,
									"id": 1297,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingWETH_1623": {
									"entryPoint": 3321,
									"id": 1623,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolInfo_1232": {
									"entryPoint": 1173,
									"id": 1232,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_1343": {
									"entryPoint": null,
									"id": 1343,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 3108,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_324": {
									"entryPoint": 4879,
									"id": 324,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_298": {
									"entryPoint": 4700,
									"id": 298,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeWETHTransfer_2082": {
									"entryPoint": 4398,
									"id": 2082,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setWETHPerSecond_1365": {
									"entryPoint": 1049,
									"id": 1365,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@set_1491": {
									"entryPoint": 1241,
									"id": 1491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@startTime_1244": {
									"entryPoint": null,
									"id": 1244,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1055": {
									"entryPoint": 4386,
									"id": 1055,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@supplyRewards_1324": {
									"entryPoint": 1451,
									"id": 1324,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@totalAllocPoint_1242": {
									"entryPoint": null,
									"id": 1242,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalWETHdistributed_1222": {
									"entryPoint": null,
									"id": 1222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 3969,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePool_1739": {
									"entryPoint": 2512,
									"id": 1739,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_1239": {
									"entryPoint": null,
									"id": 1239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_841": {
									"entryPoint": null,
									"id": 841,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1960": {
									"entryPoint": 2045,
									"id": 1960,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawable_1247": {
									"entryPoint": null,
									"id": 1247,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$230": {
									"entryPoint": 5596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$230__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$230_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25e30018472524969248ddfa25a1def4e21dfdf9d9e4b18708967da9b04753f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a9c5e392159a70bed7873f8fbc4493f584797ead4debdb661e6bbb41606e090__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b4084b27a50bbf7dc8ffe5d4d7a26746aaced5cced0fabccd840b9ee16262550__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d1b2d8a5732f8d899e4dac6c35c6d476f53318f917f5df980766ae88f15c30ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5970,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 5878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5695,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5673,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_contract_IERC20": {
									"entryPoint": 5575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10253:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:9"
															},
															"nodeType": "YulIf",
															"src": "94:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:9",
														"type": ""
													}
												],
												"src": "14:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "310:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "269:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "291:4:9",
														"type": ""
													}
												],
												"src": "199:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "580:232:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "590:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "602:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "613:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "598:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "598:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "590:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "633:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "648:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "664:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "669:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "660:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "660:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "673:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "656:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "656:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "644:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "644:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "626:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "697:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "708:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "693:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "693:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "713:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "686:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "686:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "686:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "740:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "736:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "736:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "756:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "729:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "729:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "783:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "794:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "779:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "779:18:9"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "799:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "772:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "772:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "772:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$230_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "525:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "536:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "544:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "552:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "560:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "571:4:9",
														"type": ""
													}
												],
												"src": "381:431:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "904:161:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "950:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "959:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "962:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "952:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "952:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "952:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "925:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "934:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "921:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "921:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "946:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "917:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "917:32:9"
															},
															"nodeType": "YulIf",
															"src": "914:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "975:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "998:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "985:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "985:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "975:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1017:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1044:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1055:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1040:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1040:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1027:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1027:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1017:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "862:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "873:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "885:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "893:6:9",
														"type": ""
													}
												],
												"src": "817:248:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1123:86:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1146:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1157:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1172:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1177:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1168:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1168:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1181:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1164:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1164:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1153:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1153:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1143:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1143:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1136:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1136:50:9"
															},
															"nodeType": "YulIf",
															"src": "1133:70:9"
														}
													]
												},
												"name": "validator_revert_contract_IERC20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1112:5:9",
														"type": ""
													}
												],
												"src": "1070:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1315:236:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1361:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1370:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1373:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1363:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1363:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1363:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1336:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1345:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1332:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1357:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1328:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:32:9"
															},
															"nodeType": "YulIf",
															"src": "1325:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1386:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1409:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1396:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1396:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1386:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1428:45:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1458:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1469:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1454:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1454:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1441:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1441:32:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1432:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1515:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "1482:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1482:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1482:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1530:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1540:5:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1530:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$230",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1273:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1284:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1296:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1304:6:9",
														"type": ""
													}
												],
												"src": "1214:337:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1651:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1661:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1673:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1684:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1669:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1661:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1703:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1728:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1721:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1721:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1714:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1714:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1696:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1696:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1620:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1631:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1642:4:9",
														"type": ""
													}
												],
												"src": "1556:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1849:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1859:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1871:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1882:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1867:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1867:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1859:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1901:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1916:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1932:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1937:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1928:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1928:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1941:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1924:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1924:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1912:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1912:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1894:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1894:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1894:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1818:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1829:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1840:4:9",
														"type": ""
													}
												],
												"src": "1748:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2043:236:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2089:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2098:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2101:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2091:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2091:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2091:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2064:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2073:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2060:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2060:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2085:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2056:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:32:9"
															},
															"nodeType": "YulIf",
															"src": "2053:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2114:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2137:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2124:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2124:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2114:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2156:45:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2186:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2197:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2182:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2182:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2169:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2169:32:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2160:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2243:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "2210:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2210:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2210:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2258:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2268:5:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2258:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2001:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2012:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2024:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2032:6:9",
														"type": ""
													}
												],
												"src": "1956:323:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2413:119:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2423:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2435:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2446:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2423:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2465:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2458:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2458:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2458:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2503:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2514:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2499:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2519:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2492:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2492:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2492:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2374:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2385:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2393:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2404:4:9",
														"type": ""
													}
												],
												"src": "2284:248:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2652:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2662:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2674:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2685:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2670:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2670:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2662:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2704:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2719:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2735:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2740:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2731:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2731:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2744:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2727:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2727:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2715:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2715:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2697:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2697:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2697:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$230__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2621:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2632:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2643:4:9",
														"type": ""
													}
												],
												"src": "2537:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2829:185:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2875:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2884:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2887:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2877:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2877:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2877:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2850:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2859:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2846:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2846:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2871:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2842:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2842:32:9"
															},
															"nodeType": "YulIf",
															"src": "2839:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2900:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2926:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2913:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2913:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2904:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2978:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "2945:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2945:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2945:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3003:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2795:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2806:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2818:6:9",
														"type": ""
													}
												],
												"src": "2759:255:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3193:223:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3210:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3221:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3203:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3203:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3203:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3244:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3255:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3240:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3240:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3260:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3233:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3233:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3233:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3283:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3294:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3279:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3279:18:9"
																	},
																	{
																		"hexValue": "736574574554485065725365636f6e643a20746f6f206d616e79205745544873",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3299:34:9",
																		"type": "",
																		"value": "setWETHPerSecond: too many WETHs"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3272:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3272:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3272:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3354:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3365:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3350:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3350:18:9"
																	},
																	{
																		"hexValue": "21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3370:3:9",
																		"type": "",
																		"value": "!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3343:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3343:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3383:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3395:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3406:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3391:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3391:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3383:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b4084b27a50bbf7dc8ffe5d4d7a26746aaced5cced0fabccd840b9ee16262550__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3170:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3184:4:9",
														"type": ""
													}
												],
												"src": "3019:397:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:178:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3612:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3623:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3605:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3605:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3605:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3646:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3657:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3642:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3642:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3662:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3635:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3635:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3635:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3685:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3696:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3681:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3681:18:9"
																	},
																	{
																		"hexValue": "6164643a20746f6f206d616e7920616c6c6f6320706f696e74732121",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3701:30:9",
																		"type": "",
																		"value": "add: too many alloc points!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3674:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3674:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3674:58:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3741:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d1b2d8a5732f8d899e4dac6c35c6d476f53318f917f5df980766ae88f15c30ef__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3572:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3586:4:9",
														"type": ""
													}
												],
												"src": "3421:352:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3810:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3827:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3834:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3839:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3830:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3830:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3870:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3891:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3894:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3884:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3884:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "3778:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3942:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3966:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3971:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3962:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3962:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3952:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3952:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3952:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3999:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4002:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3992:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3992:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3992:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4023:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4026:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4016:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4016:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4016:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3910:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4091:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4113:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4115:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4115:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4115:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4107:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4110:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4104:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4104:8:9"
															},
															"nodeType": "YulIf",
															"src": "4101:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4144:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4156:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4159:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4073:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4076:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4082:4:9",
														"type": ""
													}
												],
												"src": "4042:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4220:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4247:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4249:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4249:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4249:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4236:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4243:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4239:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4239:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4233:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4233:13:9"
															},
															"nodeType": "YulIf",
															"src": "4230:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4278:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4289:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4292:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4285:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4285:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4278:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4203:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4206:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4212:3:9",
														"type": ""
													}
												],
												"src": "4172:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4462:218:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4472:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4484:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4495:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4480:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4480:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4472:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4507:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4525:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4530:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4521:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4521:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4534:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4517:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4517:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4511:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4552:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4567:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4575:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4563:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4563:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4545:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4545:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4545:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4599:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4610:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4595:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4595:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4619:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4627:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4615:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4588:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4588:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4588:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4651:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4662:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4647:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4647:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4667:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4640:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4640:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4640:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4415:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4426:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4434:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4442:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4453:4:9",
														"type": ""
													}
												],
												"src": "4305:375:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4763:199:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4809:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4818:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4821:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4811:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4811:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4811:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4784:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4793:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4780:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4780:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4805:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4776:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:32:9"
															},
															"nodeType": "YulIf",
															"src": "4773:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4834:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4853:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4847:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4838:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4916:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4925:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4928:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4918:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4918:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4918:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4885:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4906:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4899:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4899:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4892:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4892:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4882:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4882:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4875:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4875:40:9"
															},
															"nodeType": "YulIf",
															"src": "4872:60:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4941:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4951:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4941:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4729:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4740:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4752:6:9",
														"type": ""
													}
												],
												"src": "4685:277:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5141:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5158:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5169:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5151:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5151:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5151:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5192:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5203:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5188:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5188:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5208:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5181:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5181:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5181:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5231:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5242:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5227:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5227:18:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5247:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5220:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5220:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5220:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5290:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5302:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5298:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5298:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5290:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5118:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5132:4:9",
														"type": ""
													}
												],
												"src": "4967:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5501:168:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5518:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5529:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5511:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5511:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5511:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5552:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5563:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5548:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5548:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5568:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5541:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5541:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5541:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5591:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5602:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5587:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5587:18:9"
																	},
																	{
																		"hexValue": "77697468647261773a206e6f7420676f6f64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5607:20:9",
																		"type": "",
																		"value": "withdraw: not good"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5580:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5580:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5580:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5637:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5649:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5660:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5645:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5645:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5637:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5478:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5492:4:9",
														"type": ""
													}
												],
												"src": "5327:342:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5848:169:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5865:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5876:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5858:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5858:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5899:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5910:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5895:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5895:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5915:2:9",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5888:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5888:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5888:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5938:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5949:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5934:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5934:18:9"
																	},
																	{
																		"hexValue": "7769746864726177206e6f74206f70656e6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5954:21:9",
																		"type": "",
																		"value": "withdraw not opened"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5927:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5927:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5927:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5985:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5997:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6008:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5993:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5993:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5985:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25e30018472524969248ddfa25a1def4e21dfdf9d9e4b18708967da9b04753f6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5825:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5839:4:9",
														"type": ""
													}
												],
												"src": "5674:343:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6103:103:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6149:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6158:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6161:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6151:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6151:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6151:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6124:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6133:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6120:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6120:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6145:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6116:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6116:32:9"
															},
															"nodeType": "YulIf",
															"src": "6113:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6174:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6190:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6184:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6184:16:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6174:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6069:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6080:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6092:6:9",
														"type": ""
													}
												],
												"src": "6022:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6258:88:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6289:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6291:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6291:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6291:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6274:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6285:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6281:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6281:6:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6271:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6271:17:9"
															},
															"nodeType": "YulIf",
															"src": "6268:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6320:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6331:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6338:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6327:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6327:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6320:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6240:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6250:3:9",
														"type": ""
													}
												],
												"src": "6211:135:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6525:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6542:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6553:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6535:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6535:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6535:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6576:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6587:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6572:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6572:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6592:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6565:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6565:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6565:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6615:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6626:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6611:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6611:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6631:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6604:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6604:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6604:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6686:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6697:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6682:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6682:18:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6702:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6675:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6675:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6675:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6720:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6732:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6743:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6728:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6728:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6720:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6502:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6516:4:9",
														"type": ""
													}
												],
												"src": "6351:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6932:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6949:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6960:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6942:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6942:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6942:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6983:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6994:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6979:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6979:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6999:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6972:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6972:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6972:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7022:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7033:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7018:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7018:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7038:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7011:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7011:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7011:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7082:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7094:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7105:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7090:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7090:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7082:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6909:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6923:4:9",
														"type": ""
													}
												],
												"src": "6758:356:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7293:178:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7310:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7321:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7303:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7303:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7303:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7344:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7355:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7340:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7340:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7360:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7333:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7333:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7333:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7383:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7394:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7379:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7379:18:9"
																	},
																	{
																		"hexValue": "6164643a20706f6f6c20616c72656164792065786973747321212121",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7399:30:9",
																		"type": "",
																		"value": "add: pool already exists!!!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7372:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7372:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7372:58:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7439:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7451:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7462:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7447:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7447:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7439:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a9c5e392159a70bed7873f8fbc4493f584797ead4debdb661e6bbb41606e090__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7270:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7284:4:9",
														"type": ""
													}
												],
												"src": "7119:352:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7528:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7587:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7589:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7589:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7589:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7559:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7552:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7552:9:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7545:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7545:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7567:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7578:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "7574:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7574:6:9"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7582:1:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7570:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7570:14:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7564:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7564:21:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7541:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7541:45:9"
															},
															"nodeType": "YulIf",
															"src": "7538:71:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7618:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7633:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7636:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7629:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7629:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7618:7:9"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7507:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7510:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7516:7:9",
														"type": ""
													}
												],
												"src": "7476:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7695:171:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7726:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7747:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7754:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7759:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7750:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7750:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7740:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7740:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7740:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7791:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7794:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7784:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7784:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7784:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7819:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7822:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7812:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7812:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7812:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7715:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7708:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7708:9:9"
															},
															"nodeType": "YulIf",
															"src": "7705:132:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7846:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7855:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7858:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7851:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7851:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7846:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7680:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7683:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7689:1:9",
														"type": ""
													}
												],
												"src": "7649:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8000:145:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8010:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8022:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8033:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8018:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8018:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8010:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8052:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8067:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8083:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8088:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8079:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8079:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8092:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8075:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8075:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8063:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8063:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8045:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8045:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8045:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8116:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8127:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8112:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8112:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8132:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8105:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8105:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8105:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7961:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7972:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7980:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7991:4:9",
														"type": ""
													}
												],
												"src": "7871:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8324:232:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8341:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8352:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8334:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8334:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8334:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8375:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8386:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8371:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8371:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8391:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8364:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8364:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8364:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8414:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8425:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8410:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8410:18:9"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8430:34:9",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8403:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8403:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8403:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8485:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8496:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8481:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8481:18:9"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8501:12:9",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8474:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8474:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8474:40:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8523:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8535:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8546:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8531:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8531:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8523:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8301:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8315:4:9",
														"type": ""
													}
												],
												"src": "8150:406:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8735:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8752:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8763:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8745:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8745:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8745:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8786:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8797:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8782:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8782:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8802:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8775:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8775:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8775:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8825:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8836:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8821:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8821:18:9"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8841:34:9",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8814:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8814:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8814:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8896:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8907:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8892:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8892:18:9"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8912:8:9",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8885:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8885:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8885:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8930:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8942:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8953:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8938:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8938:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8930:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8712:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8726:4:9",
														"type": ""
													}
												],
												"src": "8561:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9142:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9159:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9170:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9152:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9152:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9152:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9193:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9204:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9189:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9189:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9209:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9182:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9182:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9182:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9232:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9243:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9228:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9228:18:9"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9248:31:9",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9221:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9221:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9221:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9289:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9301:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9312:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9297:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9297:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9289:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9119:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9133:4:9",
														"type": ""
													}
												],
												"src": "8968:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9379:205:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9389:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9398:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9393:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9458:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9483:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9488:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9479:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9479:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "9502:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9507:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9498:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9498:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9492:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9492:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9472:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9472:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9472:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9419:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9422:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9416:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9416:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9430:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9432:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9441:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9444:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9437:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9437:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9432:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9412:3:9",
																"statements": []
															},
															"src": "9408:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9547:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9560:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "9565:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9556:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9556:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9574:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9549:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9549:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9549:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9536:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9539:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9533:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9533:13:9"
															},
															"nodeType": "YulIf",
															"src": "9530:48:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9357:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "9362:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9367:6:9",
														"type": ""
													}
												],
												"src": "9326:258:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9726:137:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9736:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9756:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9750:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9750:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9740:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9798:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9806:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9794:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9794:17:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9813:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9818:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "9772:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9772:53:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9772:53:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9834:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9845:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9850:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9841:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9841:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9834:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9702:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9707:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9718:3:9",
														"type": ""
													}
												],
												"src": "9589:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9989:262:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10006:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10017:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9999:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9999:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9999:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10029:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10049:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10043:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10043:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10033:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10076:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10087:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10072:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10072:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10092:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10065:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10065:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10065:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10134:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10142:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10130:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10130:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10151:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10162:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10147:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10147:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10167:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10108:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10108:66:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10108:66:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10183:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10199:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "10218:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10226:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "10214:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10214:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10235:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "10231:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10231:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "10210:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10210:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10195:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10195:45:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10191:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10191:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10183:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9958:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9969:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9980:4:9",
														"type": ""
													}
												],
												"src": "9868:383:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$230_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$230(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$230__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_b4084b27a50bbf7dc8ffe5d4d7a26746aaced5cced0fabccd840b9ee16262550__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"setWETHPerSecond: too many WETHs\")\n        mstore(add(headStart, 96), \"!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d1b2d8a5732f8d899e4dac6c35c6d476f53318f917f5df980766ae88f15c30ef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"add: too many alloc points!!\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"withdraw: not good\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_25e30018472524969248ddfa25a1def4e21dfdf9d9e4b18708967da9b04753f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"withdraw not opened\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a9c5e392159a70bed7873f8fbc4493f584797ead4debdb661e6bbb41606e090__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"add: pool already exists!!!!\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1244": [
									{
										"length": 32,
										"start": 744
									},
									{
										"length": 32,
										"start": 1713
									},
									{
										"length": 32,
										"start": 1752
									},
									{
										"length": 32,
										"start": 3175
									},
									{
										"length": 32,
										"start": 3214
									},
									{
										"length": 32,
										"start": 3256
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101c45760003560e01c806378e97925116100f95780639bd16d7b11610097578063d49e77cd11610071578063d49e77cd146103d7578063e2bbb158146103ea578063f2fde38b146103fd578063f4b83c4c1461041057600080fd5b80639bd16d7b146103a8578063ad5c4648146103bb578063b9ac9686146103ce57600080fd5b80638da5cb5b116100d35780638da5cb5b1461031a5780638dbb1e3a1461033f5780639112f2b21461035257806393f1a40b1461036157600080fd5b806378e97925146102e35780637b020dad1461030a578063845105e21461031257600080fd5b8063412490611161016657806351eb05a61161014057806351eb05a6146102ad5780635312ea8e146102c0578063630b5ba1146102d3578063715018a6146102db57600080fd5b80634124906114610274578063441a3e701461027d578063501883011461029057600080fd5b806317caf6f1116101a257806317caf6f1146102325780631ab06ee51461023b5780632377b2a81461024e5780632b8bbbe81461026157600080fd5b80630332e936146101c9578063081e3eda146101de5780631526fe27146101f5575b600080fd5b6101dc6101d736600461158c565b610419565b005b6006545b6040519081526020015b60405180910390f35b61020861020336600461158c565b610495565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101ec565b6101e260085481565b6101dc6102493660046115a5565b6104d9565b6101dc61025c36600461158c565b6105ab565b6101dc61026f3660046115dc565b610642565b6101e260045481565b6101dc61028b3660046115a5565b6107fd565b60095461029d9060ff1681565b60405190151581526020016101ec565b6101dc6102bb36600461158c565b6109d0565b6101dc6102ce36600461158c565b610af7565b6101dc610bfd565b6101dc610c24565b6101e27f000000000000000000000000000000000000000000000000000000000000000081565b6101dc610c38565b6101dc610c4c565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101ec565b6101e261034d3660046115a5565b610c63565b6101e2670de0b6b3a764000081565b61039361036f3660046115dc565b60076020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016101ec565b6101e26103b63660046115dc565b610cf9565b600254610327906001600160a01b031681565b6101e260055481565b600354610327906001600160a01b031681565b6101dc6103f83660046115a5565b610e56565b6101dc61040b36600461160c565b610f81565b6101e2610fa081565b610421610ffa565b670de0b6b3a76400008111156104885760405162461bcd60e51b815260206004820152602160248201527f736574574554485065725365636f6e643a20746f6f206d616e792057455448736044820152602160f81b60648201526084015b60405180910390fd5b610490610bfd565b600455565b600681815481106104a557600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b6104e1610ffa565b610fa08111156105335760405162461bcd60e51b815260206004820152601c60248201527f6164643a20746f6f206d616e7920616c6c6f6320706f696e7473212100000000604482015260640161047f565b61053b610bfd565b806006838154811061054f5761054f611629565b90600052602060002090600402016001015460085461056e9190611655565b610578919061166c565b600881905550806006838154811061059257610592611629565b9060005260206000209060040201600101819055505050565b6105b3610ffa565b6005546105c09082611054565b6005556002546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561061a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063e9190611684565b5050565b61064a610ffa565b610fa082111561069c5760405162461bcd60e51b815260206004820152601c60248201527f6164643a20746f6f206d616e7920616c6c6f6320706f696e7473212100000000604482015260640161047f565b6106a581611060565b6106ad610bfd565b60007f000000000000000000000000000000000000000000000000000000000000000042116106fc577f00000000000000000000000000000000000000000000000000000000000000006106fe565b425b60085490915061070e9084611054565b600855604080516080810182526001600160a01b0393841681526020810194855290810191825260006060820181815260068054600181018255925291517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600490920291820180546001600160a01b031916919095161790935592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40830155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4182015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4290910155565b600260015414156108205760405162461bcd60e51b815260040161047f906116a6565b600260018190555060006006838154811061083d5761083d611629565b6000918252602080832086845260078252604080852033865290925292208054600490920290920192508311156108ab5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015260640161047f565b60095460ff166108f35760405162461bcd60e51b81526020600482015260136024820152721dda5d1a191c985dc81b9bdd081bdc195b9959606a1b604482015260640161047f565b6108fc846109d0565b6000610936826001015461093064e8d4a5100061092a8760030154876000015461110a90919063ffffffff16565b90611116565b90611122565b82549091506109459085611122565b80835560038401546109629164e8d4a510009161092a919061110a565b6001830155801561097757610977338261112e565b825461098d906001600160a01b0316338661125c565b604051848152859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906020015b60405180910390a3505060018055505050565b6000600682815481106109e5576109e5611629565b9060005260206000209060040201905080600201544211610a04575050565b80546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7091906116dd565b905080610a8257504260029091015550565b6000610a92836002015442610c63565b90506000610abf60085461092a8660010154610ab96004548761110a90919063ffffffff16565b9061110a565b9050610ae2610ad78461092a8464e8d4a5100061110a565b600386015490611054565b60038501555050426002909201919091555050565b60026001541415610b1a5760405162461bcd60e51b815260040161047f906116a6565b6002600181905550600060068281548110610b3757610b37611629565b600091825260208083208584526007825260408085203380875293528420805485825560018201959095556004909302019350909190610b9590610b836103e861092a856102bc61110a565b85546001600160a01b0316919061125c565b610bbc610baa6000546001600160a01b031690565b610b836103e861092a8561012c61110a565b604051818152849033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a35050600180555050565b60065460005b8181101561063e57610c14816109d0565b610c1d816116f6565b9050610c03565b610c2c610ffa565b610c3660006112bf565b565b610c40610ffa565b6009805460ff19169055565b610c54610ffa565b6009805460ff19166001179055565b60007f00000000000000000000000000000000000000000000000000000000000000008311610cb2577f0000000000000000000000000000000000000000000000000000000000000000610cb4565b825b92507f0000000000000000000000000000000000000000000000000000000000000000821015610ce657506000610cf3565b610cf08383611655565b90505b92915050565b60008060068481548110610d0f57610d0f611629565b600091825260208083208784526007825260408085206001600160a01b038981168752935280852060049485029092016003810154815492516370a0823160e01b8152309681019690965290965091949193919216906370a0823190602401602060405180830381865afa158015610d8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610daf91906116dd565b9050836002015442118015610dc357508015155b15610e23576000610dd8856002015442610c63565b90506000610dff60085461092a8860010154610ab96004548761110a90919063ffffffff16565b9050610e1e610e178461092a8464e8d4a5100061110a565b8590611054565b935050505b610e4b836001015461093064e8d4a5100061092a86886000015461110a90919063ffffffff16565b979650505050505050565b60026001541415610e795760405162461bcd60e51b815260040161047f906116a6565b6002600181905550600060068381548110610e9657610e96611629565b60009182526020808320868452600782526040808520338652909252922060049091029091019150610ec7846109d0565b6000610ef5826001015461093064e8d4a5100061092a8760030154876000015461110a90919063ffffffff16565b8254909150610f049085611054565b8083556003840154610f219164e8d4a510009161092a919061110a565b60018301558015610f3657610f36338261112e565b8254610f4d906001600160a01b031633308761130f565b604051848152859033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15906020016109bd565b610f89610ffa565b6001600160a01b038116610fee5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161047f565b610ff7816112bf565b50565b6000546001600160a01b03163314610c365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161047f565b6000610cf0828461166c565b60065460005b8181101561110557826001600160a01b03166006828154811061108b5761108b611629565b60009182526020909120600490910201546001600160a01b031614156110f35760405162461bcd60e51b815260206004820152601c60248201527f6164643a20706f6f6c20616c7265616479206578697374732121212100000000604482015260640161047f565b806110fd816116f6565b915050611066565b505050565b6000610cf08284611711565b6000610cf08284611730565b6000610cf08284611655565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611177573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119b91906116dd565b9050808211156112235760025460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490529091169063a9059cbb906044015b6020604051808303816000875af11580156111f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121d9190611684565b50505050565b60025460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb906044016111da565b6040516001600160a01b03831660248201526044810182905261110590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611347565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b038085166024830152831660448201526064810182905261121d9085906323b872dd60e01b90608401611288565b600061139c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114199092919063ffffffff16565b80519091501561110557808060200190518101906113ba9190611684565b6111055760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161047f565b60606114288484600085611432565b90505b9392505050565b6060824710156114935760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161047f565b6001600160a01b0385163b6114ea5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161047f565b600080866001600160a01b03168587604051611506919061177e565b60006040518083038185875af1925050503d8060008114611543576040519150601f19603f3d011682016040523d82523d6000602084013e611548565b606091505b5091509150610e4b8282866060831561156257508161142b565b8251156115725782518084602001fd5b8160405162461bcd60e51b815260040161047f919061179a565b60006020828403121561159e57600080fd5b5035919050565b600080604083850312156115b857600080fd5b50508035926020909101359150565b6001600160a01b0381168114610ff757600080fd5b600080604083850312156115ef57600080fd5b823591506020830135611601816115c7565b809150509250929050565b60006020828403121561161e57600080fd5b813561142b816115c7565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156116675761166761163f565b500390565b6000821982111561167f5761167f61163f565b500190565b60006020828403121561169657600080fd5b8151801515811461142b57600080fd5b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6000602082840312156116ef57600080fd5b5051919050565b600060001982141561170a5761170a61163f565b5060010190565b600081600019048311821515161561172b5761172b61163f565b500290565b60008261174d57634e487b7160e01b600052601260045260246000fd5b500490565b60005b8381101561176d578181015183820152602001611755565b8381111561121d5750506000910152565b60008251611790818460208701611752565b9190910192915050565b60208152600082518060208401526117b9816040850160208701611752565b601f01601f1916919091016040019291505056fea2646970667358221220608745f5e34f1667f67b3b4d47ce1317edcc715ab6aa394d8bd275ac968b4e7c64736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78E97925 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0x9BD16D7B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD49E77CD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD49E77CD EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xF4B83C4C EQ PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9BD16D7B EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xB9AC9686 EQ PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x9112F2B2 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x78E97925 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x7B020DAD EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x845105E2 EQ PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41249061 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41249061 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x50188301 EQ PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17CAF6F1 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x2377B2A8 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x2B8BBBE8 EQ PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x332E936 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x1F5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1EC JUMP JUMPDEST PUSH2 0x1E2 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x15DC JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST PUSH2 0x1E2 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x29D SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EC JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x158C JUMP JUMPDEST PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xC24 JUMP JUMPDEST PUSH2 0x1E2 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xC38 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EC JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0xC63 JUMP JUMPDEST PUSH2 0x1E2 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x393 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1EC JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x3B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DC JUMP JUMPDEST PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x327 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1E2 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x327 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0xE56 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x160C JUMP JUMPDEST PUSH2 0xF81 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0xFA0 DUP2 JUMP JUMPDEST PUSH2 0x421 PUSH2 0xFFA JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 GT ISZERO PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x736574574554485065725365636F6E643A20746F6F206D616E79205745544873 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x490 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH2 0x4E1 PUSH2 0xFFA JUMP JUMPDEST PUSH2 0xFA0 DUP2 GT ISZERO PUSH2 0x533 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6164643A20746F6F206D616E7920616C6C6F6320706F696E7473212100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47F JUMP JUMPDEST PUSH2 0x53B PUSH2 0xBFD JUMP JUMPDEST DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x54F JUMPI PUSH2 0x54F PUSH2 0x1629 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x1655 JUMP JUMPDEST PUSH2 0x578 SWAP2 SWAP1 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x592 JUMPI PUSH2 0x592 PUSH2 0x1629 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x5B3 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x5C0 SWAP1 DUP3 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63E SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x64A PUSH2 0xFFA JUMP JUMPDEST PUSH2 0xFA0 DUP3 GT ISZERO PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6164643A20746F6F206D616E7920616C6C6F6320706F696E7473212100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47F JUMP JUMPDEST PUSH2 0x6A5 DUP2 PUSH2 0x1060 JUMP JUMPDEST PUSH2 0x6AD PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 TIMESTAMP GT PUSH2 0x6FC JUMPI PUSH32 0x0 PUSH2 0x6FE JUMP JUMPDEST TIMESTAMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH2 0x70E SWAP1 DUP5 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 DUP6 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE SWAP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x4 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE SWAP3 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 DUP4 ADD SSTORE MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D41 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D42 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x83D JUMPI PUSH2 0x83D PUSH2 0x1629 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP4 GT ISZERO PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47F JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH2 0x8F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1DDA5D1A191C985DC81B9BDD081BDC195B9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47F JUMP JUMPDEST PUSH2 0x8FC DUP5 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x936 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x930 PUSH5 0xE8D4A51000 PUSH2 0x92A DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x110A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1116 JUMP JUMPDEST SWAP1 PUSH2 0x1122 JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH2 0x945 SWAP1 DUP6 PUSH2 0x1122 JUMP JUMPDEST DUP1 DUP4 SSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x962 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE DUP1 ISZERO PUSH2 0x977 JUMPI PUSH2 0x977 CALLER DUP3 PUSH2 0x112E JUMP JUMPDEST DUP3 SLOAD PUSH2 0x98D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP7 PUSH2 0x125C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP6 SWAP1 CALLER SWAP1 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9E5 JUMPI PUSH2 0x9E5 PUSH2 0x1629 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0xA04 JUMPI POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA70 SWAP2 SWAP1 PUSH2 0x16DD JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA82 JUMPI POP TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA92 DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xC63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xABF PUSH1 0x8 SLOAD PUSH2 0x92A DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0xAB9 PUSH1 0x4 SLOAD DUP8 PUSH2 0x110A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x110A JUMP JUMPDEST SWAP1 POP PUSH2 0xAE2 PUSH2 0xAD7 DUP5 PUSH2 0x92A DUP5 PUSH5 0xE8D4A51000 PUSH2 0x110A JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE POP POP TIMESTAMP PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xB1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB37 JUMPI PUSH2 0xB37 PUSH2 0x1629 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP4 MSTORE DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x4 SWAP1 SWAP4 MUL ADD SWAP4 POP SWAP1 SWAP2 SWAP1 PUSH2 0xB95 SWAP1 PUSH2 0xB83 PUSH2 0x3E8 PUSH2 0x92A DUP6 PUSH2 0x2BC PUSH2 0x110A JUMP JUMPDEST DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0xBBC PUSH2 0xBAA PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xB83 PUSH2 0x3E8 PUSH2 0x92A DUP6 PUSH2 0x12C PUSH2 0x110A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x63E JUMPI PUSH2 0xC14 DUP2 PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0xC1D DUP2 PUSH2 0x16F6 JUMP JUMPDEST SWAP1 POP PUSH2 0xC03 JUMP JUMPDEST PUSH2 0xC2C PUSH2 0xFFA JUMP JUMPDEST PUSH2 0xC36 PUSH1 0x0 PUSH2 0x12BF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC40 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC54 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP4 GT PUSH2 0xCB2 JUMPI PUSH32 0x0 PUSH2 0xCB4 JUMP JUMPDEST DUP3 JUMPDEST SWAP3 POP PUSH32 0x0 DUP3 LT ISZERO PUSH2 0xCE6 JUMPI POP PUSH1 0x0 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0xCF0 DUP4 DUP4 PUSH2 0x1655 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD0F JUMPI PUSH2 0xD0F PUSH2 0x1629 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP8 MSTORE SWAP4 MSTORE DUP1 DUP6 KECCAK256 PUSH1 0x4 SWAP5 DUP6 MUL SWAP1 SWAP3 ADD PUSH1 0x3 DUP2 ADD SLOAD DUP2 SLOAD SWAP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP7 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP1 SWAP7 POP SWAP2 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDAF SWAP2 SWAP1 PUSH2 0x16DD JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0xDC3 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE23 JUMPI PUSH1 0x0 PUSH2 0xDD8 DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xC63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDFF PUSH1 0x8 SLOAD PUSH2 0x92A DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xAB9 PUSH1 0x4 SLOAD DUP8 PUSH2 0x110A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xE1E PUSH2 0xE17 DUP5 PUSH2 0x92A DUP5 PUSH5 0xE8D4A51000 PUSH2 0x110A JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x1054 JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0xE4B DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x930 PUSH5 0xE8D4A51000 PUSH2 0x92A DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x110A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xE79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xE96 JUMPI PUSH2 0xE96 PUSH2 0x1629 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0xEC7 DUP5 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF5 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x930 PUSH5 0xE8D4A51000 PUSH2 0x92A DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x110A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH2 0xF04 SWAP1 DUP6 PUSH2 0x1054 JUMP JUMPDEST DUP1 DUP4 SSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0xF21 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE DUP1 ISZERO PUSH2 0xF36 JUMPI PUSH2 0xF36 CALLER DUP3 PUSH2 0x112E JUMP JUMPDEST DUP3 SLOAD PUSH2 0xF4D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP8 PUSH2 0x130F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP6 SWAP1 CALLER SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH1 0x20 ADD PUSH2 0x9BD JUMP JUMPDEST PUSH2 0xF89 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x47F JUMP JUMPDEST PUSH2 0xFF7 DUP2 PUSH2 0x12BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF0 DUP3 DUP5 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1105 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x108B JUMPI PUSH2 0x108B PUSH2 0x1629 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x10F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6164643A20706F6F6C20616C7265616479206578697374732121212100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47F JUMP JUMPDEST DUP1 PUSH2 0x10FD DUP2 PUSH2 0x16F6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1066 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF0 DUP3 DUP5 PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF0 DUP3 DUP5 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF0 DUP3 DUP5 PUSH2 0x1655 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1177 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x119B SWAP2 SWAP1 PUSH2 0x16DD JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1223 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x121D SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1105 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x121D SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x1288 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x139C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1419 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1105 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x13BA SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH2 0x1105 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x47F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1428 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1432 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x47F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x14EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1506 SWAP2 SWAP1 PUSH2 0x177E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1543 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xE4B DUP3 DUP3 DUP7 PUSH1 0x60 DUP4 ISZERO PUSH2 0x1562 JUMPI POP DUP2 PUSH2 0x142B JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1572 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x179A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1601 DUP2 PUSH2 0x15C7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x161E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x142B DUP2 PUSH2 0x15C7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1667 JUMPI PUSH2 0x1667 PUSH2 0x163F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x167F JUMPI PUSH2 0x167F PUSH2 0x163F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x142B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x170A JUMPI PUSH2 0x170A PUSH2 0x163F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x172B JUMPI PUSH2 0x172B PUSH2 0x163F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x174D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x176D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1755 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x121D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1790 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x17B9 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x87 GASLIMIT CREATE2 0xE3 0x4F AND PUSH8 0xF67B3B4D47CE1317 0xED 0xCC PUSH18 0x5AB6AA394D8BD275AC968B4E7C64736F6C63 NUMBER STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "372:9910:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3694:435;;;;;;:::i;:::-;;:::i;:::-;;3442:95;3514:8;:15;3442:95;;;345:25:9;;;333:2;318:18;3442:95:8;;;;;;;;2215:26;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;644:32:9;;;626:51;;708:2;693:18;;686:34;;;;736:18;;;729:34;794:2;779:18;;772:34;613:3;598:19;2215:26:8;381:431:9;2458:34:8;;;;;;5195:323;;;;;;:::i;:::-;;:::i;3142:198::-;;;;;;:::i;:::-;;:::i;4481:618::-;;;;;;:::i;:::-;;:::i;1915:28::-;;;;;;8490:784;;;;;;:::i;:::-;;:::i;2590:32::-;;;;;;;;;;;;1721:14:9;;1714:22;1696:41;;1684:2;1669:18;2590:32:8;1556:187:9;7001:696:8;;;;;;:::i;:::-;;:::i;9362:523::-;;;;;;:::i;:::-;;:::i;6745:180::-;;;:::i;1831:101:0:-;;;:::i;2547:34:8:-;;;;;3352:82;;;:::i;3054:80::-;;;:::i;1201:85:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;;-1:-1:-1;;;;;1912:32:9;;;1894:51;;1882:2;1867:18;1201:85:0;1748:203:9;5594:240:8;;;;;;:::i;:::-;;:::i;2079:47::-;;2122:4;2079:47;;2297:66;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2458:25:9;;;2514:2;2499:18;;2492:34;;;;2431:18;2297:66:8;2284:248:9;5898:764:8;;;;;;:::i;:::-;;:::i;1746:71::-;;;;;-1:-1:-1;;;;;1746:71:8;;;1952:39;;;;;;1847:22;;;;;-1:-1:-1;;;;;1847:22:8;;;7766:672;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;2135:44:8:-;;2175:4;2135:44;;3694:435;1094:13:0;:11;:13::i;:::-;2122:4:8::1;3782:14;:34;;3774:80;;;::::0;-1:-1:-1;;;3774:80:8;;3221:2:9;3774:80:8::1;::::0;::::1;3203:21:9::0;3260:2;3240:18;;;3233:30;3299:34;3279:18;;;3272:62;-1:-1:-1;;;3350:18:9;;;3343:31;3391:19;;3774:80:8::1;;;;;;;;;4060:17;:15;:17::i;:::-;4091:13;:30:::0;3694:435::o;2215:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2215:26:8;;;;-1:-1:-1;2215:26:8;;;:::o;5195:323::-;1094:13:0;:11;:13::i;:::-;2175:4:8::1;5281:11;:28;;5273:69;;;::::0;-1:-1:-1;;;5273:69:8;;3623:2:9;5273:69:8::1;::::0;::::1;3605:21:9::0;3662:2;3642:18;;;3635:30;3701;3681:18;;;3674:58;3749:18;;5273:69:8::1;3421:352:9::0;5273:69:8::1;5355:17;:15;:17::i;:::-;5449:11;5421:8;5430:4;5421:14;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;;5403:15;;:43;;;;:::i;:::-;:57;;;;:::i;:::-;5385:15;:75;;;;5499:11;5471:8;5480:4;5471:14;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;:39;;;;5195:323:::0;;:::o;3142:198::-;1094:13:0;:11;:13::i;:::-;3235:20:8::1;::::0;:33:::1;::::0;3260:7;3235:24:::1;:33::i;:::-;3212:20;:56:::0;3279:4:::1;::::0;:53:::1;::::0;-1:-1:-1;;;3279:53:8;;3297:10:::1;3279:53;::::0;::::1;4545:34:9::0;3317:4:8::1;4595:18:9::0;;;4588:43;4647:18;;;4640:34;;;-1:-1:-1;;;;;3279:4:8;;::::1;::::0;:17:::1;::::0;4480:18:9;;3279:53:8::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3142:198:::0;:::o;4481:618::-;1094:13:0;:11;:13::i;:::-;2175:4:8::1;4570:11;:28;;4562:69;;;::::0;-1:-1:-1;;;4562:69:8;;3623:2:9;4562:69:8::1;::::0;::::1;3605:21:9::0;3662:2;3642:18;;;3635:30;3701;3681:18;;;3674:58;3749:18;;4562:69:8::1;3421:352:9::0;4562:69:8::1;4644:27;4662:8;4644:17;:27::i;:::-;4723:17;:15;:17::i;:::-;4753:22;4796:9;4778:15;:27;:57;;4826:9;4778:57;;;4808:15;4778:57;4864:15;::::0;4753:82;;-1:-1:-1;4864:32:8::1;::::0;4884:11;4864:19:::1;:32::i;:::-;4846:15;:50:::0;4921:169:::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4921:169:8;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;4921:169:8;;;;;;4907:8:::1;:184:::0;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;4907:184:8::1;::::0;;;::::1;;::::0;;;;;;;;;;;;;;;;;;;;;4481:618::o;8490:784::-;1744:1:1;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:1;;;;;;;:::i;:::-;1744:1;2455:7;:18;;;;8572:21:8::1;8596:8;8605:4;8596:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;8645;;;:8:::1;:14:::0;;;;;;8660:10:::1;8645:26:::0;;;;;;;8692:11;;8596:14:::1;::::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;8692:22:8;-1:-1:-1;8692:22:8::1;8684:53;;;::::0;-1:-1:-1;;;8684:53:8;;5529:2:9;8684:53:8::1;::::0;::::1;5511:21:9::0;5568:2;5548:18;;;5541:30;-1:-1:-1;;;5587:18:9;;;5580:48;5645:18;;8684:53:8::1;5327:342:9::0;8684:53:8::1;8756:12;::::0;::::1;;8748:44;;;::::0;-1:-1:-1;;;8748:44:8;;5876:2:9;8748:44:8::1;::::0;::::1;5858:21:9::0;5915:2;5895:18;;;5888:30;-1:-1:-1;;;5934:18:9;;;5927:49;5993:18;;8748:44:8::1;5674:343:9::0;8748:44:8::1;8805:16;8816:4;8805:10;:16::i;:::-;8834:15;8852:68;8904:4;:15;;;8852:47;8894:4;8852:37;8868:4;:20;;;8852:4;:11;;;:15;;:37;;;;:::i;:::-;:41:::0;::::1;:47::i;:::-;:51:::0;::::1;:68::i;:::-;8947:11:::0;;8834:86;;-1:-1:-1;8947:24:8::1;::::0;8963:7;8947:15:::1;:24::i;:::-;8933:38:::0;;;9016:20:::1;::::0;::::1;::::0;9000:47:::1;::::0;9042:4:::1;::::0;9000:37:::1;::::0;8933:38;9000:15:::1;:37::i;:47::-;8982:15;::::0;::::1;:65:::0;9063:11;;9060:80:::1;;9091:37;9108:10;9120:7;9091:16;:37::i;:::-;9150:12:::0;;:55:::1;::::0;-1:-1:-1;;;;;9150:12:8::1;9184:10;9197:7:::0;9150:25:::1;:55::i;:::-;9231:35;::::0;345:25:9;;;9252:4:8;;9240:10:::1;::::0;9231:35:::1;::::0;333:2:9;318:18;9231:35:8::1;;;;;;;;-1:-1:-1::0;;1701:1:1;2628:22;;-1:-1:-1;;;8490:784:8:o;7001:696::-;7053:21;7077:8;7086:4;7077:14;;;;;;;;:::i;:::-;;;;;;;;;;;7053:38;;7125:4;:19;;;7106:15;:38;7102:77;;7161:7;7001:696;:::o;7102:77::-;7208:12;;:37;;-1:-1:-1;;;7208:37:8;;7239:4;7208:37;;;1894:51:9;7189:16:8;;-1:-1:-1;;;;;7208:12:8;;:22;;1867:18:9;;7208:37:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7189:56;-1:-1:-1;7260:13:8;7256:104;;-1:-1:-1;7312:15:8;7290:19;;;;:37;-1:-1:-1;7001:696:8:o;7256:104::-;7370:18;7391:51;7405:4;:19;;;7426:15;7391:13;:51::i;:::-;7370:72;;7453:18;7474:71;7529:15;;7474:50;7508:4;:15;;;7474:29;7489:13;;7474:10;:14;;:29;;;;:::i;:::-;:33;;:50::i;:71::-;7453:92;-1:-1:-1;7581:60:8;7606:34;7631:8;7606:20;7453:92;7621:4;7606:14;:20::i;:34::-;7581:20;;;;;:24;:60::i;:::-;7558:20;;;:83;-1:-1:-1;;7674:15:8;7652:19;;;;:37;;;;-1:-1:-1;;7001:696:8:o;9362:523::-;1744:1:1;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:1;;;;;;;:::i;:::-;1744:1;2455:7;:18;;;;9435:21:8::1;9459:8;9468:4;9459:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;9508;;;:8:::1;:14:::0;;;;;;9523:10:::1;9508:26:::0;;;;;;;9568:11;;9590:15;;;-1:-1:-1;9616:15:8;::::1;:19:::0;;;;9459:14:::1;::::0;;::::1;;::::0;-1:-1:-1;9508:26:8;;9568:11;9648:80:::1;::::0;9695:32:::1;9722:4;9695:22;9568:11:::0;9713:3:::1;9695:17;:22::i;:32::-;9648:12:::0;;-1:-1:-1;;;;;9648:12:8::1;::::0;:80;:25:::1;:80::i;:::-;9739:68;9765:7;1247::0::0;1273:6;-1:-1:-1;;;;;1273:6:0;;1201:85;9765:7:8::1;9774:32;9801:4;9774:22;:13:::0;9792:3:::1;9774:17;:22::i;9739:68::-;9825:50;::::0;345:25:9;;;9855:4:8;;9843:10:::1;::::0;9825:50:::1;::::0;333:2:9;318:18;9825:50:8::1;;;;;;;-1:-1:-1::0;;1701:1:1;2628:22;;-1:-1:-1;;9362:523:8:o;6745:180::-;6807:8;:15;6790:14;6833:85;6861:6;6855:3;:12;6833:85;;;6891:15;6902:3;6891:10;:15::i;:::-;6869:5;;;:::i;:::-;;;6833:85;;1831:101:0;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;3352:82:8:-;1094:13:0;:11;:13::i;:::-;3406:12:8::1;:20:::0;;-1:-1:-1;;3406:20:8::1;::::0;;3352:82::o;3054:80::-;1094:13:0;:11;:13::i;:::-;3107:12:8::1;:19:::0;;-1:-1:-1;;3107:19:8::1;3122:4;3107:19;::::0;;3054:80::o;5594:240::-;5666:7;5702:9;5694:5;:17;:37;;5722:9;5694:37;;;5714:5;5694:37;5686:45;;5752:9;5746:3;:15;5742:56;;;-1:-1:-1;5785:1:8;5778:8;;5742:56;5815:11;5821:5;5815:3;:11;:::i;:::-;5808:18;;5594:240;;;;;:::o;5898:764::-;5971:7;5991:21;6015:8;6024:4;6015:14;;;;;;;;:::i;:::-;;;;;;;;;6064;;;:8;:14;;;;;;-1:-1:-1;;;;;6064:21:8;;;;;;;;;;6015:14;;;;;;;6122:20;;;;6172:12;;:37;;-1:-1:-1;;;6172:37:8;;6203:4;6172:37;;;1894:51:9;;;;6015:14:8;;-1:-1:-1;6064:21:8;;6122:20;;6015:14;;6172:12;;:22;;1867:18:9;;6172:37:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6153:56;;6242:4;:19;;;6224:15;:37;:54;;;;-1:-1:-1;6265:13:8;;;6224:54;6220:354;;;6295:18;6316:51;6330:4;:19;;;6351:15;6316:13;:51::i;:::-;6295:72;;6382:18;6403:71;6458:15;;6403:50;6437:4;:15;;;6403:29;6418:13;;6403:10;:14;;:29;;;;:::i;:71::-;6382:92;-1:-1:-1;6507:55:8;6527:34;6552:8;6527:20;6382:92;6542:4;6527:14;:20::i;:34::-;6507:15;;:19;:55::i;:::-;6489:73;;6280:294;;6220:354;6591:63;6638:4;:15;;;6591:42;6628:4;6591:32;6607:15;6591:4;:11;;;:15;;:32;;;;:::i;:63::-;6584:70;5898:764;-1:-1:-1;;;;;;;5898:764:8:o;7766:672::-;1744:1:1;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:1;;;;;;;:::i;:::-;1744:1;2455:7;:18;;;;7847:21:8::1;7871:8;7880:4;7871:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;7920;;;:8:::1;:14:::0;;;;;;7935:10:::1;7920:26:::0;;;;;;;7871:14:::1;::::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;7959:16:8::1;7929:4:::0;7959:10:::1;:16::i;:::-;7988:15;8006:68;8058:4;:15;;;8006:47;8048:4;8006:37;8022:4;:20;;;8006:4;:11;;;:15;;:37;;;;:::i;:68::-;8101:11:::0;;7988:86;;-1:-1:-1;8101:24:8::1;::::0;8117:7;8101:15:::1;:24::i;:::-;8087:38:::0;;;8170:20:::1;::::0;::::1;::::0;8154:47:::1;::::0;8196:4:::1;::::0;8154:37:::1;::::0;8087:38;8154:15:::1;:37::i;:47::-;8136:15;::::0;::::1;:65:::0;8217:11;;8214:80:::1;;8245:37;8262:10;8274:7;8245:16;:37::i;:::-;8304:12:::0;;:74:::1;::::0;-1:-1:-1;;;;;8304:12:8::1;8342:10;8363:4;8370:7:::0;8304:29:::1;:74::i;:::-;8396:34;::::0;345:25:9;;;8416:4:8;;8404:10:::1;::::0;8396:34:::1;::::0;333:2:9;318:18;8396:34:8::1;199:177:9::0;2081:198:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;6553:2:9;2161:73:0::1;::::0;::::1;6535:21:9::0;6592:2;6572:18;;;6565:30;6631:34;6611:18;;;6604:62;-1:-1:-1;;;6682:18:9;;;6675:36;6728:19;;2161:73:0::1;6351:402:9::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:6;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;6960:2:9;1414:68:0;;;6942:21:9;;;6979:18;;;6972:30;7038:34;7018:18;;;7011:62;7090:18;;1414:68:0;6758:356:9;2755:96:7;2813:7;2839:5;2843:1;2839;:5;:::i;4137:269:8:-;4223:8;:15;4206:14;4249:148;4279:6;4272:4;:13;4249:148;;;4344:8;-1:-1:-1;;;;;4318:34:8;:8;4327:4;4318:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:22;-1:-1:-1;;;;;4318:22:8;:34;;4310:75;;;;-1:-1:-1;;;4310:75:8;;7321:2:9;4310:75:8;;;7303:21:9;7360:2;7340:18;;;7333:30;7399;7379:18;;;7372:58;7447:18;;4310:75:8;7119:352:9;4310:75:8;4287:6;;;;:::i;:::-;;;;4249:148;;;;4195:211;4137:269;:::o;3465:96:7:-;3523:7;3549:5;3553:1;3549;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;3122:96::-;3180:7;3206:5;3210:1;3206;:5;:::i;9999:278:8:-;10093:4;;:29;;-1:-1:-1;;;10093:29:8;;10116:4;10093:29;;;1894:51:9;10075:15:8;;-1:-1:-1;;;;;10093:4:8;;:14;;1867:18:9;;10093:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10075:47;;10147:7;10137;:17;10133:137;;;10171:4;;:27;;-1:-1:-1;;;10171:27:8;;-1:-1:-1;;;;;8063:32:9;;;10171:27:8;;;8045:51:9;8112:18;;;8105:34;;;10171:4:8;;;;:13;;8018:18:9;;10171:27:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4249:148;4195:211;4137:269;:::o;10133:137::-;10231:4;;:27;;-1:-1:-1;;;10231:27:8;;-1:-1:-1;;;;;8063:32:9;;;10231:27:8;;;8045:51:9;8112:18;;;8105:34;;;10231:4:8;;;;:13;;8018:18:9;;10231:27:8;7871:274:9;763:205:4;902:58;;-1:-1:-1;;;;;8063:32:9;;902:58:4;;;8045:51:9;8112:18;;;8105:34;;;875:86:4;;895:5;;-1:-1:-1;;;925:23:4;8018:18:9;;902:58:4;;;;-1:-1:-1;;902:58:4;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:4;-1:-1:-1;;;;;;902:58:4;;;;;;;;;;875:19;:86::i;2433:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;974:241:4:-;1139:68;;-1:-1:-1;;;;;4563:15:9;;;1139:68:4;;;4545:34:9;4615:15;;4595:18;;;4588:43;4647:18;;;4640:34;;;1112:96:4;;1132:5;;-1:-1:-1;;;1162:27:4;4480:18:9;;1139:68:4;4305:375:9;3747:706:4;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:4;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:4;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:4;;8352:2:9;4351:85:4;;;8334:21:9;8391:2;8371:18;;;8364:30;8430:34;8410:18;;;8403:62;-1:-1:-1;;;8481:18:9;;;8474:40;8531:19;;4351:85:4;8150:406:9;3861:223:5;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:5;;8763:2:9;5137:81:5;;;8745:21:9;8802:2;8782:18;;;8775:30;8841:34;8821:18;;;8814:62;-1:-1:-1;;;8892:18:9;;;8885:36;8938:19;;5137:81:5;8561:402:9;5137:81:5;-1:-1:-1;;;;;1465:19:5;;;5228:60;;;;-1:-1:-1;;;5228:60:5;;9170:2:9;5228:60:5;;;9152:21:9;9209:2;9189:18;;;9182:30;9248:31;9228:18;;;9221:59;9297:18;;5228:60:5;8968:353:9;5228:60:5;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:5;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;7707;7735:7;7731:566;;;-1:-1:-1;7765:10:5;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:5;;;;;;;;:::i;14:180:9:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:9;;14:180;-1:-1:-1;14:180:9:o;817:248::-;885:6;893;946:2;934:9;925:7;921:23;917:32;914:52;;;962:1;959;952:12;914:52;-1:-1:-1;;985:23:9;;;1055:2;1040:18;;;1027:32;;-1:-1:-1;817:248:9:o;1070:139::-;-1:-1:-1;;;;;1153:31:9;;1143:42;;1133:70;;1199:1;1196;1189:12;1214:337;1296:6;1304;1357:2;1345:9;1336:7;1332:23;1328:32;1325:52;;;1373:1;1370;1363:12;1325:52;1409:9;1396:23;1386:33;;1469:2;1458:9;1454:18;1441:32;1482:39;1515:5;1482:39;:::i;:::-;1540:5;1530:15;;;1214:337;;;;;:::o;2759:255::-;2818:6;2871:2;2859:9;2850:7;2846:23;2842:32;2839:52;;;2887:1;2884;2877:12;2839:52;2926:9;2913:23;2945:39;2978:5;2945:39;:::i;3778:127::-;3839:10;3834:3;3830:20;3827:1;3820:31;3870:4;3867:1;3860:15;3894:4;3891:1;3884:15;3910:127;3971:10;3966:3;3962:20;3959:1;3952:31;4002:4;3999:1;3992:15;4026:4;4023:1;4016:15;4042:125;4082:4;4110:1;4107;4104:8;4101:34;;;4115:18;;:::i;:::-;-1:-1:-1;4152:9:9;;4042:125::o;4172:128::-;4212:3;4243:1;4239:6;4236:1;4233:13;4230:39;;;4249:18;;:::i;:::-;-1:-1:-1;4285:9:9;;4172:128::o;4685:277::-;4752:6;4805:2;4793:9;4784:7;4780:23;4776:32;4773:52;;;4821:1;4818;4811:12;4773:52;4853:9;4847:16;4906:5;4899:13;4892:21;4885:5;4882:32;4872:60;;4928:1;4925;4918:12;4967:355;5169:2;5151:21;;;5208:2;5188:18;;;5181:30;5247:33;5242:2;5227:18;;5220:61;5313:2;5298:18;;4967:355::o;6022:184::-;6092:6;6145:2;6133:9;6124:7;6120:23;6116:32;6113:52;;;6161:1;6158;6151:12;6113:52;-1:-1:-1;6184:16:9;;6022:184;-1:-1:-1;6022:184:9:o;6211:135::-;6250:3;-1:-1:-1;;6271:17:9;;6268:43;;;6291:18;;:::i;:::-;-1:-1:-1;6338:1:9;6327:13;;6211:135::o;7476:168::-;7516:7;7582:1;7578;7574:6;7570:14;7567:1;7564:21;7559:1;7552:9;7545:17;7541:45;7538:71;;;7589:18;;:::i;:::-;-1:-1:-1;7629:9:9;;7476:168::o;7649:217::-;7689:1;7715;7705:132;;7759:10;7754:3;7750:20;7747:1;7740:31;7794:4;7791:1;7784:15;7822:4;7819:1;7812:15;7705:132;-1:-1:-1;7851:9:9;;7649:217::o;9326:258::-;9398:1;9408:113;9422:6;9419:1;9416:13;9408:113;;;9498:11;;;9492:18;9479:11;;;9472:39;9444:2;9437:10;9408:113;;;9539:6;9536:1;9533:13;9530:48;;;-1:-1:-1;;9574:1:9;9556:16;;9549:27;9326:258::o;9589:274::-;9718:3;9756:6;9750:13;9772:53;9818:6;9813:3;9806:4;9798:6;9794:17;9772:53;:::i;:::-;9841:16;;;;;9589:274;-1:-1:-1;;9589:274:9:o;9868:383::-;10017:2;10006:9;9999:21;9980:4;10049:6;10043:13;10092:6;10087:2;10076:9;10072:18;10065:34;10108:66;10167:6;10162:2;10151:9;10147:18;10142:2;10134:6;10130:15;10108:66;:::i;:::-;10235:2;10214:15;-1:-1:-1;;10210:29:9;10195:45;;;;10242:2;10191:54;;9868:383;-1:-1:-1;;9868:383:9:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1229400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MaxAllocPoint()": "294",
								"WETH()": "2404",
								"WETHPerSecond()": "2330",
								"add(uint256,address)": "infinite",
								"closeWithdraw()": "26594",
								"deposit(uint256,uint256)": "infinite",
								"devaddr()": "2381",
								"emergencyWithdraw(uint256)": "infinite",
								"getMultiplier(uint256,uint256)": "infinite",
								"massUpdatePools()": "infinite",
								"maxWETHPerSecond()": "273",
								"openWithdraw()": "26622",
								"owner()": "2365",
								"pendingWETH(uint256,address)": "infinite",
								"poolInfo(uint256)": "11121",
								"poolLength()": "2339",
								"renounceOwnership()": "infinite",
								"set(uint256,uint256)": "infinite",
								"setWETHPerSecond(uint256)": "infinite",
								"startTime()": "infinite",
								"supplyRewards(uint256)": "infinite",
								"totalAllocPoint()": "2330",
								"totalWETHdistributed()": "2373",
								"transferOwnership(address)": "infinite",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "4866",
								"withdraw(uint256,uint256)": "infinite",
								"withdrawable()": "2400"
							},
							"internal": {
								"checkForDuplicate(contract IERC20)": "infinite",
								"safeWETHTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 372,
									"end": 10282,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 372,
									"end": 10282,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 372,
									"end": 10282,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1746,
									"end": 1817,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1746,
									"end": 1817,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1746,
									"end": 1817,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1746,
									"end": 1817,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1774,
									"end": 1816,
									"name": "PUSH",
									"source": 8,
									"value": "82AF49447D8A07E3BD95BD0D56F35241523FBAB1"
								},
								{
									"begin": 1746,
									"end": 1817,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1746,
									"end": 1817,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1746,
									"end": 1817,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1746,
									"end": 1817,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1991,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1952,
									"end": 1991,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1952,
									"end": 1991,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1952,
									"end": 1991,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2458,
									"end": 2492,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2458,
									"end": 2492,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2590,
									"end": 2622,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2590,
									"end": 2622,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2590,
									"end": 2622,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2590,
									"end": 2622,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2590,
									"end": 2622,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2590,
									"end": 2622,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2881,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 2988,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2975,
									"end": 3005,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2975,
									"end": 3005,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2975,
									"end": 3005,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2975,
									"end": 3005,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3016,
									"end": 3038,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3016,
									"end": 3038,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 372,
									"end": 10282,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 372,
									"end": 10282,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 259,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 259,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 93,
									"end": 99,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 101,
									"end": 107,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 154,
									"end": 156,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 142,
									"end": 151,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 133,
									"end": 140,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 129,
									"end": 152,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 125,
									"end": 157,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 122,
									"end": 174,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 122,
									"end": 174,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 170,
									"end": 171,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 168,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 160,
									"end": 172,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 122,
									"end": 174,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 193,
									"end": 209,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 193,
									"end": 209,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 249,
									"end": 251,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 234,
									"end": 252,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 234,
									"end": 252,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 234,
									"end": 252,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 228,
									"end": 253,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 193,
									"end": 209,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 193,
									"end": 209,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 228,
									"end": 253,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 228,
									"end": 253,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 259,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 259,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 259,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 372,
									"end": 10282,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 372,
									"end": 10282,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 372,
									"end": 10282,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 372,
									"end": 10282,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 372,
									"end": 10282,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 372,
									"end": 10282,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 372,
									"end": 10282,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 372,
									"end": 10282,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "1244"
								},
								{
									"begin": 372,
									"end": 10282,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 372,
									"end": 10282,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 372,
									"end": 10282,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220608745f5e34f1667f67b3b4d47ce1317edcc715ab6aa394d8bd275ac968b4e7c64736f6c634300080c0033",
									".code": [
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "78E97925"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "9BD16D7B"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "D49E77CD"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "D49E77CD"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "E2BBB158"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "F4B83C4C"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "9BD16D7B"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "AD5C4648"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "B9AC9686"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "8DBB1E3A"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "9112F2B2"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "93F1A40B"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "78E97925"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "7B020DAD"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "845105E2"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "41249061"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "51EB05A6"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "51EB05A6"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "5312EA8E"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "630B5BA1"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "41249061"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "441A3E70"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "50188301"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "17CAF6F1"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "17CAF6F1"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "1AB06EE5"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "2377B2A8"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "2B8BBBE8"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "332E936"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "81E3EDA"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "1526FE27"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 372,
											"end": 10282,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3442,
											"end": 3537,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3442,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3522,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 3514,
											"end": 3529,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3442,
											"end": 3537,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 3442,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3442,
											"end": 3537,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3442,
											"end": 3537,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3442,
											"end": 3537,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3442,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3442,
											"end": 3537,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3442,
											"end": 3537,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3442,
											"end": 3537,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3442,
											"end": 3537,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3442,
											"end": 3537,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3442,
											"end": 3537,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3442,
											"end": 3537,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 676,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 644,
											"end": 676,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 644,
											"end": 676,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 626,
											"end": 677,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 626,
											"end": 677,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 708,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 693,
											"end": 711,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 693,
											"end": 711,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 686,
											"end": 720,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 686,
											"end": 720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 686,
											"end": 720,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 686,
											"end": 720,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 736,
											"end": 754,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 736,
											"end": 754,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 736,
											"end": 754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 729,
											"end": 763,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 779,
											"end": 797,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 779,
											"end": 797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 772,
											"end": 806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 613,
											"end": 616,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 598,
											"end": 617,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 381,
											"end": 812,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2458,
											"end": 2492,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2458,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2458,
											"end": 2492,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2458,
											"end": 2492,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2492,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2492,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5518,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5195,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 5195,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 5195,
											"end": 5518,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5518,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 5195,
											"end": 5518,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5195,
											"end": 5518,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 5195,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 5195,
											"end": 5518,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3142,
											"end": 3340,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3142,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3142,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 3142,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 3142,
											"end": 3340,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3142,
											"end": 3340,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3142,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3340,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3142,
											"end": 3340,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 3142,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3142,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3142,
											"end": 3340,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4481,
											"end": 5099,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 4481,
											"end": 5099,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4481,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 4481,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4481,
											"end": 5099,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4481,
											"end": 5099,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4481,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4481,
											"end": 5099,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4481,
											"end": 5099,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4481,
											"end": 5099,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4481,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4481,
											"end": 5099,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1915,
											"end": 1943,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1915,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1915,
											"end": 1943,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1915,
											"end": 1943,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1943,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1943,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8490,
											"end": 9274,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8490,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8490,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 8490,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 8490,
											"end": 9274,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8490,
											"end": 9274,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8490,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 8490,
											"end": 9274,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8490,
											"end": 9274,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 8490,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8490,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 8490,
											"end": 9274,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1714,
											"end": 1736,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1696,
											"end": 1737,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1696,
											"end": 1737,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1686,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1556,
											"end": 1743,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9362,
											"end": 9885,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 9362,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9362,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 9362,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 9362,
											"end": 9885,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9362,
											"end": 9885,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9362,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9362,
											"end": 9885,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9362,
											"end": 9885,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 9362,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9362,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 9362,
											"end": 9885,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6745,
											"end": 6925,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 6745,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 6745,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 6745,
											"end": 6925,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2547,
											"end": 2581,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 2547,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2547,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2547,
											"end": 2581,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1244"
										},
										{
											"begin": 2547,
											"end": 2581,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2547,
											"end": 2581,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3054,
											"end": 3134,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 3054,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 3054,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 3054,
											"end": 3134,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1912,
											"end": 1944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 1944,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 1944,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1945,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1884,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 1885,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1748,
											"end": 1951,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2079,
											"end": 2126,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2079,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2122,
											"end": 2126,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2079,
											"end": 2126,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2126,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2483,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2458,
											"end": 2483,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2458,
											"end": 2483,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2526,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2526,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2526,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2449,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2297,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2284,
											"end": 2532,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6662,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5898,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 5898,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 5898,
											"end": 6662,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 6662,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5898,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 5898,
											"end": 6662,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5898,
											"end": 6662,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 5898,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 5898,
											"end": 6662,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1746,
											"end": 1817,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1746,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1817,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1746,
											"end": 1817,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1746,
											"end": 1817,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1746,
											"end": 1817,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1817,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1817,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1952,
											"end": 1991,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1952,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1952,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1952,
											"end": 1991,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1952,
											"end": 1991,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1952,
											"end": 1991,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1952,
											"end": 1991,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1869,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1847,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1869,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1847,
											"end": 1869,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1847,
											"end": 1869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1847,
											"end": 1869,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1869,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1869,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7766,
											"end": 8438,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 7766,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7766,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 7766,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 7766,
											"end": 8438,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7766,
											"end": 8438,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7766,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 7766,
											"end": 8438,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7766,
											"end": 8438,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 7766,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7766,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 7766,
											"end": 8438,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2175,
											"end": 2179,
											"name": "PUSH",
											"source": 8,
											"value": "FA0"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2126,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3782,
											"end": 3796,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3782,
											"end": 3816,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3782,
											"end": 3816,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3221,
											"end": 3223,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3203,
											"end": 3224,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3262,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3233,
											"end": 3263,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3333,
											"name": "PUSH",
											"source": 9,
											"value": "736574574554485065725365636F6E643A20746F6F206D616E79205745544873"
										},
										{
											"begin": 3279,
											"end": 3297,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3279,
											"end": 3297,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3279,
											"end": 3297,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3272,
											"end": 3334,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3343,
											"end": 3374,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 3774,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 4060,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 4060,
											"end": 4077,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4060,
											"end": 4077,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 4060,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4104,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4091,
											"end": 4121,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3694,
											"end": 4129,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5195,
											"end": 5518,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 5195,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2179,
											"name": "PUSH",
											"source": 8,
											"value": "FA0"
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5281,
											"end": 5309,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5281,
											"end": 5309,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5273,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 5273,
											"end": 5342,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5273,
											"end": 5342,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5273,
											"end": 5342,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5273,
											"end": 5342,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5273,
											"end": 5342,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3625,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5273,
											"end": 5342,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5273,
											"end": 5342,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5273,
											"end": 5342,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3626,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3635,
											"end": 3665,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3701,
											"end": 3731,
											"name": "PUSH",
											"source": 9,
											"value": "6164643A20746F6F206D616E7920616C6C6F6320706F696E7473212100000000"
										},
										{
											"begin": 3681,
											"end": 3699,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3681,
											"end": 3699,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3674,
											"end": 3732,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5273,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 3421,
											"end": 3773,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5273,
											"end": 5342,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 5273,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 5355,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 5355,
											"end": 5372,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5355,
											"end": 5372,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 5355,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5460,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5429,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5430,
											"end": 5434,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5435,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5446,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5421,
											"end": 5446,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5446,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5403,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5403,
											"end": 5418,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5403,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 5403,
											"end": 5446,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5403,
											"end": 5446,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5403,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 5403,
											"end": 5446,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5403,
											"end": 5446,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 5403,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5403,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 5403,
											"end": 5460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5403,
											"end": 5460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5403,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 5403,
											"end": 5460,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5403,
											"end": 5460,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 5403,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5385,
											"end": 5400,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5385,
											"end": 5460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5385,
											"end": 5460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5385,
											"end": 5460,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5385,
											"end": 5460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5499,
											"end": 5510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5479,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5480,
											"end": 5484,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5496,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5471,
											"end": 5496,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5510,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5510,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5510,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5518,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3142,
											"end": 3340,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3142,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3255,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3235,
											"end": 3255,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3235,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3235,
											"end": 3268,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3260,
											"end": 3267,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3235,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 3235,
											"end": 3268,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3268,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3235,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3232,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3212,
											"end": 3268,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3283,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3279,
											"end": 3283,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4545,
											"end": 4579,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4613,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4595,
											"end": 4613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4595,
											"end": 4613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4631,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4674,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4674,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3283,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3283,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3283,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3283,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3296,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 3279,
											"end": 3296,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3142,
											"end": 3340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3142,
											"end": 3340,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4481,
											"end": 5099,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4481,
											"end": 5099,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2179,
											"name": "PUSH",
											"source": 8,
											"value": "FA0"
										},
										{
											"begin": 4570,
											"end": 4581,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4598,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4598,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 4562,
											"end": 4631,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4631,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4562,
											"end": 4631,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4562,
											"end": 4631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3625,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4562,
											"end": 4631,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4562,
											"end": 4631,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3626,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3635,
											"end": 3665,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3701,
											"end": 3731,
											"name": "PUSH",
											"source": 9,
											"value": "6164643A20746F6F206D616E7920616C6C6F6320706F696E7473212100000000"
										},
										{
											"begin": 3681,
											"end": 3699,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3681,
											"end": 3699,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3674,
											"end": 3732,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4562,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 3421,
											"end": 3773,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4562,
											"end": 4631,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 4562,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 4662,
											"end": 4670,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 4644,
											"end": 4671,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4644,
											"end": 4671,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 4644,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4723,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 4723,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 4723,
											"end": 4740,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4723,
											"end": 4740,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 4723,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4796,
											"end": 4805,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1244"
										},
										{
											"begin": 4778,
											"end": 4793,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4778,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 4778,
											"end": 4835,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1244"
										},
										{
											"begin": 4778,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 4778,
											"end": 4835,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4778,
											"end": 4835,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 4778,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4808,
											"end": 4823,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4778,
											"end": 4835,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 4778,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4753,
											"end": 4835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4753,
											"end": 4835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4864,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4864,
											"end": 4896,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4884,
											"end": 4895,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 4864,
											"end": 4896,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4864,
											"end": 4896,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4864,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4846,
											"end": 4861,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4846,
											"end": 4896,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 4915,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "PUSH",
											"source": 8,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "PUSH",
											"source": 8,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40"
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "PUSH",
											"source": 8,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D41"
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "PUSH",
											"source": 8,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D42"
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 5091,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4481,
											"end": 5099,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8490,
											"end": 9274,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 8490,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8572,
											"end": 8593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8596,
											"end": 8604,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 8605,
											"end": 8609,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8645,
											"end": 8659,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8645,
											"end": 8659,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8645,
											"end": 8659,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8645,
											"end": 8653,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 8645,
											"end": 8659,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8645,
											"end": 8659,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8645,
											"end": 8659,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8645,
											"end": 8659,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8645,
											"end": 8659,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8645,
											"end": 8659,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8670,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 8645,
											"end": 8671,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8645,
											"end": 8671,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8645,
											"end": 8671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8645,
											"end": 8671,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8645,
											"end": 8671,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8645,
											"end": 8671,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8645,
											"end": 8671,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8692,
											"end": 8703,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8692,
											"end": 8703,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8610,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8692,
											"end": 8714,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8692,
											"end": 8714,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8684,
											"end": 8737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 8684,
											"end": 8737,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8684,
											"end": 8737,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8684,
											"end": 8737,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8684,
											"end": 8737,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8684,
											"end": 8737,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5529,
											"end": 5531,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8684,
											"end": 8737,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8684,
											"end": 8737,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8684,
											"end": 8737,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5532,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5570,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 5548,
											"end": 5566,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5548,
											"end": 5566,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5548,
											"end": 5566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDA5D1A191C985DCE881B9BDD0819DBDBD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5580,
											"end": 5628,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5663,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5645,
											"end": 5663,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8684,
											"end": 8737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 5327,
											"end": 5669,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8684,
											"end": 8737,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 8684,
											"end": 8737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8756,
											"end": 8768,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 8756,
											"end": 8768,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8756,
											"end": 8768,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 8756,
											"end": 8768,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8748,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 8748,
											"end": 8792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8748,
											"end": 8792,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8748,
											"end": 8792,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8748,
											"end": 8792,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8748,
											"end": 8792,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5876,
											"end": 5878,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8748,
											"end": 8792,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8748,
											"end": 8792,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8748,
											"end": 8792,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5858,
											"end": 5879,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5915,
											"end": 5917,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 5895,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5895,
											"end": 5913,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5895,
											"end": 5913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 5918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDA5D1A191C985DC81B9BDD081BDC195B9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5934,
											"end": 5952,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5934,
											"end": 5952,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5934,
											"end": 5952,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5976,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5993,
											"end": 6011,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5993,
											"end": 6011,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 5674,
											"end": 6017,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8792,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 8748,
											"end": 8792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8805,
											"end": 8821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 8816,
											"end": 8820,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8805,
											"end": 8815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 8805,
											"end": 8821,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8805,
											"end": 8821,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 8805,
											"end": 8821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8834,
											"end": 8849,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8852,
											"end": 8920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 8904,
											"end": 8908,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8904,
											"end": 8919,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8904,
											"end": 8919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8904,
											"end": 8919,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8899,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 8894,
											"end": 8898,
											"name": "PUSH",
											"source": 8,
											"value": "E8D4A51000"
										},
										{
											"begin": 8852,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 8868,
											"end": 8872,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8868,
											"end": 8888,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 8868,
											"end": 8888,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8868,
											"end": 8888,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8856,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8863,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8852,
											"end": 8863,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8863,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 8852,
											"end": 8867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8889,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8889,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8852,
											"end": 8889,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8889,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8852,
											"end": 8889,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 8852,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8893,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 8852,
											"end": 8899,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8852,
											"end": 8899,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 8852,
											"end": 8899,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 8852,
											"end": 8920,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8852,
											"end": 8920,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 8852,
											"end": 8920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8947,
											"end": 8958,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8947,
											"end": 8958,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8834,
											"end": 8920,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8834,
											"end": 8920,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8947,
											"end": 8971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 8947,
											"end": 8971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8963,
											"end": 8970,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8947,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 8947,
											"end": 8971,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8947,
											"end": 8971,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 8947,
											"end": 8971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8971,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8971,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9016,
											"end": 9036,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 9016,
											"end": 9036,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9016,
											"end": 9036,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9016,
											"end": 9036,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9000,
											"end": 9047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 9000,
											"end": 9047,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9042,
											"end": 9046,
											"name": "PUSH",
											"source": 8,
											"value": "E8D4A51000"
										},
										{
											"begin": 9042,
											"end": 9046,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9000,
											"end": 9037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 9000,
											"end": 9037,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9000,
											"end": 9015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 9000,
											"end": 9037,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9000,
											"end": 9047,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 9000,
											"end": 9047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8982,
											"end": 8997,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8982,
											"end": 8997,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8982,
											"end": 8997,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8982,
											"end": 9047,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9063,
											"end": 9074,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9063,
											"end": 9074,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9060,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 9060,
											"end": 9140,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9091,
											"end": 9128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 9108,
											"end": 9118,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9120,
											"end": 9127,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9091,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 9091,
											"end": 9128,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9091,
											"end": 9128,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 9091,
											"end": 9128,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9150,
											"end": 9162,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9150,
											"end": 9162,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9150,
											"end": 9205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 9150,
											"end": 9205,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9150,
											"end": 9162,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9184,
											"end": 9194,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9197,
											"end": 9204,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 9150,
											"end": 9205,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9150,
											"end": 9205,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 9150,
											"end": 9205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9231,
											"end": 9266,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9231,
											"end": 9266,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9252,
											"end": 9256,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9252,
											"end": 9256,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9240,
											"end": 9250,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9240,
											"end": 9250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9231,
											"end": 9266,
											"name": "PUSH",
											"source": 8,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 9231,
											"end": 9266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9266,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 9231,
											"end": 9266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9231,
											"end": 9266,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9231,
											"end": 9266,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9231,
											"end": 9266,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9231,
											"end": 9266,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9231,
											"end": 9266,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9231,
											"end": 9266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9231,
											"end": 9266,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8490,
											"end": 9274,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7053,
											"end": 7074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7077,
											"end": 7085,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 7086,
											"end": 7090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7053,
											"end": 7091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7053,
											"end": 7091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7125,
											"end": 7129,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7125,
											"end": 7144,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7125,
											"end": 7144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7125,
											"end": 7144,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7106,
											"end": 7121,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 7106,
											"end": 7144,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7102,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 7102,
											"end": 7179,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7161,
											"end": 7168,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7102,
											"end": 7179,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 7102,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7220,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7220,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7239,
											"end": 7243,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1894,
											"end": 1945,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7189,
											"end": 7205,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7189,
											"end": 7205,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7208,
											"end": 7220,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7220,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7230,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 7208,
											"end": 7230,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 1885,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1867,
											"end": 1885,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 7208,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7189,
											"end": 7245,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7260,
											"end": 7273,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7256,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 7256,
											"end": 7360,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 7290,
											"end": 7309,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7290,
											"end": 7309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7290,
											"end": 7309,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7290,
											"end": 7309,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7290,
											"end": 7327,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7256,
											"end": 7360,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 7256,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7391,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 7405,
											"end": 7409,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7405,
											"end": 7424,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7405,
											"end": 7424,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7405,
											"end": 7424,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7426,
											"end": 7441,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 7391,
											"end": 7404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 7391,
											"end": 7442,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7391,
											"end": 7442,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 7391,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7370,
											"end": 7442,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7370,
											"end": 7442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7453,
											"end": 7471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7474,
											"end": 7545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 7529,
											"end": 7544,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 7529,
											"end": 7544,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7474,
											"end": 7524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 7508,
											"end": 7512,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7508,
											"end": 7523,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7508,
											"end": 7523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7508,
											"end": 7523,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 7489,
											"end": 7502,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7489,
											"end": 7502,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7474,
											"end": 7484,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7474,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 7474,
											"end": 7488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7474,
											"end": 7507,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7474,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 7474,
											"end": 7524,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7474,
											"end": 7545,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 7474,
											"end": 7545,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7453,
											"end": 7545,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7581,
											"end": 7641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 7606,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 7631,
											"end": 7639,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7606,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 7453,
											"end": 7545,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7621,
											"end": 7625,
											"name": "PUSH",
											"source": 8,
											"value": "E8D4A51000"
										},
										{
											"begin": 7606,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 7606,
											"end": 7626,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7606,
											"end": 7640,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 7606,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7581,
											"end": 7605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 7581,
											"end": 7641,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7581,
											"end": 7641,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 7581,
											"end": 7641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7558,
											"end": 7578,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7558,
											"end": 7578,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7558,
											"end": 7578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7558,
											"end": 7641,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7674,
											"end": 7689,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 7652,
											"end": 7671,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7652,
											"end": 7671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7652,
											"end": 7671,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7652,
											"end": 7671,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7652,
											"end": 7689,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7652,
											"end": 7689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7652,
											"end": 7689,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7652,
											"end": 7689,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7001,
											"end": 7697,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9362,
											"end": 9885,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 9362,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9456,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9459,
											"end": 9467,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 9468,
											"end": 9472,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9522,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9522,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9522,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9516,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 9508,
											"end": 9522,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9522,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9522,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9508,
											"end": 9522,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9522,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9522,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 9523,
											"end": 9533,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9534,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9534,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9534,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9534,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9534,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9534,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9534,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 9568,
											"end": 9579,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9568,
											"end": 9579,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9590,
											"end": 9605,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9590,
											"end": 9605,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9590,
											"end": 9605,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 9616,
											"end": 9631,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9635,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9635,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9635,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9473,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9508,
											"end": 9534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9568,
											"end": 9579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 9648,
											"end": 9728,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9695,
											"end": 9727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 9722,
											"end": 9726,
											"name": "PUSH",
											"source": 8,
											"value": "3E8"
										},
										{
											"begin": 9695,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 9568,
											"end": 9579,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9713,
											"end": 9716,
											"name": "PUSH",
											"source": 8,
											"value": "2BC"
										},
										{
											"begin": 9695,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 9695,
											"end": 9717,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9695,
											"end": 9727,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 9695,
											"end": 9727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9660,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9660,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9648,
											"end": 9660,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9660,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9728,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 9648,
											"end": 9728,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9648,
											"end": 9728,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 9648,
											"end": 9728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9739,
											"end": 9807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 9765,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9772,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 9765,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9774,
											"end": 9806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 9801,
											"end": 9805,
											"name": "PUSH",
											"source": 8,
											"value": "3E8"
										},
										{
											"begin": 9774,
											"end": 9796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 9774,
											"end": 9787,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9792,
											"end": 9795,
											"name": "PUSH",
											"source": 8,
											"value": "12C"
										},
										{
											"begin": 9774,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 9774,
											"end": 9796,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9739,
											"end": 9807,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 9739,
											"end": 9807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9825,
											"end": 9875,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9825,
											"end": 9875,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9855,
											"end": 9859,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 9859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9843,
											"end": 9853,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9843,
											"end": 9853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9825,
											"end": 9875,
											"name": "PUSH",
											"source": 8,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 9825,
											"end": 9875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9825,
											"end": 9875,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9825,
											"end": 9875,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9825,
											"end": 9875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9825,
											"end": 9875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9825,
											"end": 9875,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9825,
											"end": 9875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9825,
											"end": 9875,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9362,
											"end": 9885,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6745,
											"end": 6925,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 6745,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6807,
											"end": 6815,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6807,
											"end": 6822,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6790,
											"end": 6804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6918,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 6833,
											"end": 6918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6861,
											"end": 6867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6855,
											"end": 6858,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6855,
											"end": 6867,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 6918,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 6833,
											"end": 6918,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6891,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 6902,
											"end": 6905,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6891,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 6891,
											"end": 6906,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6891,
											"end": 6906,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 6891,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6869,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 6869,
											"end": 6874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6869,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 6869,
											"end": 6874,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6869,
											"end": 6874,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 6869,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6869,
											"end": 6874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6869,
											"end": 6874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 6833,
											"end": 6918,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3418,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3406,
											"end": 3426,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3406,
											"end": 3426,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3406,
											"end": 3426,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3406,
											"end": 3426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3406,
											"end": 3426,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3054,
											"end": 3134,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 3054,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3119,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3107,
											"end": 3126,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3126,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3107,
											"end": 3126,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3126,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3107,
											"end": 3126,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3126,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3126,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3134,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5673,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5702,
											"end": 5711,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1244"
										},
										{
											"begin": 5694,
											"end": 5699,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 5711,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 5694,
											"end": 5731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1244"
										},
										{
											"begin": 5694,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 5694,
											"end": 5731,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 5731,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 5694,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5719,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 5731,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 5694,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5731,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1244"
										},
										{
											"begin": 5746,
											"end": 5749,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5746,
											"end": 5761,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5742,
											"end": 5798,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5742,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5742,
											"end": 5798,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5785,
											"end": 5786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 5778,
											"end": 5786,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5742,
											"end": 5798,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5742,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5815,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 5821,
											"end": 5826,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5815,
											"end": 5818,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5815,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 5815,
											"end": 5826,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5815,
											"end": 5826,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 5815,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5594,
											"end": 5834,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5898,
											"end": 6662,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 5898,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5978,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6024,
											"end": 6028,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6078,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6078,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6078,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6072,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 6064,
											"end": 6078,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6078,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6078,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6064,
											"end": 6078,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6078,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6078,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6064,
											"end": 6085,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6085,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6085,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6085,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6085,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6085,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6085,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6085,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6085,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6085,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6122,
											"end": 6142,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 6122,
											"end": 6142,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6122,
											"end": 6142,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6122,
											"end": 6142,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6184,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6203,
											"end": 6207,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1894,
											"end": 1945,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1945,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1945,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6064,
											"end": 6085,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6085,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6122,
											"end": 6142,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6122,
											"end": 6142,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6184,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6194,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 6172,
											"end": 6194,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 1885,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1867,
											"end": 1885,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6246,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6242,
											"end": 6261,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6261,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6224,
											"end": 6239,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 6224,
											"end": 6261,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6224,
											"end": 6278,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6224,
											"end": 6278,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6224,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 6224,
											"end": 6278,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6265,
											"end": 6278,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6265,
											"end": 6278,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6265,
											"end": 6278,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6224,
											"end": 6278,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 6224,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6220,
											"end": 6574,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6220,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 6220,
											"end": 6574,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6295,
											"end": 6313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6330,
											"end": 6334,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6349,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6330,
											"end": 6349,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6349,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6351,
											"end": 6366,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 6316,
											"end": 6329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 6316,
											"end": 6367,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6316,
											"end": 6367,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6316,
											"end": 6367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6295,
											"end": 6367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6295,
											"end": 6367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6382,
											"end": 6400,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6403,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 6437,
											"end": 6441,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6437,
											"end": 6452,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6437,
											"end": 6452,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6437,
											"end": 6452,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 6418,
											"end": 6431,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6418,
											"end": 6431,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6413,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 6403,
											"end": 6417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6432,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6432,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6403,
											"end": 6432,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6432,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6403,
											"end": 6474,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 6403,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6382,
											"end": 6474,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6507,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 6527,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 6552,
											"end": 6560,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6527,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 6382,
											"end": 6474,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6546,
											"name": "PUSH",
											"source": 8,
											"value": "E8D4A51000"
										},
										{
											"begin": 6527,
											"end": 6541,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 6527,
											"end": 6547,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6527,
											"end": 6561,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 6527,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6507,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 6507,
											"end": 6562,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6507,
											"end": 6562,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 6507,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6489,
											"end": 6562,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6489,
											"end": 6562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6280,
											"end": 6574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6280,
											"end": 6574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6220,
											"end": 6574,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 6220,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6591,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 6638,
											"end": 6642,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6638,
											"end": 6653,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6638,
											"end": 6653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6638,
											"end": 6653,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6591,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 6628,
											"end": 6632,
											"name": "PUSH",
											"source": 8,
											"value": "E8D4A51000"
										},
										{
											"begin": 6591,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 6607,
											"end": 6622,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6591,
											"end": 6595,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6591,
											"end": 6602,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6591,
											"end": 6602,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6591,
											"end": 6602,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6591,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 6591,
											"end": 6606,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6591,
											"end": 6623,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6591,
											"end": 6623,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6591,
											"end": 6623,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6591,
											"end": 6623,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6591,
											"end": 6623,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6591,
											"end": 6654,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 6591,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6584,
											"end": 6654,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 6662,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5898,
											"end": 6662,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7766,
											"end": 8438,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 7766,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7847,
											"end": 7868,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7871,
											"end": 7879,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 7880,
											"end": 7884,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7920,
											"end": 7934,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7920,
											"end": 7934,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7920,
											"end": 7934,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7920,
											"end": 7928,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 7920,
											"end": 7934,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7920,
											"end": 7934,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7920,
											"end": 7934,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7920,
											"end": 7934,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7920,
											"end": 7934,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7920,
											"end": 7934,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7945,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 7920,
											"end": 7946,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7920,
											"end": 7946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7920,
											"end": 7946,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7920,
											"end": 7946,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7920,
											"end": 7946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7920,
											"end": 7946,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7920,
											"end": 7946,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7959,
											"end": 7975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 7929,
											"end": 7933,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7959,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 7959,
											"end": 7975,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7959,
											"end": 7975,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 7959,
											"end": 7975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7988,
											"end": 8003,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 8058,
											"end": 8062,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8058,
											"end": 8073,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8058,
											"end": 8073,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8058,
											"end": 8073,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8053,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 8048,
											"end": 8052,
											"name": "PUSH",
											"source": 8,
											"value": "E8D4A51000"
										},
										{
											"begin": 8006,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 8022,
											"end": 8026,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8022,
											"end": 8042,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 8022,
											"end": 8042,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8022,
											"end": 8042,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8010,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8017,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8017,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8017,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8043,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8043,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8006,
											"end": 8043,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8043,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8006,
											"end": 8074,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 8006,
											"end": 8074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8101,
											"end": 8112,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8101,
											"end": 8112,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7988,
											"end": 8074,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7988,
											"end": 8074,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8101,
											"end": 8125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 8101,
											"end": 8125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8117,
											"end": 8124,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8101,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 8101,
											"end": 8125,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8101,
											"end": 8125,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 8101,
											"end": 8125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8087,
											"end": 8125,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8087,
											"end": 8125,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8087,
											"end": 8125,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8170,
											"end": 8190,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 8170,
											"end": 8190,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8170,
											"end": 8190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8170,
											"end": 8190,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8154,
											"end": 8201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 8154,
											"end": 8201,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8196,
											"end": 8200,
											"name": "PUSH",
											"source": 8,
											"value": "E8D4A51000"
										},
										{
											"begin": 8196,
											"end": 8200,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8154,
											"end": 8191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 8154,
											"end": 8191,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8087,
											"end": 8125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 8154,
											"end": 8191,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8154,
											"end": 8201,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 8154,
											"end": 8201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8136,
											"end": 8151,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8136,
											"end": 8151,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8136,
											"end": 8151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8136,
											"end": 8201,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8217,
											"end": 8228,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8217,
											"end": 8228,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8214,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 8214,
											"end": 8294,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8245,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 8262,
											"end": 8272,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 8274,
											"end": 8281,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8245,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 8245,
											"end": 8282,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8245,
											"end": 8282,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 8245,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8304,
											"end": 8316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8304,
											"end": 8316,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8304,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 8304,
											"end": 8378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8304,
											"end": 8316,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8342,
											"end": 8352,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8367,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 8370,
											"end": 8377,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8304,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 8304,
											"end": 8378,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8304,
											"end": 8378,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 8304,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8430,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8396,
											"end": 8430,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8416,
											"end": 8420,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8420,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8404,
											"end": 8414,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 8404,
											"end": 8414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8430,
											"name": "PUSH",
											"source": 8,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 8396,
											"end": 8430,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8396,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 199,
											"end": 376,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6553,
											"end": 6555,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6535,
											"end": 6556,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6592,
											"end": 6594,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 6572,
											"end": 6590,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6572,
											"end": 6590,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6572,
											"end": 6590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6565,
											"end": 6595,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6631,
											"end": 6665,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6604,
											"end": 6666,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6682,
											"end": 6700,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6682,
											"end": 6700,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6682,
											"end": 6700,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6675,
											"end": 6711,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6728,
											"end": 6747,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6728,
											"end": 6747,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6351,
											"end": 6753,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6960,
											"end": 6962,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6942,
											"end": 6963,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6942,
											"end": 6963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6942,
											"end": 6963,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6979,
											"end": 6997,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6979,
											"end": 6997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6979,
											"end": 6997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6972,
											"end": 7002,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7038,
											"end": 7072,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7018,
											"end": 7036,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7018,
											"end": 7036,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7018,
											"end": 7036,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7011,
											"end": 7073,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7090,
											"end": 7108,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7090,
											"end": 7108,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6758,
											"end": 7114,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4137,
											"end": 4406,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 4137,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4223,
											"end": 4231,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4223,
											"end": 4238,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4206,
											"end": 4220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4397,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 4249,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4279,
											"end": 4285,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4276,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4285,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4249,
											"end": 4397,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4249,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 4249,
											"end": 4397,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4344,
											"end": 4352,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4318,
											"end": 4352,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4326,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4340,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4318,
											"end": 4340,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7321,
											"end": 7323,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7303,
											"end": 7324,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7360,
											"end": 7362,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 7340,
											"end": 7358,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7340,
											"end": 7358,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7340,
											"end": 7358,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7333,
											"end": 7363,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "PUSH",
											"source": 9,
											"value": "6164643A20706F6F6C20616C7265616479206578697374732121212100000000"
										},
										{
											"begin": 7379,
											"end": 7397,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7379,
											"end": 7397,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7379,
											"end": 7397,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7372,
											"end": 7430,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7465,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7447,
											"end": 7465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 7119,
											"end": 7471,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4287,
											"end": 4293,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4287,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 4287,
											"end": 4293,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4287,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 4287,
											"end": 4293,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4287,
											"end": 4293,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 4287,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4287,
											"end": 4293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4287,
											"end": 4293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4287,
											"end": 4293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4249,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 4249,
											"end": 4397,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4249,
											"end": 4397,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 4249,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4249,
											"end": 4397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4195,
											"end": 4406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4406,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9999,
											"end": 10277,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 9999,
											"end": 10277,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10097,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 10093,
											"end": 10097,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10120,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1894,
											"end": 1945,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10075,
											"end": 10090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10075,
											"end": 10090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10093,
											"end": 10097,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10107,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 10093,
											"end": 10107,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 1885,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1867,
											"end": 1885,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10075,
											"end": 10122,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10075,
											"end": 10122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10147,
											"end": 10154,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10137,
											"end": 10144,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10137,
											"end": 10154,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10133,
											"end": 10270,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10133,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 10133,
											"end": 10270,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10175,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 10171,
											"end": 10175,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8063,
											"end": 8095,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8063,
											"end": 8095,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8063,
											"end": 8095,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8045,
											"end": 8096,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8112,
											"end": 8130,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8112,
											"end": 8130,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8112,
											"end": 8130,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8105,
											"end": 8139,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8105,
											"end": 8139,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8105,
											"end": 8139,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10175,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10175,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10184,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 10171,
											"end": 10184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4249,
											"end": 4397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4195,
											"end": 4406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4406,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10133,
											"end": 10270,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 10133,
											"end": 10270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10231,
											"end": 10235,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 10231,
											"end": 10235,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 10231,
											"end": 10258,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10231,
											"end": 10258,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10231,
											"end": 10258,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10231,
											"end": 10258,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8063,
											"end": 8095,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8063,
											"end": 8095,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8063,
											"end": 8095,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10258,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10231,
											"end": 10258,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10231,
											"end": 10258,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8045,
											"end": 8096,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8112,
											"end": 8130,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8112,
											"end": 8130,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8112,
											"end": 8130,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8105,
											"end": 8139,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8105,
											"end": 8139,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8105,
											"end": 8139,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10235,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10231,
											"end": 10235,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10231,
											"end": 10235,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10231,
											"end": 10235,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10231,
											"end": 10244,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 10231,
											"end": 10244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 7871,
											"end": 8145,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 968,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8063,
											"end": 8095,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8063,
											"end": 8095,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8045,
											"end": 8096,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8112,
											"end": 8130,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8112,
											"end": 8130,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8112,
											"end": 8130,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8105,
											"end": 8139,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8105,
											"end": 8139,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8105,
											"end": 8139,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 875,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 895,
											"end": 900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 925,
											"end": 948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 902,
											"end": 960,
											"name": "tag",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 875,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "365"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4563,
											"end": 4578,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4563,
											"end": 4578,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4563,
											"end": 4578,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4579,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4615,
											"end": 4630,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4615,
											"end": 4630,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4595,
											"end": 4613,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4595,
											"end": 4613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4595,
											"end": 4613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4631,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4674,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4674,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 4305,
											"end": 4680,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 4,
											"value": "365"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8352,
											"end": 8354,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8334,
											"end": 8355,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8391,
											"end": 8393,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8364,
											"end": 8394,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8464,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 8410,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8410,
											"end": 8428,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8410,
											"end": 8428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8403,
											"end": 8465,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8481,
											"end": 8499,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8481,
											"end": 8499,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8481,
											"end": 8499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8474,
											"end": 8514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8531,
											"end": 8550,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8531,
											"end": 8550,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 8150,
											"end": 8556,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8763,
											"end": 8765,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8745,
											"end": 8766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8802,
											"end": 8804,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 8782,
											"end": 8800,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8782,
											"end": 8800,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8800,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8775,
											"end": 8805,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8841,
											"end": 8875,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 8821,
											"end": 8839,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8821,
											"end": 8839,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8821,
											"end": 8839,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8814,
											"end": 8876,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8892,
											"end": 8910,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8892,
											"end": 8910,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8892,
											"end": 8910,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8885,
											"end": 8921,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 8957,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8938,
											"end": 8957,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 8561,
											"end": 8963,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9170,
											"end": 9172,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9152,
											"end": 9173,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9209,
											"end": 9211,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 9189,
											"end": 9207,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9189,
											"end": 9207,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9189,
											"end": 9207,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9182,
											"end": 9212,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9248,
											"end": 9279,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 9228,
											"end": 9246,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9228,
											"end": 9246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9228,
											"end": 9246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9221,
											"end": 9280,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9297,
											"end": 9315,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9297,
											"end": 9315,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 8968,
											"end": 9321,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "tag",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8120,
											"end": 8130,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8131,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8167,
											"end": 8177,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8163,
											"end": 8165,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8178,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8196,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "tag",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 817,
											"end": 1065,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 817,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 885,
											"end": 891,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 899,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 946,
											"end": 948,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 925,
											"end": 932,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 921,
											"end": 944,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 917,
											"end": 949,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 914,
											"end": 966,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 914,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 914,
											"end": 966,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 962,
											"end": 963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 960,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 952,
											"end": 964,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 914,
											"end": 966,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 914,
											"end": 966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 985,
											"end": 1008,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1008,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1008,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1057,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1040,
											"end": 1058,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1058,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1058,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1027,
											"end": 1059,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1027,
											"end": 1059,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 1065,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 1209,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 1070,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1153,
											"end": 1184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1153,
											"end": 1184,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1185,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1133,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 1133,
											"end": 1203,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1199,
											"end": 1200,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1196,
											"end": 1197,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1189,
											"end": 1201,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1214,
											"end": 1551,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1214,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1296,
											"end": 1302,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1310,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1357,
											"end": 1359,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1336,
											"end": 1343,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1355,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1360,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1377,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 1325,
											"end": 1377,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1373,
											"end": 1374,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1371,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1375,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1377,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 1325,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1419,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1386,
											"end": 1419,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1386,
											"end": 1419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1469,
											"end": 1471,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1458,
											"end": 1467,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1441,
											"end": 1473,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1482,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 1515,
											"end": 1520,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1482,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 1482,
											"end": 1521,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1521,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 1482,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1545,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1545,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1214,
											"end": 1551,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1214,
											"end": 1551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1214,
											"end": 1551,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1214,
											"end": 1551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1214,
											"end": 1551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1214,
											"end": 1551,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2759,
											"end": 3014,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2759,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2871,
											"end": 2873,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2859,
											"end": 2868,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2850,
											"end": 2857,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2869,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2874,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2891,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 2839,
											"end": 2891,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2887,
											"end": 2888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2885,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2891,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 2839,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2913,
											"end": 2936,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 2945,
											"end": 2984,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3778,
											"end": 3905,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3778,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3849,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 3834,
											"end": 3837,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3830,
											"end": 3850,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3827,
											"end": 3828,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3851,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3870,
											"end": 3874,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3860,
											"end": 3875,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3894,
											"end": 3898,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3891,
											"end": 3892,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3899,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 4037,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 3910,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3971,
											"end": 3981,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3962,
											"end": 3982,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3999,
											"end": 4000,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4030,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4023,
											"end": 4024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4031,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4167,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 4042,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4086,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4111,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4107,
											"end": 4108,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4104,
											"end": 4112,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4101,
											"end": 4135,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4101,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 4101,
											"end": 4135,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4152,
											"end": 4161,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4161,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4167,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4172,
											"end": 4300,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 4172,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4212,
											"end": 4215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4244,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4239,
											"end": 4245,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4236,
											"end": 4237,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4246,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 4249,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 4249,
											"end": 4267,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4249,
											"end": 4267,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 4249,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4285,
											"end": 4294,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 4294,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4300,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4685,
											"end": 4962,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 4685,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4752,
											"end": 4758,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4807,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4793,
											"end": 4802,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4784,
											"end": 4791,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4780,
											"end": 4803,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4776,
											"end": 4808,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4825,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 4773,
											"end": 4825,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4819,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4811,
											"end": 4823,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4825,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 4773,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4862,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4847,
											"end": 4863,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 4911,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4899,
											"end": 4912,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4892,
											"end": 4913,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4885,
											"end": 4890,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 4872,
											"end": 4932,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4928,
											"end": 4929,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4926,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4967,
											"end": 5322,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4967,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5169,
											"end": 5171,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5210,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5188,
											"end": 5206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5188,
											"end": 5206,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5188,
											"end": 5206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5181,
											"end": 5211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5247,
											"end": 5280,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 5242,
											"end": 5244,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5227,
											"end": 5245,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5227,
											"end": 5245,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5220,
											"end": 5281,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5315,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5298,
											"end": 5316,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5316,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4967,
											"end": 5322,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6022,
											"end": 6206,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 6022,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6092,
											"end": 6098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6145,
											"end": 6147,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6133,
											"end": 6142,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6124,
											"end": 6131,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6120,
											"end": 6143,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6116,
											"end": 6148,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6165,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 6113,
											"end": 6165,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6161,
											"end": 6162,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6158,
											"end": 6159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6151,
											"end": 6163,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6165,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 6113,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6184,
											"end": 6200,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6184,
											"end": 6200,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6022,
											"end": 6206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6022,
											"end": 6206,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6211,
											"end": 6346,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 6211,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6253,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6271,
											"end": 6288,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6271,
											"end": 6288,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6268,
											"end": 6311,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6268,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 6268,
											"end": 6311,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6291,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 6291,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 6291,
											"end": 6309,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6291,
											"end": 6309,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 6291,
											"end": 6309,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6338,
											"end": 6339,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6327,
											"end": 6340,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6327,
											"end": 6340,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6211,
											"end": 6346,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7476,
											"end": 7644,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 7476,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7516,
											"end": 7523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7578,
											"end": 7579,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7580,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7584,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7567,
											"end": 7568,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7585,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7560,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7552,
											"end": 7561,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7545,
											"end": 7562,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7541,
											"end": 7586,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7538,
											"end": 7609,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7538,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 7538,
											"end": 7609,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7589,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 7589,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 7589,
											"end": 7607,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7589,
											"end": 7607,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 7589,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7629,
											"end": 7638,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7476,
											"end": 7644,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7649,
											"end": 7866,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 7649,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7715,
											"end": 7716,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7705,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 7705,
											"end": 7837,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7759,
											"end": 7769,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 7754,
											"end": 7757,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 7750,
											"end": 7770,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 7747,
											"end": 7748,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7740,
											"end": 7771,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7798,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 7791,
											"end": 7792,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7784,
											"end": 7799,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7822,
											"end": 7826,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7819,
											"end": 7820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7812,
											"end": 7827,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7705,
											"end": 7837,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 7705,
											"end": 7837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7851,
											"end": 7860,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7851,
											"end": 7860,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7649,
											"end": 7866,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9326,
											"end": 9584,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 9326,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9398,
											"end": 9399,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9408,
											"end": 9521,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 9408,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9422,
											"end": 9428,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9419,
											"end": 9420,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9416,
											"end": 9429,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9408,
											"end": 9521,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9408,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 9408,
											"end": 9521,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9498,
											"end": 9509,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9498,
											"end": 9509,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9498,
											"end": 9509,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9492,
											"end": 9510,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9479,
											"end": 9490,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9479,
											"end": 9490,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9479,
											"end": 9490,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9472,
											"end": 9511,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9444,
											"end": 9446,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9437,
											"end": 9447,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9408,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 9408,
											"end": 9521,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9408,
											"end": 9521,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 9408,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9539,
											"end": 9545,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9536,
											"end": 9537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9533,
											"end": 9546,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9530,
											"end": 9578,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9530,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 9530,
											"end": 9578,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9574,
											"end": 9575,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9556,
											"end": 9572,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9556,
											"end": 9572,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9549,
											"end": 9576,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9326,
											"end": 9584,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9589,
											"end": 9863,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 9589,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9718,
											"end": 9721,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9756,
											"end": 9762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9750,
											"end": 9763,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 9818,
											"end": 9824,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9816,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9806,
											"end": 9810,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9798,
											"end": 9804,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9794,
											"end": 9811,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 9772,
											"end": 9825,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9772,
											"end": 9825,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 9772,
											"end": 9825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9841,
											"end": 9857,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9841,
											"end": 9857,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9841,
											"end": 9857,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9841,
											"end": 9857,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9841,
											"end": 9857,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9589,
											"end": 9863,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9589,
											"end": 9863,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9868,
											"end": 10251,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 9868,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10017,
											"end": 10019,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10015,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9999,
											"end": 10020,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9980,
											"end": 9984,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10049,
											"end": 10055,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10043,
											"end": 10056,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10092,
											"end": 10098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10087,
											"end": 10089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10076,
											"end": 10085,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10072,
											"end": 10090,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10065,
											"end": 10099,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10108,
											"end": 10174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 10167,
											"end": 10173,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10162,
											"end": 10164,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10151,
											"end": 10160,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10165,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10142,
											"end": 10144,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10134,
											"end": 10140,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 10130,
											"end": 10145,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10108,
											"end": 10174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 10108,
											"end": 10174,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10108,
											"end": 10174,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 10108,
											"end": 10174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10235,
											"end": 10237,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10214,
											"end": 10229,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10210,
											"end": 10239,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10195,
											"end": 10240,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10195,
											"end": 10240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10195,
											"end": 10240,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10195,
											"end": 10240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10242,
											"end": 10244,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10191,
											"end": 10245,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10191,
											"end": 10245,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 10251,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9868,
											"end": 10251,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"MaxAllocPoint()": "f4b83c4c",
							"WETH()": "ad5c4648",
							"WETHPerSecond()": "41249061",
							"add(uint256,address)": "2b8bbbe8",
							"closeWithdraw()": "7b020dad",
							"deposit(uint256,uint256)": "e2bbb158",
							"devaddr()": "d49e77cd",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getMultiplier(uint256,uint256)": "8dbb1e3a",
							"massUpdatePools()": "630b5ba1",
							"maxWETHPerSecond()": "9112f2b2",
							"openWithdraw()": "845105e2",
							"owner()": "8da5cb5b",
							"pendingWETH(uint256,address)": "9bd16d7b",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"renounceOwnership()": "715018a6",
							"set(uint256,uint256)": "1ab06ee5",
							"setWETHPerSecond(uint256)": "0332e936",
							"startTime()": "78e97925",
							"supplyRewards(uint256)": "2377b2a8",
							"totalAllocPoint()": "17caf6f1",
							"totalWETHdistributed()": "b9ac9686",
							"transferOwnership(address)": "f2fde38b",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70",
							"withdrawable()": "50188301"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_WETHPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MaxAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETHPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWETHPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingWETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accWETHPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_WETHPerSecond\",\"type\":\"uint256\"}],\"name\":\"setWETHPerSecond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"supplyRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWETHdistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/final/GMDstaking.sol\":\"GMDstaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/final/GMDstaking.sol\":{\"keccak256\":\"0xd9c6b411af6ca655d850db4dfc2ad588f04a8e6b9f68a54f005ec4e6a363cb0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5aa5639c4aaffc6e5fee00792032f2d2f440bfb7011fbe338b979085c2a3b5c\",\"dweb:/ipfs/QmdCrDKnYYrBfkQqss8ihdE7o75CUoMVr6diyaVJKkgURs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/final/GMDstaking.sol:GMDstaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "contracts/final/GMDstaking.sol:GMDstaking",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1215,
								"contract": "contracts/final/GMDstaking.sol:GMDstaking",
								"label": "WETH",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)230"
							},
							{
								"astId": 1217,
								"contract": "contracts/final/GMDstaking.sol:GMDstaking",
								"label": "devaddr",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1219,
								"contract": "contracts/final/GMDstaking.sol:GMDstaking",
								"label": "WETHPerSecond",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1222,
								"contract": "contracts/final/GMDstaking.sol:GMDstaking",
								"label": "totalWETHdistributed",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1232,
								"contract": "contracts/final/GMDstaking.sol:GMDstaking",
								"label": "poolInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(PoolInfo)1209_storage)dyn_storage"
							},
							{
								"astId": 1239,
								"contract": "contracts/final/GMDstaking.sol:GMDstaking",
								"label": "userInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1199_storage))"
							},
							{
								"astId": 1242,
								"contract": "contracts/final/GMDstaking.sol:GMDstaking",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1247,
								"contract": "contracts/final/GMDstaking.sol:GMDstaking",
								"label": "withdrawable",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)1209_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1209_storage",
								"encoding": "dynamic_array",
								"label": "struct GMDstaking.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)230": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)1199_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct GMDstaking.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1199_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1199_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct GMDstaking.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)1199_storage)"
							},
							"t_struct(PoolInfo)1209_storage": {
								"encoding": "inplace",
								"label": "struct GMDstaking.PoolInfo",
								"members": [
									{
										"astId": 1202,
										"contract": "contracts/final/GMDstaking.sol:GMDstaking",
										"label": "lpToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)230"
									},
									{
										"astId": 1204,
										"contract": "contracts/final/GMDstaking.sol:GMDstaking",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1206,
										"contract": "contracts/final/GMDstaking.sol:GMDstaking",
										"label": "lastRewardTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1208,
										"contract": "contracts/final/GMDstaking.sol:GMDstaking",
										"label": "accWETHPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(UserInfo)1199_storage": {
								"encoding": "inplace",
								"label": "struct GMDstaking.UserInfo",
								"members": [
									{
										"astId": 1196,
										"contract": "contracts/final/GMDstaking.sol:GMDstaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1198,
										"contract": "contracts/final/GMDstaking.sol:GMDstaking",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							864
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 865,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								864
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							152
						]
					},
					"id": 153,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 152,
							"linearizedBaseContracts": [
								152
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 152,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 135,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 136,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 141,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 142,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 146,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 147,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 151,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 153,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							230
						]
					},
					"id": 231,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 154,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 155,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 230,
							"linearizedBaseContracts": [
								230
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 164,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 173,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 230,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 230,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 230,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 230,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 230,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 230,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 231,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							266
						]
					},
					"id": 267,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 232,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 233,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 266,
							"linearizedBaseContracts": [
								266
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1471:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1494:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1519:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1542:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1568:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 243,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1585:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 245,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1604:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 247,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:3"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:3"
									},
									"scope": 266,
									"src": "1446:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1950:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:3"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1988:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:3"
									},
									"scope": 266,
									"src": "1934:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:3"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2240:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 262,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:3"
									},
									"scope": 266,
									"src": "2189:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 267,
							"src": "620:1631:3",
							"usedErrors": []
						}
					],
					"src": "114:2138:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							842
						],
						"IERC20": [
							230
						],
						"IERC20Permit": [
							266
						],
						"SafeERC20": [
							547
						]
					},
					"id": 548,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 268,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 548,
							"sourceUnit": 231,
							"src": "140:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 270,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 548,
							"sourceUnit": 267,
							"src": "164:46:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 271,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 548,
							"sourceUnit": 843,
							"src": "211:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 272,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 547,
							"linearizedBaseContracts": [
								547
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 275,
									"libraryName": {
										"id": 273,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 842,
										"src": "737:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:4",
									"typeName": {
										"id": 274,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "865:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 286,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "895:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 289,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 278,
																			"src": "925:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$230",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 197,
																		"src": "925:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 292,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "950:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 293,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "954:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 287,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 285,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "875:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$230_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "875:86:4"
											}
										]
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "794:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$230",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 277,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 276,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 230,
														"src": "794:6:4"
													},
													"referencedDeclaration": 230,
													"src": "794:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$230",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "816:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "836:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:4"
									},
									"scope": 547,
									"src": "763:205:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "1102:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 311,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "1132:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 314,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 301,
																			"src": "1162:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$230",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 229,
																		"src": "1162:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 317,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "1191:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 318,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "1197:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 319,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "1201:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 312,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 310,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "1112:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$230_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:4"
											}
										]
									},
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1009:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$230",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 300,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 299,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 230,
														"src": "1009:6:4"
													},
													"referencedDeclaration": 230,
													"src": "1009:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$230",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1031:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1053:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1073:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:4"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:4"
									},
									"scope": 547,
									"src": "974:241:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "1581:497:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 336,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 332,
																			"src": "1830:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 339,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 344,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$547",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$547",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 343,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 342,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 345,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 346,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 330,
																					"src": "1877:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 340,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 328,
																					"src": "1846:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$230",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 207,
																				"src": "1846:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 350,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 356,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "2001:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 359,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 328,
																			"src": "2031:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$230",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 217,
																		"src": "2031:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 362,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "2055:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 363,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "2064:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 357,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 355,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "1981:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$230_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:4"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "1505:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$230",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 327,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 326,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 230,
														"src": "1505:6:4"
													},
													"referencedDeclaration": 230,
													"src": "1505:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$230",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "1527:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "1552:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:4"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:4"
									},
									"scope": 547,
									"src": "1475:603:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "2200:194:4",
										"statements": [
											{
												"assignments": [
													379
												],
												"declarations": [
													{
														"constant": false,
														"id": 379,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "2210:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 378,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 390,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 384,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$547",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$547",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 382,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 386,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "2264:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 380,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "2233:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$230",
																	"typeString": "contract IERC20"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 207,
															"src": "2233:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 388,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "2275:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 392,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "2310:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 395,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 371,
																			"src": "2340:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$230",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 217,
																		"src": "2340:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 398,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2364:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 399,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "2373:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 393,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 391,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "2290:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$230_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:4"
											}
										]
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2124:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$230",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 370,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 369,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 230,
														"src": "2124:6:4"
													},
													"referencedDeclaration": 230,
													"src": "2124:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$230",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2146:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2171:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:4"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:4"
									},
									"scope": 547,
									"src": "2084:310:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "2516:370:4",
										"statements": [
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:4",
												"statements": [
													{
														"assignments": [
															415
														],
														"declarations": [
															{
																"constant": false,
																"id": 415,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 450,
																"src": "2550:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 414,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 424,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 420,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$547",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$547",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 418,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 422,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "2604:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 416,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "2573:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$230",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 207,
																"src": "2573:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 426,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "2634:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 427,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "2650:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 425,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 431,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:4"
													},
													{
														"assignments": [
															433
														],
														"declarations": [
															{
																"constant": false,
																"id": 433,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 450,
																"src": "2715:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 432,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 437,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 434,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2738:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 435,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "2753:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 439,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "2792:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$230",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 442,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 407,
																					"src": "2822:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$230",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 217,
																				"src": "2822:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 445,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "2846:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "2855:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 440,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$230",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 438,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "2772:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$230_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 449,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:4"
													}
												]
											}
										]
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2440:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$230",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 405,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 230,
														"src": "2440:6:4"
													},
													"referencedDeclaration": 230,
													"src": "2440:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$230",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2462:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2487:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:4"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:4"
									},
									"scope": 547,
									"src": "2400:486:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "3107:257:4",
										"statements": [
											{
												"assignments": [
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 507,
														"src": "3117:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 472,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 478,
												"initialValue": {
													"arguments": [
														{
															"id": 476,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "3152:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 474,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3139:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$266",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 259,
														"src": "3139:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 482,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "3181:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "3188:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 484,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3197:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 485,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "3204:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 486,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "3214:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 487,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "3217:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 488,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "3220:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 479,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3168:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$266",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 251,
														"src": "3168:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:4"
											},
											{
												"assignments": [
													492
												],
												"declarations": [
													{
														"constant": false,
														"id": 492,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 507,
														"src": "3232:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 491,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 497,
												"initialValue": {
													"arguments": [
														{
															"id": 495,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "3266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 493,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3253:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$266",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 259,
														"src": "3253:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 499,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "3290:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 500,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 473,
																	"src": "3304:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:4"
											}
										]
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2921:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$266",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 454,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 453,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 266,
														"src": "2921:12:4"
													},
													"referencedDeclaration": 266,
													"src": "2921:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$266",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2949:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2972:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2997:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "3020:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "3046:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 464,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "3063:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 466,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "3082:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 468,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:4"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:4"
									},
									"scope": 547,
									"src": "2892:472:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "3817:636:4",
										"statements": [
											{
												"assignments": [
													518
												],
												"declarations": [
													{
														"constant": false,
														"id": 518,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "4166:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 517,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 527,
												"initialValue": {
													"arguments": [
														{
															"id": 524,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "4220:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 521,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "4200:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$230",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$230",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 519,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 636,
														"src": "4192:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 528,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4275:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 544,
												"nodeType": "IfStatement",
												"src": "4271:176:4",
												"trueBody": {
													"id": 543,
													"nodeType": "Block",
													"src": "4298:149:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 535,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 518,
																				"src": "4370:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 537,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 536,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 538,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 533,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 532,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 542,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "3776:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$230",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 511,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 510,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 230,
														"src": "3776:6:4"
													},
													"referencedDeclaration": 230,
													"src": "3776:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$230",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "3790:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 513,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:4"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:4"
									},
									"scope": 547,
									"src": "3747:706:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 548,
							"src": "707:3748:4",
							"usedErrors": []
						}
					],
					"src": "115:4341:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							842
						]
					},
					"id": 843,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 549,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 550,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 842,
							"linearizedBaseContracts": [
								842
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "1241:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 558,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 553,
																"src": "1465:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 557,
												"id": 563,
												"nodeType": "Return",
												"src": "1458:30:5"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "1195:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:5"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "1235:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 555,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:5"
									},
									"scope": 842,
									"src": "1175:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "2483:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 576,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$842",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$842",
																				"typeString": "library Address"
																			}
																		],
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 574,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 579,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "2526:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 573,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:5"
											},
											{
												"assignments": [
													585,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 598,
														"src": "2578:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 584,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 592,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 586,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "2596:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 588,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "2618:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 594,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "2647:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:5"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "2431:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "2458:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:5"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:5"
									},
									"scope": 842,
									"src": "2412:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3555:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 610,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "3585:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "3593:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 609,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															616,
															636
														],
														"referencedDeclaration": 636,
														"src": "3572:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 608,
												"id": 614,
												"nodeType": "Return",
												"src": "3565:67:5"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3488:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3504:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 603,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:5"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3541:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:5"
									},
									"scope": 842,
									"src": "3466:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "4008:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 629,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "4047:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 630,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "4055:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 632,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "4064:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 628,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															656,
															706
														],
														"referencedDeclaration": 706,
														"src": "4025:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 627,
												"id": 634,
												"nodeType": "Return",
												"src": "4018:59:5"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "3892:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "3916:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 620,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "3943:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 622,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:5"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "3994:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 625,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:5"
									},
									"scope": 842,
									"src": "3861:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "4589:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 649,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "4628:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 650,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "4636:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 651,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "4642:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 648,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															656,
															706
														],
														"referencedDeclaration": 706,
														"src": "4606:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 647,
												"id": 654,
												"nodeType": "Return",
												"src": "4599:94:5"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "4486:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "4510:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "4537:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:5"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "4575:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 645,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:5"
									},
									"scope": 842,
									"src": "4446:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "5127:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 673,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$842",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$842",
																				"typeString": "library Address"
																			}
																		],
																		"id": 672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 671,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 676,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "5170:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 683,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "5247:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 682,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "5236:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 681,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:5"
											},
											{
												"assignments": [
													689,
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 689,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 705,
														"src": "5300:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 688,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 705,
														"src": "5314:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 690,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"arguments": [
														{
															"id": 696,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "5367:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 692,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "5341:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 694,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "5360:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 700,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "5406:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 701,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "5415:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 702,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "5427:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 699,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "5389:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 669,
												"id": 704,
												"nodeType": "Return",
												"src": "5382:58:5"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "4988:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "5012:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 660,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "5039:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "5062:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 664,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:5"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "5113:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 667,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:5"
									},
									"scope": 842,
									"src": "4948:499:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "5724:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "5760:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "5768:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 716,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															723,
															758
														],
														"referencedDeclaration": 758,
														"src": "5741:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 715,
												"id": 721,
												"nodeType": "Return",
												"src": "5734:80:5"
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "5652:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "5668:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 710,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:5"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "5710:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:5"
									},
									"scope": 842,
									"src": "5624:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "6163:228:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 737,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "6192:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 736,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "6181:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 735,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:5"
											},
											{
												"assignments": [
													743,
													745
												],
												"declarations": [
													{
														"constant": false,
														"id": 743,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 757,
														"src": "6252:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 742,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 745,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 757,
														"src": "6266:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 744,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"initialValue": {
													"arguments": [
														{
															"id": 748,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "6311:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 746,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "6293:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 752,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "6350:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 753,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "6359:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 754,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "6371:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 751,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "6333:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 734,
												"id": 756,
												"nodeType": "Return",
												"src": "6326:58:5"
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "6042:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "6066:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "6093:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 729,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:5"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "6149:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:5"
									},
									"scope": 842,
									"src": "6005:386:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "6667:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 769,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "6705:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "6713:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 768,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															775,
															810
														],
														"referencedDeclaration": 810,
														"src": "6684:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 767,
												"id": 773,
												"nodeType": "Return",
												"src": "6677:84:5"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "6600:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 762,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:5"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "6653:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 765,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:5"
									},
									"scope": 842,
									"src": "6570:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "7109:232:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 789,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "7138:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 788,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "7127:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:5"
											},
											{
												"assignments": [
													795,
													797
												],
												"declarations": [
													{
														"constant": false,
														"id": 795,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 809,
														"src": "7200:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 794,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 797,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 809,
														"src": "7214:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 796,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 802,
												"initialValue": {
													"arguments": [
														{
															"id": 800,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "7261:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 798,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "7241:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 804,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "7300:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 805,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "7309:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 806,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "7321:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 803,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "7283:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 786,
												"id": 808,
												"nodeType": "Return",
												"src": "7276:58:5"
											}
										]
									},
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6993:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "7017:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 779,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "7044:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 781,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:5"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "7095:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 784,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:5"
									},
									"scope": 842,
									"src": "6954:387:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "7721:582:5",
										"statements": [
											{
												"condition": {
													"id": 822,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 813,
													"src": "7735:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "7792:505:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 826,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 815,
																		"src": "7876:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 836,
																"nodeType": "Block",
																"src": "8234:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 833,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 817,
																					"src": "8259:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 832,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 835,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:5"
																	}
																]
															},
															"id": 837,
															"nodeType": "IfStatement",
															"src": "7872:415:5",
															"trueBody": {
																"id": 831,
																"nodeType": "Block",
																"src": "7899:329:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:5"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 815,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 815,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 830,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "7731:566:5",
												"trueBody": {
													"id": 825,
													"nodeType": "Block",
													"src": "7744:42:5",
													"statements": [
														{
															"expression": {
																"id": 823,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "7765:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 821,
															"id": 824,
															"nodeType": "Return",
															"src": "7758:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "7596:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 812,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "7618:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 814,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "7651:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 816,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:5"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "7707:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 819,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:5"
									},
									"scope": 842,
									"src": "7561:742:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 843,
							"src": "194:8111:5",
							"usedErrors": []
						}
					],
					"src": "101:8205:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							864
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 844,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 845,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 850,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 849,
												"id": 852,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 864,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 859,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 858,
												"id": 861,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 856,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 864,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1176
						]
					},
					"id": 1177,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1176,
							"linearizedBaseContracts": [
								1176
							],
							"name": "SafeMath",
							"nameLocation": "490:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "717:140:7",
										"statements": [
											{
												"id": 897,
												"nodeType": "UncheckedBlock",
												"src": "727:124:7",
												"statements": [
													{
														"assignments": [
															880
														],
														"declarations": [
															{
																"constant": false,
																"id": 880,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 897,
																"src": "751:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 879,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 884,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 881,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "763:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 882,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "767:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 885,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "786:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 886,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "790:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 892,
														"nodeType": "IfStatement",
														"src": "782:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 890,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 878,
															"id": 891,
															"nodeType": "Return",
															"src": "793:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 894,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "838:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 895,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 878,
														"id": 896,
														"nodeType": "Return",
														"src": "824:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:7"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "702:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 874,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "708:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:7"
									},
									"scope": 1176,
									"src": "641:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "1078:113:7",
										"statements": [
											{
												"id": 925,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 911,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "1116:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 912,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "1120:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 918,
														"nodeType": "IfStatement",
														"src": "1112:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 916,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 910,
															"id": 917,
															"nodeType": "Return",
															"src": "1123:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 920,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 902,
																		"src": "1168:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 921,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 904,
																		"src": "1172:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 923,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 910,
														"id": 924,
														"nodeType": "Return",
														"src": "1154:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1018:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1029:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:7"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1063:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:7"
									},
									"scope": 1176,
									"src": "1002:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "1415:417:7",
										"statements": [
											{
												"id": 967,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 939,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "1683:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 946,
														"nodeType": "IfStatement",
														"src": "1679:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 944,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 938,
															"id": 945,
															"nodeType": "Return",
															"src": "1691:16:7"
														}
													},
													{
														"assignments": [
															948
														],
														"declarations": [
															{
																"constant": false,
																"id": 948,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 967,
																"src": "1721:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 947,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 952,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 949,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 950,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "1737:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 953,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "1756:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 954,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "1760:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 956,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "1765:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 962,
														"nodeType": "IfStatement",
														"src": "1752:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 960,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 938,
															"id": 961,
															"nodeType": "Return",
															"src": "1768:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 964,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "1813:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 965,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 938,
														"id": 966,
														"nodeType": "Return",
														"src": "1799:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1355:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1366:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:7"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1400:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 934,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1406:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:7"
									},
									"scope": 1176,
									"src": "1339:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "2057:114:7",
										"statements": [
											{
												"id": 995,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 981,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "2095:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 988,
														"nodeType": "IfStatement",
														"src": "2091:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 986,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 980,
															"id": 987,
															"nodeType": "Return",
															"src": "2103:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 990,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "2148:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 991,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 974,
																		"src": "2152:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 993,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 980,
														"id": 994,
														"nodeType": "Return",
														"src": "2134:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1997:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "2008:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:7"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "2042:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 976,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "2048:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:7"
									},
									"scope": 1176,
									"src": "1981:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "2406:114:7",
										"statements": [
											{
												"id": 1023,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1009,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "2444:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1016,
														"nodeType": "IfStatement",
														"src": "2440:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1014,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1008,
															"id": 1015,
															"nodeType": "Return",
															"src": "2452:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1018,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "2497:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1019,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "2501:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1021,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1008,
														"id": 1022,
														"nodeType": "Return",
														"src": "2483:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "2346:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "2357:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:7"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "2391:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1004,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "2397:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:7"
									},
									"scope": 1176,
									"src": "2330:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "2822:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1035,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "2839:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1036,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "2843:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1034,
												"id": 1038,
												"nodeType": "Return",
												"src": "2832:12:7"
											}
										]
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2768:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2779:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:7"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2813:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:7"
									},
									"scope": 1176,
									"src": "2755:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "3189:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1050,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "3206:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1051,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "3210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1049,
												"id": 1053,
												"nodeType": "Return",
												"src": "3199:12:7"
											}
										]
									},
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "3135:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "3146:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:7"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "3180:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:7"
									},
									"scope": 1176,
									"src": "3122:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "3532:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1065,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "3549:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1066,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "3553:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1064,
												"id": 1068,
												"nodeType": "Return",
												"src": "3542:12:7"
											}
										]
									},
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "3478:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "3489:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:7"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "3523:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:7"
									},
									"scope": 1176,
									"src": "3465:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "3917:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1080,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "3934:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1081,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "3938:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1079,
												"id": 1083,
												"nodeType": "Return",
												"src": "3927:12:7"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "3863:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "3874:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:7"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "3908:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:7"
									},
									"scope": 1176,
									"src": "3850:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "4466:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1095,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "4483:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1096,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "4487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1094,
												"id": 1098,
												"nodeType": "Return",
												"src": "4476:12:7"
											}
										]
									},
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "4412:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "4423:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:7"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "4457:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:7"
									},
									"scope": 1176,
									"src": "4399:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "5084:106:7",
										"statements": [
											{
												"id": 1123,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1113,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "5126:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1114,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "5131:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1116,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "5134:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1112,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1118,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1119,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "5168:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1120,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "5172:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1111,
														"id": 1122,
														"nodeType": "Return",
														"src": "5161:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "4981:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "5000:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "5019:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1106,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:7"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "5075:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:7"
									},
									"scope": 1176,
									"src": "4959:231:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "5799:105:7",
										"statements": [
											{
												"id": 1148,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1138,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "5841:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1141,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "5848:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1137,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1143,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1144,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "5882:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1145,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "5886:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1136,
														"id": 1147,
														"nodeType": "Return",
														"src": "5875:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "5696:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "5715:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "5734:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1131,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:7"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "5790:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:7"
									},
									"scope": 1176,
									"src": "5674:230:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "6675:105:7",
										"statements": [
											{
												"id": 1173,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1163,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1155,
																		"src": "6717:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1166,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "6724:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1162,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1168,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1169,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "6758:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1170,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "6762:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1161,
														"id": 1172,
														"nodeType": "Return",
														"src": "6751:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "6572:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "6591:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "6610:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:7"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "6666:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:7"
									},
									"scope": 1176,
									"src": "6550:230:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1177,
							"src": "482:6300:7",
							"usedErrors": []
						}
					],
					"src": "107:6676:7"
				},
				"id": 7
			},
			"contracts/final/GMDstaking.sol": {
				"ast": {
					"absolutePath": "contracts/final/GMDstaking.sol",
					"exportedSymbols": {
						"Address": [
							842
						],
						"Context": [
							864
						],
						"GMDstaking": [
							2083
						],
						"IERC20": [
							230
						],
						"IERC20Permit": [
							266
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							152
						],
						"SafeERC20": [
							547
						],
						"SafeMath": [
							1176
						]
					},
					"id": 2084,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1178,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2084,
							"sourceUnit": 231,
							"src": "64:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2084,
							"sourceUnit": 548,
							"src": "122:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2084,
							"sourceUnit": 1177,
							"src": "189:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2084,
							"sourceUnit": 113,
							"src": "248:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2084,
							"sourceUnit": 153,
							"src": "302:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1184,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "395:7:8"
									},
									"id": 1185,
									"nodeType": "InheritanceSpecifier",
									"src": "395:7:8"
								},
								{
									"baseName": {
										"id": 1186,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 152,
										"src": "403:15:8"
									},
									"id": 1187,
									"nodeType": "InheritanceSpecifier",
									"src": "403:15:8"
								}
							],
							"canonicalName": "GMDstaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2083,
							"linearizedBaseContracts": [
								2083,
								152,
								112,
								864
							],
							"name": "GMDstaking",
							"nameLocation": "381:10:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1190,
									"libraryName": {
										"id": 1188,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1176,
										"src": "434:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "428:27:8",
									"typeName": {
										"id": 1189,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "447:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1194,
									"libraryName": {
										"id": 1191,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 547,
										"src": "467:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "461:27:8",
									"typeName": {
										"id": 1193,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1192,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 230,
											"src": "481:6:8"
										},
										"referencedDeclaration": 230,
										"src": "481:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$230",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "GMDstaking.UserInfo",
									"id": 1199,
									"members": [
										{
											"constant": false,
											"id": 1196,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "558:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1199,
											"src": "550:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1195,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "550:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1198,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "632:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1199,
											"src": "624:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1197,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "624:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "530:8:8",
									"nodeType": "StructDefinition",
									"scope": 2083,
									"src": "523:795:8",
									"visibility": "public"
								},
								{
									"canonicalName": "GMDstaking.PoolInfo",
									"id": 1209,
									"members": [
										{
											"constant": false,
											"id": 1202,
											"mutability": "mutable",
											"name": "lpToken",
											"nameLocation": "1387:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 1209,
											"src": "1380:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$230",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 1201,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1200,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 230,
													"src": "1380:6:8"
												},
												"referencedDeclaration": 230,
												"src": "1380:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$230",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1204,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "1456:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1209,
											"src": "1448:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1203,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1448:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1206,
											"mutability": "mutable",
											"name": "lastRewardTime",
											"nameLocation": "1575:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 1209,
											"src": "1567:22:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1205,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1567:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1208,
											"mutability": "mutable",
											"name": "accWETHPerShare",
											"nameLocation": "1660:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 1209,
											"src": "1652:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1207,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1652:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "1360:8:8",
									"nodeType": "StructDefinition",
									"scope": 2083,
									"src": "1353:385:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad5c4648",
									"id": 1215,
									"mutability": "mutable",
									"name": "WETH",
									"nameLocation": "1760:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "1746:71:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$230",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1211,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1210,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 230,
											"src": "1746:6:8"
										},
										"referencedDeclaration": 230,
										"src": "1746:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$230",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307838326146343934343744386130376533626439354244306435366633353234313532336642616231",
												"id": 1213,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1774:42:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1212,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 230,
											"src": "1767:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$230_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 1214,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1767:50:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$230",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d49e77cd",
									"id": 1217,
									"mutability": "mutable",
									"name": "devaddr",
									"nameLocation": "1862:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "1847:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1216,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1847:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "41249061",
									"id": 1219,
									"mutability": "mutable",
									"name": "WETHPerSecond",
									"nameLocation": "1930:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "1915:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1218,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1915:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b9ac9686",
									"id": 1222,
									"mutability": "mutable",
									"name": "totalWETHdistributed",
									"nameLocation": "1967:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "1952:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1220,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1952:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1221,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1990:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "9112f2b2",
									"id": 1225,
									"mutability": "constant",
									"name": "maxWETHPerSecond",
									"nameLocation": "2103:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "2079:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1223,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2079:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 1224,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2122:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f4b83c4c",
									"id": 1228,
									"mutability": "constant",
									"name": "MaxAllocPoint",
									"nameLocation": "2159:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "2135:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1226,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2135:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34303030",
										"id": 1227,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2175:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4000_by_1",
											"typeString": "int_const 4000"
										},
										"value": "4000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 1232,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "2233:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "2215:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1209_storage_$dyn_storage",
										"typeString": "struct GMDstaking.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 1230,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1229,
												"name": "PoolInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1209,
												"src": "2215:8:8"
											},
											"referencedDeclaration": 1209,
											"src": "2215:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
												"typeString": "struct GMDstaking.PoolInfo"
											}
										},
										"id": 1231,
										"nodeType": "ArrayTypeName",
										"src": "2215:10:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1209_storage_$dyn_storage_ptr",
											"typeString": "struct GMDstaking.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 1239,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "2355:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "2297:66:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1199_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct GMDstaking.UserInfo))"
									},
									"typeName": {
										"id": 1238,
										"keyType": {
											"id": 1233,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2306:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2297:50:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1199_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct GMDstaking.UserInfo))"
										},
										"valueType": {
											"id": 1237,
											"keyType": {
												"id": 1234,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2326:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2317:29:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1199_storage_$",
												"typeString": "mapping(address => struct GMDstaking.UserInfo)"
											},
											"valueType": {
												"id": 1236,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1235,
													"name": "UserInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1199,
													"src": "2337:8:8"
												},
												"referencedDeclaration": 1199,
												"src": "2337:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
													"typeString": "struct GMDstaking.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 1242,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "2473:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "2458:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1240,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2458:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1241,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2491:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 1244,
									"mutability": "immutable",
									"name": "startTime",
									"nameLocation": "2572:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "2547:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2547:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "50188301",
									"id": 1247,
									"mutability": "mutable",
									"name": "withdrawable",
									"nameLocation": "2602:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "2590:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1245,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2590:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1246,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2617:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1255,
									"name": "Deposit",
									"nameLocation": "2637:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2661:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2645:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2645:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2683:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2667:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2696:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2688:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2644:59:8"
									},
									"src": "2631:73:8"
								},
								{
									"anonymous": false,
									"id": 1263,
									"name": "Withdraw",
									"nameLocation": "2716:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2741:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2725:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2763:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2747:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2776:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2768:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:59:8"
									},
									"src": "2710:74:8"
								},
								{
									"anonymous": false,
									"id": 1271,
									"name": "EmergencyWithdraw",
									"nameLocation": "2796:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2830:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "2814:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2814:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2852:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "2836:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2865:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "2857:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2857:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2813:59:8"
									},
									"src": "2790:83:8"
								},
								{
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "2962:84:8",
										"statements": [
											{
												"expression": {
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1278,
														"name": "WETHPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "2975:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1279,
														"name": "_WETHPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "2991:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2975:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "2975:30:8"
											},
											{
												"expression": {
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1282,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "3016:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1283,
														"name": "_startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "3028:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3016:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1285,
												"nodeType": "ExpressionStatement",
												"src": "3016:22:8"
											}
										]
									},
									"id": 1287,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "_WETHPerSecond",
												"nameLocation": "2911:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "2903:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "_startTime",
												"nameLocation": "2944:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "2936:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2936:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2892:69:8"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2962:0:8"
									},
									"scope": 2083,
									"src": "2881:165:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "3096:38:8",
										"statements": [
											{
												"expression": {
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1292,
														"name": "withdrawable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "3107:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3122:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3107:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "3107:19:8"
											}
										]
									},
									"functionSelector": "845105e2",
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1290,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1289,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3087:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3087:9:8"
										}
									],
									"name": "openWithdraw",
									"nameLocation": "3063:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3075:2:8"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3096:0:8"
									},
									"scope": 2083,
									"src": "3054:80:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "3201:139:8",
										"statements": [
											{
												"expression": {
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1304,
														"name": "totalWETHdistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "3212:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1307,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "3260:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1305,
																"name": "totalWETHdistributed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "3235:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1040,
															"src": "3235:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3235:33:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "3212:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1314,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3297:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3297:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1318,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3317:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GMDstaking_$2083",
																		"typeString": "contract GMDstaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GMDstaking_$2083",
																		"typeString": "contract GMDstaking"
																	}
																],
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3309:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1316,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3309:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3309:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1320,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "3324:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1311,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "3279:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															}
														},
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 229,
														"src": "3279:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3279:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "3279:53:8"
											}
										]
									},
									"functionSelector": "2377b2a8",
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1302,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1301,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3191:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3191:9:8"
										}
									],
									"name": "supplyRewards",
									"nameLocation": "3151:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3173:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "3165:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:17:8"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3201:0:8"
									},
									"scope": 2083,
									"src": "3142:198:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "3395:39:8",
										"statements": [
											{
												"expression": {
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1329,
														"name": "withdrawable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "3406:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3421:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3406:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "3406:20:8"
											}
										]
									},
									"functionSelector": "7b020dad",
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1327,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1326,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3386:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3386:9:8"
										}
									],
									"name": "closeWithdraw",
									"nameLocation": "3361:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3374:2:8"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3395:0:8"
									},
									"scope": 2083,
									"src": "3352:82:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "3496:41:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1339,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "3514:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1209_storage_$dyn_storage",
															"typeString": "struct GMDstaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3514:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1338,
												"id": 1341,
												"nodeType": "Return",
												"src": "3507:22:8"
											}
										]
									},
									"functionSelector": "081e3eda",
									"id": 1343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "3451:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3461:2:8"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3487:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3487:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3486:9:8"
									},
									"scope": 2083,
									"src": "3442:95:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "3763:366:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1351,
																"name": "_WETHPerSecond",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "3782:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1352,
																"name": "maxWETHPerSecond",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1225,
																"src": "3800:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3782:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736574574554485065725365636f6e643a20746f6f206d616e7920574554487321",
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3818:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4084b27a50bbf7dc8ffe5d4d7a26746aaced5cced0fabccd840b9ee16262550",
																"typeString": "literal_string \"setWETHPerSecond: too many WETHs!\""
															},
															"value": "setWETHPerSecond: too many WETHs!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4084b27a50bbf7dc8ffe5d4d7a26746aaced5cced0fabccd840b9ee16262550",
																"typeString": "literal_string \"setWETHPerSecond: too many WETHs!\""
															}
														],
														"id": 1350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3774:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3774:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "3774:80:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1357,
														"name": "massUpdatePools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "4060:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4060:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1359,
												"nodeType": "ExpressionStatement",
												"src": "4060:17:8"
											},
											{
												"expression": {
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1360,
														"name": "WETHPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "4091:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1361,
														"name": "_WETHPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "4107:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4091:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "4091:30:8"
											}
										]
									},
									"functionSelector": "0332e936",
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1348,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1347,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3753:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3753:9:8"
										}
									],
									"name": "setWETHPerSecond",
									"nameLocation": "3703:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "_WETHPerSecond",
												"nameLocation": "3728:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "3720:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3720:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3719:24:8"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3763:0:8"
									},
									"scope": 2083,
									"src": "3694:435:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "4195:211:8",
										"statements": [
											{
												"assignments": [
													1372
												],
												"declarations": [
													{
														"constant": false,
														"id": 1372,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "4214:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1398,
														"src": "4206:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1371,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4206:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1375,
												"initialValue": {
													"expression": {
														"id": 1373,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "4223:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1209_storage_$dyn_storage",
															"typeString": "struct GMDstaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4223:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4206:32:8"
											},
											{
												"body": {
													"id": 1396,
													"nodeType": "Block",
													"src": "4295:102:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$230",
																			"typeString": "contract IERC20"
																		},
																		"id": 1392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1387,
																					"name": "poolInfo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1232,
																					"src": "4318:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1209_storage_$dyn_storage",
																						"typeString": "struct GMDstaking.PoolInfo storage ref[] storage ref"
																					}
																				},
																				"id": 1389,
																				"indexExpression": {
																					"id": 1388,
																					"name": "_pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1377,
																					"src": "4327:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4318:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1209_storage",
																					"typeString": "struct GMDstaking.PoolInfo storage ref"
																				}
																			},
																			"id": 1390,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "lpToken",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1202,
																			"src": "4318:22:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$230",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1391,
																			"name": "_lpToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "4344:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$230",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "4318:34:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "6164643a20706f6f6c20616c72656164792065786973747321212121",
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4354:30:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7a9c5e392159a70bed7873f8fbc4493f584797ead4debdb661e6bbb41606e090",
																			"typeString": "literal_string \"add: pool already exists!!!!\""
																		},
																		"value": "add: pool already exists!!!!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7a9c5e392159a70bed7873f8fbc4493f584797ead4debdb661e6bbb41606e090",
																			"typeString": "literal_string \"add: pool already exists!!!!\""
																		}
																	],
																	"id": 1386,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4310:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4310:75:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1395,
															"nodeType": "ExpressionStatement",
															"src": "4310:75:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1380,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "4272:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1381,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "4279:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4272:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1397,
												"initializationExpression": {
													"assignments": [
														1377
													],
													"declarations": [
														{
															"constant": false,
															"id": 1377,
															"mutability": "mutable",
															"name": "_pid",
															"nameLocation": "4262:4:8",
															"nodeType": "VariableDeclaration",
															"scope": 1397,
															"src": "4254:12:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1376,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4254:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1379,
													"initialValue": {
														"hexValue": "30",
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4269:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4254:16:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4287:6:8",
														"subExpression": {
															"id": 1383,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "4287:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1385,
													"nodeType": "ExpressionStatement",
													"src": "4287:6:8"
												},
												"nodeType": "ForStatement",
												"src": "4249:148:8"
											}
										]
									},
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkForDuplicate",
									"nameLocation": "4146:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "_lpToken",
												"nameLocation": "4171:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4164:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$230",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1367,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1366,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 230,
														"src": "4164:6:8"
													},
													"referencedDeclaration": 230,
													"src": "4164:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$230",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4163:17:8"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4195:0:8"
									},
									"scope": 2083,
									"src": "4137:269:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1452,
										"nodeType": "Block",
										"src": "4551:548:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1410,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1401,
																"src": "4570:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1411,
																"name": "MaxAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "4585:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4570:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6164643a20746f6f206d616e7920616c6c6f6320706f696e74732121",
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4600:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d1b2d8a5732f8d899e4dac6c35c6d476f53318f917f5df980766ae88f15c30ef",
																"typeString": "literal_string \"add: too many alloc points!!\""
															},
															"value": "add: too many alloc points!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d1b2d8a5732f8d899e4dac6c35c6d476f53318f917f5df980766ae88f15c30ef",
																"typeString": "literal_string \"add: too many alloc points!!\""
															}
														],
														"id": 1409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4562:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1415,
												"nodeType": "ExpressionStatement",
												"src": "4562:69:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1417,
															"name": "_lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "4662:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															}
														],
														"id": 1416,
														"name": "checkForDuplicate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "4644:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$230_$returns$__$",
															"typeString": "function (contract IERC20) view"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4644:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "4644:27:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1420,
														"name": "massUpdatePools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "4723:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "4723:17:8"
											},
											{
												"assignments": [
													1424
												],
												"declarations": [
													{
														"constant": false,
														"id": 1424,
														"mutability": "mutable",
														"name": "lastRewardTime",
														"nameLocation": "4761:14:8",
														"nodeType": "VariableDeclaration",
														"scope": 1452,
														"src": "4753:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1423,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4753:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1433,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1425,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4778:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4778:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1427,
															"name": "startTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "4796:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4778:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1431,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "4826:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4778:57:8",
													"trueExpression": {
														"expression": {
															"id": 1429,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4808:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4808:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4753:82:8"
											},
											{
												"expression": {
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1434,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "4846:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1437,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1401,
																"src": "4884:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1435,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1242,
																"src": "4864:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1040,
															"src": "4864:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4864:32:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4846:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "4846:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1445,
																	"name": "_lpToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "4954:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$230",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1446,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "4989:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1447,
																	"name": "lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "5031:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5077:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$230",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1444,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "4921:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1209_storage_ptr_$",
																	"typeString": "type(struct GMDstaking.PoolInfo storage pointer)"
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardTime",
																"accWETHPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "4921:169:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1209_memory_ptr",
																"typeString": "struct GMDstaking.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1209_memory_ptr",
																"typeString": "struct GMDstaking.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1441,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "4907:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1209_storage_$dyn_storage",
																"typeString": "struct GMDstaking.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4907:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$1209_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$1209_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$1209_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct GMDstaking.PoolInfo storage ref[] storage pointer,struct GMDstaking.PoolInfo storage ref)"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4907:184:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "4907:184:8"
											}
										]
									},
									"functionSelector": "2b8bbbe8",
									"id": 1453,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1407,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1406,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4541:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4541:9:8"
										}
									],
									"name": "add",
									"nameLocation": "4490:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "4502:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "4494:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4494:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "_lpToken",
												"nameLocation": "4522:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "4515:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$230",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1403,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1402,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 230,
														"src": "4515:6:8"
													},
													"referencedDeclaration": 230,
													"src": "4515:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$230",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4493:38:8"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4551:0:8"
									},
									"scope": 2083,
									"src": "4481:618:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "5262:256:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1463,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "5281:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1464,
																"name": "MaxAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "5296:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5281:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6164643a20746f6f206d616e7920616c6c6f6320706f696e74732121",
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5311:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d1b2d8a5732f8d899e4dac6c35c6d476f53318f917f5df980766ae88f15c30ef",
																"typeString": "literal_string \"add: too many alloc points!!\""
															},
															"value": "add: too many alloc points!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d1b2d8a5732f8d899e4dac6c35c6d476f53318f917f5df980766ae88f15c30ef",
																"typeString": "literal_string \"add: too many alloc points!!\""
															}
														],
														"id": 1462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5273:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5273:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "5273:69:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1469,
														"name": "massUpdatePools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "5355:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5355:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "5355:17:8"
											},
											{
												"expression": {
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1472,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "5385:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1473,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1242,
																"src": "5403:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1474,
																		"name": "poolInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1232,
																		"src": "5421:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1209_storage_$dyn_storage",
																			"typeString": "struct GMDstaking.PoolInfo storage ref[] storage ref"
																		}
																	},
																	"id": 1476,
																	"indexExpression": {
																		"id": 1475,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "5430:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5421:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1209_storage",
																		"typeString": "struct GMDstaking.PoolInfo storage ref"
																	}
																},
																"id": 1477,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allocPoint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1204,
																"src": "5421:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5403:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1479,
															"name": "_allocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "5449:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5403:57:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5385:75:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "5385:75:8"
											},
											{
												"expression": {
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1483,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "5471:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1209_storage_$dyn_storage",
																	"typeString": "struct GMDstaking.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1485,
															"indexExpression": {
																"id": 1484,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "5480:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5471:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1209_storage",
																"typeString": "struct GMDstaking.PoolInfo storage ref"
															}
														},
														"id": 1486,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1204,
														"src": "5471:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1487,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "5499:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5471:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "5471:39:8"
											}
										]
									},
									"functionSelector": "1ab06ee5",
									"id": 1491,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1460,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1459,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5252:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5252:9:8"
										}
									],
									"name": "set",
									"nameLocation": "5204:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "5216:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "5208:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "5230:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "5222:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5222:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:35:8"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5262:0:8"
									},
									"scope": 2083,
									"src": "5195:323:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "5675:159:8",
										"statements": [
											{
												"expression": {
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1500,
														"name": "_from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1493,
														"src": "5686:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1501,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "5694:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1502,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1244,
																"src": "5702:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5694:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 1505,
															"name": "startTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "5722:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "5694:37:8",
														"trueExpression": {
															"id": 1504,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "5714:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5686:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "5686:45:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1509,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "5746:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1510,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "5752:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5746:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1515,
												"nodeType": "IfStatement",
												"src": "5742:56:8",
												"trueBody": {
													"id": 1514,
													"nodeType": "Block",
													"src": "5763:35:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5785:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1499,
															"id": 1513,
															"nodeType": "Return",
															"src": "5778:8:8"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1516,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "5815:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1517,
														"name": "_from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1493,
														"src": "5821:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5815:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1499,
												"id": 1519,
												"nodeType": "Return",
												"src": "5808:18:8"
											}
										]
									},
									"functionSelector": "8dbb1e3a",
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nameLocation": "5603:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "5625:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "5617:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5617:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5640:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "5632:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5616:28:8"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "5666:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5666:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5665:9:8"
									},
									"scope": 2083,
									"src": "5594:240:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "5980:682:8",
										"statements": [
											{
												"assignments": [
													1532
												],
												"declarations": [
													{
														"constant": false,
														"id": 1532,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "6008:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "5991:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
															"typeString": "struct GMDstaking.PoolInfo"
														},
														"typeName": {
															"id": 1531,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1530,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1209,
																"src": "5991:8:8"
															},
															"referencedDeclaration": 1209,
															"src": "5991:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																"typeString": "struct GMDstaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1536,
												"initialValue": {
													"baseExpression": {
														"id": 1533,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "6015:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1209_storage_$dyn_storage",
															"typeString": "struct GMDstaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1535,
													"indexExpression": {
														"id": 1534,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "6024:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6015:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1209_storage",
														"typeString": "struct GMDstaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5991:38:8"
											},
											{
												"assignments": [
													1539
												],
												"declarations": [
													{
														"constant": false,
														"id": 1539,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "6057:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "6040:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
															"typeString": "struct GMDstaking.UserInfo"
														},
														"typeName": {
															"id": 1538,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1537,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1199,
																"src": "6040:8:8"
															},
															"referencedDeclaration": 1199,
															"src": "6040:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																"typeString": "struct GMDstaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1545,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1540,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "6064:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1199_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct GMDstaking.UserInfo storage ref))"
															}
														},
														"id": 1542,
														"indexExpression": {
															"id": 1541,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "6073:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6064:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1199_storage_$",
															"typeString": "mapping(address => struct GMDstaking.UserInfo storage ref)"
														}
													},
													"id": 1544,
													"indexExpression": {
														"id": 1543,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "6079:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6064:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1199_storage",
														"typeString": "struct GMDstaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6040:45:8"
											},
											{
												"assignments": [
													1547
												],
												"declarations": [
													{
														"constant": false,
														"id": 1547,
														"mutability": "mutable",
														"name": "accWETHPerShare",
														"nameLocation": "6104:15:8",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "6096:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1546,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6096:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1550,
												"initialValue": {
													"expression": {
														"id": 1548,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "6122:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
															"typeString": "struct GMDstaking.PoolInfo storage pointer"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accWETHPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1208,
													"src": "6122:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6096:46:8"
											},
											{
												"assignments": [
													1552
												],
												"declarations": [
													{
														"constant": false,
														"id": 1552,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "6161:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "6153:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1551,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6153:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1561,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1558,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6203:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GMDstaking_$2083",
																		"typeString": "contract GMDstaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GMDstaking_$2083",
																		"typeString": "contract GMDstaking"
																	}
																],
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6195:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1556,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6195:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6195:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1553,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "6172:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																	"typeString": "struct GMDstaking.PoolInfo storage pointer"
																}
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1202,
															"src": "6172:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															}
														},
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 187,
														"src": "6172:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6172:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6153:56:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1562,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6224:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6224:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1564,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "6242:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																	"typeString": "struct GMDstaking.PoolInfo storage pointer"
																}
															},
															"id": 1565,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1206,
															"src": "6242:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6224:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1567,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "6265:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6277:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6265:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6224:54:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1608,
												"nodeType": "IfStatement",
												"src": "6220:354:8",
												"trueBody": {
													"id": 1607,
													"nodeType": "Block",
													"src": "6280:294:8",
													"statements": [
														{
															"assignments": [
																1572
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1572,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "6303:10:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1607,
																	"src": "6295:18:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1571,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6295:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1579,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1574,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1532,
																			"src": "6330:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																				"typeString": "struct GMDstaking.PoolInfo storage pointer"
																			}
																		},
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1206,
																		"src": "6330:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1576,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "6351:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "6351:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1573,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "6316:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6316:51:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6295:72:8"
														},
														{
															"assignments": [
																1581
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1581,
																	"mutability": "mutable",
																	"name": "WETHReward",
																	"nameLocation": "6390:10:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1607,
																	"src": "6382:18:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1580,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6382:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1593,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1591,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1242,
																		"src": "6458:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1587,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1532,
																					"src": "6437:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																						"typeString": "struct GMDstaking.PoolInfo storage pointer"
																					}
																				},
																				"id": 1588,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1204,
																				"src": "6437:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1584,
																						"name": "WETHPerSecond",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1219,
																						"src": "6418:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1582,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1572,
																						"src": "6403:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1583,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1070,
																					"src": "6403:14:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6403:29:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1070,
																			"src": "6403:33:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6403:50:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1085,
																	"src": "6403:54:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6403:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6382:92:8"
														},
														{
															"expression": {
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1594,
																	"name": "accWETHPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "6489:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1602,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1552,
																					"src": "6552:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1599,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6542:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1597,
																							"name": "WETHReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1581,
																							"src": "6527:10:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1598,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1070,
																						"src": "6527:14:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1600,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6527:20:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1085,
																				"src": "6527:24:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6527:34:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1595,
																			"name": "accWETHPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1547,
																			"src": "6507:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1040,
																		"src": "6507:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6507:55:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6489:73:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1606,
															"nodeType": "ExpressionStatement",
															"src": "6489:73:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1618,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "6638:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																	"typeString": "struct GMDstaking.UserInfo storage pointer"
																}
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1198,
															"src": "6638:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6628:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1612,
																			"name": "accWETHPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1547,
																			"src": "6607:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1609,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1539,
																				"src": "6591:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																					"typeString": "struct GMDstaking.UserInfo storage pointer"
																				}
																			},
																			"id": 1610,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1196,
																			"src": "6591:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1070,
																		"src": "6591:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6591:32:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1085,
																"src": "6591:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6591:42:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1055,
														"src": "6591:46:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6591:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1529,
												"id": 1621,
												"nodeType": "Return",
												"src": "6584:70:8"
											}
										]
									},
									"functionSelector": "9bd16d7b",
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingWETH",
									"nameLocation": "5907:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "5927:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "5919:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5941:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "5933:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5933:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5918:29:8"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "5971:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5971:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5970:9:8"
									},
									"scope": 2083,
									"src": "5898:764:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1647,
										"nodeType": "Block",
										"src": "6779:146:8",
										"statements": [
											{
												"assignments": [
													1627
												],
												"declarations": [
													{
														"constant": false,
														"id": 1627,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "6798:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1647,
														"src": "6790:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6790:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1630,
												"initialValue": {
													"expression": {
														"id": 1628,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "6807:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1209_storage_$dyn_storage",
															"typeString": "struct GMDstaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6807:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6790:32:8"
											},
											{
												"body": {
													"id": 1645,
													"nodeType": "Block",
													"src": "6876:42:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1642,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1632,
																		"src": "6902:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1641,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1739,
																	"src": "6891:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6891:15:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1644,
															"nodeType": "ExpressionStatement",
															"src": "6891:15:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1635,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "6855:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1636,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1627,
														"src": "6861:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6855:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1646,
												"initializationExpression": {
													"assignments": [
														1632
													],
													"declarations": [
														{
															"constant": false,
															"id": 1632,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "6846:3:8",
															"nodeType": "VariableDeclaration",
															"scope": 1646,
															"src": "6838:11:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1631,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6838:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1634,
													"initialValue": {
														"hexValue": "30",
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6852:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6838:15:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6869:5:8",
														"subExpression": {
															"id": 1638,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "6871:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1640,
													"nodeType": "ExpressionStatement",
													"src": "6869:5:8"
												},
												"nodeType": "ForStatement",
												"src": "6833:85:8"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 1648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "6754:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6769:2:8"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6779:0:8"
									},
									"scope": 2083,
									"src": "6745:180:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "7042:655:8",
										"statements": [
											{
												"assignments": [
													1655
												],
												"declarations": [
													{
														"constant": false,
														"id": 1655,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "7070:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1738,
														"src": "7053:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
															"typeString": "struct GMDstaking.PoolInfo"
														},
														"typeName": {
															"id": 1654,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1653,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1209,
																"src": "7053:8:8"
															},
															"referencedDeclaration": 1209,
															"src": "7053:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																"typeString": "struct GMDstaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1659,
												"initialValue": {
													"baseExpression": {
														"id": 1656,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "7077:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1209_storage_$dyn_storage",
															"typeString": "struct GMDstaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1658,
													"indexExpression": {
														"id": 1657,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "7086:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7077:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1209_storage",
														"typeString": "struct GMDstaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7053:38:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1660,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7106:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7106:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1662,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "7125:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																"typeString": "struct GMDstaking.PoolInfo storage pointer"
															}
														},
														"id": 1663,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1206,
														"src": "7125:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7106:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1667,
												"nodeType": "IfStatement",
												"src": "7102:77:8",
												"trueBody": {
													"id": 1666,
													"nodeType": "Block",
													"src": "7146:33:8",
													"statements": [
														{
															"functionReturnParameters": 1652,
															"id": 1665,
															"nodeType": "Return",
															"src": "7161:7:8"
														}
													]
												}
											},
											{
												"assignments": [
													1669
												],
												"declarations": [
													{
														"constant": false,
														"id": 1669,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "7197:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1738,
														"src": "7189:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7189:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1678,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1675,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7239:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GMDstaking_$2083",
																		"typeString": "contract GMDstaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GMDstaking_$2083",
																		"typeString": "contract GMDstaking"
																	}
																],
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7231:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1673,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7231:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7231:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1670,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "7208:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																	"typeString": "struct GMDstaking.PoolInfo storage pointer"
																}
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1202,
															"src": "7208:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															}
														},
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 187,
														"src": "7208:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7208:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7189:56:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1679,
														"name": "lpSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "7260:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7272:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7260:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1691,
												"nodeType": "IfStatement",
												"src": "7256:104:8",
												"trueBody": {
													"id": 1690,
													"nodeType": "Block",
													"src": "7275:85:8",
													"statements": [
														{
															"expression": {
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1682,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1655,
																		"src": "7290:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																			"typeString": "struct GMDstaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 1684,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1206,
																	"src": "7290:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1685,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7312:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7312:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7290:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1688,
															"nodeType": "ExpressionStatement",
															"src": "7290:37:8"
														},
														{
															"functionReturnParameters": 1652,
															"id": 1689,
															"nodeType": "Return",
															"src": "7342:7:8"
														}
													]
												}
											},
											{
												"assignments": [
													1693
												],
												"declarations": [
													{
														"constant": false,
														"id": 1693,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "7378:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1738,
														"src": "7370:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7370:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1700,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1695,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "7405:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																	"typeString": "struct GMDstaking.PoolInfo storage pointer"
																}
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1206,
															"src": "7405:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1697,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7426:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7426:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1694,
														"name": "getMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "7391:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7391:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7370:72:8"
											},
											{
												"assignments": [
													1702
												],
												"declarations": [
													{
														"constant": false,
														"id": 1702,
														"mutability": "mutable",
														"name": "WETHReward",
														"nameLocation": "7461:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1738,
														"src": "7453:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7453:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1714,
												"initialValue": {
													"arguments": [
														{
															"id": 1712,
															"name": "totalAllocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "7529:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1708,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1655,
																		"src": "7508:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																			"typeString": "struct GMDstaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 1709,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1204,
																	"src": "7508:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1705,
																			"name": "WETHPerSecond",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "7489:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1703,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1693,
																			"src": "7474:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1070,
																		"src": "7474:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7474:29:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1070,
																"src": "7474:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7474:50:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1085,
														"src": "7474:54:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7474:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7453:92:8"
											},
											{
												"expression": {
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1715,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "7558:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																"typeString": "struct GMDstaking.PoolInfo storage pointer"
															}
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "accWETHPerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1208,
														"src": "7558:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1726,
																		"name": "lpSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "7631:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7621:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"id": 1721,
																				"name": "WETHReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1702,
																				"src": "7606:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1070,
																			"src": "7606:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7606:20:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1085,
																	"src": "7606:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7606:34:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1718,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "7581:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																		"typeString": "struct GMDstaking.PoolInfo storage pointer"
																	}
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "accWETHPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1208,
																"src": "7581:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1040,
															"src": "7581:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7581:60:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7558:83:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "7558:83:8"
											},
											{
												"expression": {
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1731,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "7652:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																"typeString": "struct GMDstaking.PoolInfo storage pointer"
															}
														},
														"id": 1733,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1206,
														"src": "7652:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1734,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7674:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7674:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7652:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "7652:37:8"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "7010:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "7029:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "7021:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7021:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7020:14:8"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7042:0:8"
									},
									"scope": 2083,
									"src": "7001:696:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1844,
										"nodeType": "Block",
										"src": "7834:604:8",
										"statements": [
											{
												"assignments": [
													1750
												],
												"declarations": [
													{
														"constant": false,
														"id": 1750,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "7864:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1844,
														"src": "7847:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
															"typeString": "struct GMDstaking.PoolInfo"
														},
														"typeName": {
															"id": 1749,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1748,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1209,
																"src": "7847:8:8"
															},
															"referencedDeclaration": 1209,
															"src": "7847:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																"typeString": "struct GMDstaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1754,
												"initialValue": {
													"baseExpression": {
														"id": 1751,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "7871:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1209_storage_$dyn_storage",
															"typeString": "struct GMDstaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1753,
													"indexExpression": {
														"id": 1752,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1741,
														"src": "7880:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7871:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1209_storage",
														"typeString": "struct GMDstaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7847:38:8"
											},
											{
												"assignments": [
													1757
												],
												"declarations": [
													{
														"constant": false,
														"id": 1757,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "7913:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1844,
														"src": "7896:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
															"typeString": "struct GMDstaking.UserInfo"
														},
														"typeName": {
															"id": 1756,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1755,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1199,
																"src": "7896:8:8"
															},
															"referencedDeclaration": 1199,
															"src": "7896:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																"typeString": "struct GMDstaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1764,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1758,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "7920:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1199_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct GMDstaking.UserInfo storage ref))"
															}
														},
														"id": 1760,
														"indexExpression": {
															"id": 1759,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "7929:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7920:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1199_storage_$",
															"typeString": "mapping(address => struct GMDstaking.UserInfo storage ref)"
														}
													},
													"id": 1763,
													"indexExpression": {
														"expression": {
															"id": 1761,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7935:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7935:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7920:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1199_storage",
														"typeString": "struct GMDstaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7896:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1766,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "7970:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1765,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "7959:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7959:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "7959:16:8"
											},
											{
												"assignments": [
													1770
												],
												"declarations": [
													{
														"constant": false,
														"id": 1770,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "7996:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1844,
														"src": "7988:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1769,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7988:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1784,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1781,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "8058:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																	"typeString": "struct GMDstaking.UserInfo storage pointer"
																}
															},
															"id": 1782,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1198,
															"src": "8058:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8048:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1774,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1750,
																				"src": "8022:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																					"typeString": "struct GMDstaking.PoolInfo storage pointer"
																				}
																			},
																			"id": 1775,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accWETHPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1208,
																			"src": "8022:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1771,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1757,
																				"src": "8006:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																					"typeString": "struct GMDstaking.UserInfo storage pointer"
																				}
																			},
																			"id": 1772,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1196,
																			"src": "8006:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1070,
																		"src": "8006:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8006:37:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1085,
																"src": "8006:41:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8006:47:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1055,
														"src": "8006:51:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8006:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7988:86:8"
											},
											{
												"expression": {
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1785,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "8087:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																"typeString": "struct GMDstaking.UserInfo storage pointer"
															}
														},
														"id": 1787,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1196,
														"src": "8087:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1791,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "8117:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1788,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1757,
																	"src": "8101:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																		"typeString": "struct GMDstaking.UserInfo storage pointer"
																	}
																},
																"id": 1789,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1196,
																"src": "8101:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1040,
															"src": "8101:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8101:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8087:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1794,
												"nodeType": "ExpressionStatement",
												"src": "8087:38:8"
											},
											{
												"expression": {
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1795,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "8136:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																"typeString": "struct GMDstaking.UserInfo storage pointer"
															}
														},
														"id": 1797,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1198,
														"src": "8136:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8196:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1801,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1750,
																			"src": "8170:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																				"typeString": "struct GMDstaking.PoolInfo storage pointer"
																			}
																		},
																		"id": 1802,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accWETHPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1208,
																		"src": "8170:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1798,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1757,
																			"src": "8154:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																				"typeString": "struct GMDstaking.UserInfo storage pointer"
																			}
																		},
																		"id": 1799,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1196,
																		"src": "8154:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1070,
																	"src": "8154:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8154:37:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1085,
															"src": "8154:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8154:47:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8136:65:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1808,
												"nodeType": "ExpressionStatement",
												"src": "8136:65:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1809,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1770,
														"src": "8217:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1810,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8227:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8217:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1819,
												"nodeType": "IfStatement",
												"src": "8214:80:8",
												"trueBody": {
													"id": 1818,
													"nodeType": "Block",
													"src": "8230:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1813,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8262:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8262:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1815,
																		"name": "pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1770,
																		"src": "8274:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1812,
																	"name": "safeWETHTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "8245:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8245:37:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1817,
															"nodeType": "ExpressionStatement",
															"src": "8245:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1827,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8342:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8342:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8334:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1825,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8334:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1832,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8363:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GMDstaking_$2083",
																		"typeString": "contract GMDstaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GMDstaking_$2083",
																		"typeString": "contract GMDstaking"
																	}
																],
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8355:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1830,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8355:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8355:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1834,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "8370:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1820,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1750,
																"src": "8304:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																	"typeString": "struct GMDstaking.PoolInfo storage pointer"
																}
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1202,
															"src": "8304:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															}
														},
														"id": 1824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 324,
														"src": "8304:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$230_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$230_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8304:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1836,
												"nodeType": "ExpressionStatement",
												"src": "8304:74:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1838,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8404:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8404:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1840,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "8416:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1841,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "8422:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1837,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "8396:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8396:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1843,
												"nodeType": "EmitStatement",
												"src": "8391:39:8"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1845,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1746,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1745,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 151,
												"src": "7821:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7821:12:8"
										}
									],
									"name": "deposit",
									"nameLocation": "7775:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "7791:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "7783:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7783:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7805:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "7797:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7797:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7782:31:8"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7834:0:8"
									},
									"scope": 2083,
									"src": "7766:672:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1959,
										"nodeType": "Block",
										"src": "8559:715:8",
										"statements": [
											{
												"assignments": [
													1856
												],
												"declarations": [
													{
														"constant": false,
														"id": 1856,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "8589:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1959,
														"src": "8572:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
															"typeString": "struct GMDstaking.PoolInfo"
														},
														"typeName": {
															"id": 1855,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1854,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1209,
																"src": "8572:8:8"
															},
															"referencedDeclaration": 1209,
															"src": "8572:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																"typeString": "struct GMDstaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1860,
												"initialValue": {
													"baseExpression": {
														"id": 1857,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "8596:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1209_storage_$dyn_storage",
															"typeString": "struct GMDstaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1859,
													"indexExpression": {
														"id": 1858,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "8605:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8596:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1209_storage",
														"typeString": "struct GMDstaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8572:38:8"
											},
											{
												"assignments": [
													1863
												],
												"declarations": [
													{
														"constant": false,
														"id": 1863,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "8638:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1959,
														"src": "8621:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
															"typeString": "struct GMDstaking.UserInfo"
														},
														"typeName": {
															"id": 1862,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1861,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1199,
																"src": "8621:8:8"
															},
															"referencedDeclaration": 1199,
															"src": "8621:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																"typeString": "struct GMDstaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1870,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1864,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "8645:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1199_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct GMDstaking.UserInfo storage ref))"
															}
														},
														"id": 1866,
														"indexExpression": {
															"id": 1865,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "8654:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8645:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1199_storage_$",
															"typeString": "mapping(address => struct GMDstaking.UserInfo storage ref)"
														}
													},
													"id": 1869,
													"indexExpression": {
														"expression": {
															"id": 1867,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8660:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8660:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8645:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1199_storage",
														"typeString": "struct GMDstaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8621:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1872,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "8692:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																		"typeString": "struct GMDstaking.UserInfo storage pointer"
																	}
																},
																"id": 1873,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1196,
																"src": "8692:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1874,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1849,
																"src": "8707:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8692:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8716:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 1871,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8684:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8684:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1878,
												"nodeType": "ExpressionStatement",
												"src": "8684:53:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1880,
															"name": "withdrawable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "8756:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7769746864726177206e6f74206f70656e6564",
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8770:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25e30018472524969248ddfa25a1def4e21dfdf9d9e4b18708967da9b04753f6",
																"typeString": "literal_string \"withdraw not opened\""
															},
															"value": "withdraw not opened"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25e30018472524969248ddfa25a1def4e21dfdf9d9e4b18708967da9b04753f6",
																"typeString": "literal_string \"withdraw not opened\""
															}
														],
														"id": 1879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8748:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8748:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1883,
												"nodeType": "ExpressionStatement",
												"src": "8748:44:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1885,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "8816:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1884,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "8805:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8805:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1887,
												"nodeType": "ExpressionStatement",
												"src": "8805:16:8"
											},
											{
												"assignments": [
													1889
												],
												"declarations": [
													{
														"constant": false,
														"id": 1889,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "8842:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1959,
														"src": "8834:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1888,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8834:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1903,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1900,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1863,
																"src": "8904:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																	"typeString": "struct GMDstaking.UserInfo storage pointer"
																}
															},
															"id": 1901,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1198,
															"src": "8904:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8894:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1893,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1856,
																				"src": "8868:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																					"typeString": "struct GMDstaking.PoolInfo storage pointer"
																				}
																			},
																			"id": 1894,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accWETHPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1208,
																			"src": "8868:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1890,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1863,
																				"src": "8852:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																					"typeString": "struct GMDstaking.UserInfo storage pointer"
																				}
																			},
																			"id": 1891,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1196,
																			"src": "8852:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1070,
																		"src": "8852:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8852:37:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1085,
																"src": "8852:41:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8852:47:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1055,
														"src": "8852:51:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8852:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8834:86:8"
											},
											{
												"expression": {
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1904,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "8933:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																"typeString": "struct GMDstaking.UserInfo storage pointer"
															}
														},
														"id": 1906,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1196,
														"src": "8933:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1910,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1849,
																"src": "8963:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1907,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "8947:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																		"typeString": "struct GMDstaking.UserInfo storage pointer"
																	}
																},
																"id": 1908,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1196,
																"src": "8947:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1055,
															"src": "8947:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8947:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8933:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1913,
												"nodeType": "ExpressionStatement",
												"src": "8933:38:8"
											},
											{
												"expression": {
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1914,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "8982:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																"typeString": "struct GMDstaking.UserInfo storage pointer"
															}
														},
														"id": 1916,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1198,
														"src": "8982:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9042:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1920,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1856,
																			"src": "9016:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																				"typeString": "struct GMDstaking.PoolInfo storage pointer"
																			}
																		},
																		"id": 1921,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accWETHPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1208,
																		"src": "9016:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1917,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1863,
																			"src": "9000:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																				"typeString": "struct GMDstaking.UserInfo storage pointer"
																			}
																		},
																		"id": 1918,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1196,
																		"src": "9000:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1070,
																	"src": "9000:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9000:37:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1085,
															"src": "9000:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9000:47:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8982:65:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1927,
												"nodeType": "ExpressionStatement",
												"src": "8982:65:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1928,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1889,
														"src": "9063:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9073:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9063:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1938,
												"nodeType": "IfStatement",
												"src": "9060:80:8",
												"trueBody": {
													"id": 1937,
													"nodeType": "Block",
													"src": "9076:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1932,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9108:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9108:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1934,
																		"name": "pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "9120:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1931,
																	"name": "safeWETHTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "9091:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9091:37:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1936,
															"nodeType": "ExpressionStatement",
															"src": "9091:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1946,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9184:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9184:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9176:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1944,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9176:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9176:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1949,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "9197:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1939,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1856,
																"src": "9150:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																	"typeString": "struct GMDstaking.PoolInfo storage pointer"
																}
															},
															"id": 1942,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1202,
															"src": "9150:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															}
														},
														"id": 1943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "9150:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$230_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$230_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9150:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1951,
												"nodeType": "ExpressionStatement",
												"src": "9150:55:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1953,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9240:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9240:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1955,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "9252:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1956,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "9258:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1952,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "9231:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9231:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1958,
												"nodeType": "EmitStatement",
												"src": "9226:40:8"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 1960,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1852,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1851,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 151,
												"src": "8546:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "8546:12:8"
										}
									],
									"name": "withdraw",
									"nameLocation": "8499:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "8516:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "8508:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8508:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8530:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "8522:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8522:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8507:31:8"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8559:0:8"
									},
									"scope": 2083,
									"src": "8490:784:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "9424:461:8",
										"statements": [
											{
												"assignments": [
													1969
												],
												"declarations": [
													{
														"constant": false,
														"id": 1969,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "9452:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 2043,
														"src": "9435:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
															"typeString": "struct GMDstaking.PoolInfo"
														},
														"typeName": {
															"id": 1968,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1967,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1209,
																"src": "9435:8:8"
															},
															"referencedDeclaration": 1209,
															"src": "9435:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																"typeString": "struct GMDstaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1973,
												"initialValue": {
													"baseExpression": {
														"id": 1970,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "9459:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1209_storage_$dyn_storage",
															"typeString": "struct GMDstaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1972,
													"indexExpression": {
														"id": 1971,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1962,
														"src": "9468:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9459:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1209_storage",
														"typeString": "struct GMDstaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9435:38:8"
											},
											{
												"assignments": [
													1976
												],
												"declarations": [
													{
														"constant": false,
														"id": 1976,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "9501:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 2043,
														"src": "9484:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
															"typeString": "struct GMDstaking.UserInfo"
														},
														"typeName": {
															"id": 1975,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1974,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1199,
																"src": "9484:8:8"
															},
															"referencedDeclaration": 1199,
															"src": "9484:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																"typeString": "struct GMDstaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1983,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1977,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "9508:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1199_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct GMDstaking.UserInfo storage ref))"
															}
														},
														"id": 1979,
														"indexExpression": {
															"id": 1978,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "9517:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9508:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1199_storage_$",
															"typeString": "mapping(address => struct GMDstaking.UserInfo storage ref)"
														}
													},
													"id": 1982,
													"indexExpression": {
														"expression": {
															"id": 1980,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9523:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "9523:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9508:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1199_storage",
														"typeString": "struct GMDstaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9484:50:8"
											},
											{
												"assignments": [
													1985
												],
												"declarations": [
													{
														"constant": false,
														"id": 1985,
														"mutability": "mutable",
														"name": "oldUserAmount",
														"nameLocation": "9552:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 2043,
														"src": "9547:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1984,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9547:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1988,
												"initialValue": {
													"expression": {
														"id": 1986,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1976,
														"src": "9568:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
															"typeString": "struct GMDstaking.UserInfo storage pointer"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1196,
													"src": "9568:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9547:32:8"
											},
											{
												"expression": {
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1989,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "9590:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																"typeString": "struct GMDstaking.UserInfo storage pointer"
															}
														},
														"id": 1991,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1196,
														"src": "9590:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9604:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9590:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1994,
												"nodeType": "ExpressionStatement",
												"src": "9590:15:8"
											},
											{
												"expression": {
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1995,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "9616:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1199_storage_ptr",
																"typeString": "struct GMDstaking.UserInfo storage pointer"
															}
														},
														"id": 1997,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1198,
														"src": "9616:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9634:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9616:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2000,
												"nodeType": "ExpressionStatement",
												"src": "9616:19:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2008,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9682:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9682:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9674:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2006,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9674:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9674:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "31303030",
																	"id": 2016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9722:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "373030",
																			"id": 2013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9713:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_700_by_1",
																				"typeString": "int_const 700"
																			},
																			"value": "700"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_700_by_1",
																				"typeString": "int_const 700"
																			}
																		],
																		"expression": {
																			"id": 2011,
																			"name": "oldUserAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1985,
																			"src": "9695:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1070,
																		"src": "9695:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9695:22:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1085,
																"src": "9695:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9695:32:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2001,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1969,
																"src": "9648:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																	"typeString": "struct GMDstaking.PoolInfo storage pointer"
																}
															},
															"id": 2004,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1202,
															"src": "9648:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															}
														},
														"id": 2005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "9648:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$230_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$230_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9648:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2019,
												"nodeType": "ExpressionStatement",
												"src": "9648:80:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2025,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "9765:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9765:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "31303030",
																	"id": 2032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9801:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "333030",
																			"id": 2029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9792:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_300_by_1",
																				"typeString": "int_const 300"
																			},
																			"value": "300"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_300_by_1",
																				"typeString": "int_const 300"
																			}
																		],
																		"expression": {
																			"id": 2027,
																			"name": "oldUserAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1985,
																			"src": "9774:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1070,
																		"src": "9774:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9774:22:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1085,
																"src": "9774:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9774:32:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2020,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1969,
																"src": "9739:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1209_storage_ptr",
																	"typeString": "struct GMDstaking.PoolInfo storage pointer"
																}
															},
															"id": 2023,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1202,
															"src": "9739:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															}
														},
														"id": 2024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "9739:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$230_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$230_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9739:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2035,
												"nodeType": "ExpressionStatement",
												"src": "9739:68:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2037,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9843:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9843:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2039,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "9855:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2040,
															"name": "oldUserAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "9861:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2036,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "9825:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9825:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2042,
												"nodeType": "EmitStatement",
												"src": "9820:55:8"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1965,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1964,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 151,
												"src": "9411:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "9411:12:8"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "9371:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "9397:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "9389:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9389:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9388:14:8"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9424:0:8"
									},
									"scope": 2083,
									"src": "9362:523:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2081,
										"nodeType": "Block",
										"src": "10064:213:8",
										"statements": [
											{
												"assignments": [
													2052
												],
												"declarations": [
													{
														"constant": false,
														"id": 2052,
														"mutability": "mutable",
														"name": "WETHBal",
														"nameLocation": "10083:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2081,
														"src": "10075:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2051,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10075:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2060,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2057,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10116:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GMDstaking_$2083",
																		"typeString": "contract GMDstaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GMDstaking_$2083",
																		"typeString": "contract GMDstaking"
																	}
																],
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10108:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2055,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10108:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10108:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2053,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "10093:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$230",
																"typeString": "contract IERC20"
															}
														},
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 187,
														"src": "10093:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10093:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10075:47:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2061,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2048,
														"src": "10137:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2062,
														"name": "WETHBal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2052,
														"src": "10147:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10137:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2079,
													"nodeType": "Block",
													"src": "10216:54:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2075,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "10245:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2076,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2048,
																		"src": "10250:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2072,
																		"name": "WETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "10231:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$230",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 197,
																	"src": "10231:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10231:27:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2078,
															"nodeType": "ExpressionStatement",
															"src": "10231:27:8"
														}
													]
												},
												"id": 2080,
												"nodeType": "IfStatement",
												"src": "10133:137:8",
												"trueBody": {
													"id": 2071,
													"nodeType": "Block",
													"src": "10156:54:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2067,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "10185:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2068,
																		"name": "WETHBal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2052,
																		"src": "10190:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2064,
																		"name": "WETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "10171:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$230",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 197,
																	"src": "10171:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10171:27:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2070,
															"nodeType": "ExpressionStatement",
															"src": "10171:27:8"
														}
													]
												}
											}
										]
									},
									"id": 2082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeWETHTransfer",
									"nameLocation": "10008:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "10033:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "10025:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10025:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10046:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "10038:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10038:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10024:30:8"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10064:0:8"
									},
									"scope": 2083,
									"src": "9999:278:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2084,
							"src": "372:9910:8",
							"usedErrors": []
						}
					],
					"src": "37:10247:8"
				},
				"id": 8
			}
		}
	}
}